Microsoft (R) Macro Assembler Version 14.10.25017.0	    01/02/19 13:45:00
Assembly.asm						     Page 1 - 1


				.386
				.model flat, stdcall
				include msvcrt.inc
			      C   ; ------------------------------------------
			      C   ; prototypes for EXPORT msvcrt functions
			      C   ; ------------------------------------------
			      C 
			      C     c_msvcrt typedef PROTO C :VARARG
			      C 
			      C     externdef _imp__$I10_OUTPUT:PTR c_msvcrt
 = _imp__$I10_OUTPUT	      C     crt_$I10_OUTPUT equ <_imp__$I10_OUTPUT>
			      C 
			      C     externdef _imp___CIacos:PTR c_msvcrt
 = _imp___CIacos	      C     crt__CIacos equ <_imp___CIacos>
			      C 
			      C     externdef _imp___CIasin:PTR c_msvcrt
 = _imp___CIasin	      C     crt__CIasin equ <_imp___CIasin>
			      C 
			      C     externdef _imp___CIatan:PTR c_msvcrt
 = _imp___CIatan	      C     crt__CIatan equ <_imp___CIatan>
			      C 
			      C     externdef _imp___CIatan2:PTR c_msvcrt
 = _imp___CIatan2	      C     crt__CIatan2 equ <_imp___CIatan2>
			      C 
			      C     externdef _imp___CIcos:PTR c_msvcrt
 = _imp___CIcos		      C     crt__CIcos equ <_imp___CIcos>
			      C 
			      C     externdef _imp___CIcosh:PTR c_msvcrt
 = _imp___CIcosh	      C     crt__CIcosh equ <_imp___CIcosh>
			      C 
			      C     externdef _imp___CIexp:PTR c_msvcrt
 = _imp___CIexp		      C     crt__CIexp equ <_imp___CIexp>
			      C 
			      C     externdef _imp___CIfmod:PTR c_msvcrt
 = _imp___CIfmod	      C     crt__CIfmod equ <_imp___CIfmod>
			      C 
			      C     externdef _imp___CIlog:PTR c_msvcrt
 = _imp___CIlog		      C     crt__CIlog equ <_imp___CIlog>
			      C 
			      C     externdef _imp___CIlog10:PTR c_msvcrt
 = _imp___CIlog10	      C     crt__CIlog10 equ <_imp___CIlog10>
			      C 
			      C     externdef _imp___CIpow:PTR c_msvcrt
 = _imp___CIpow		      C     crt__CIpow equ <_imp___CIpow>
			      C 
			      C     externdef _imp___CIsin:PTR c_msvcrt
 = _imp___CIsin		      C     crt__CIsin equ <_imp___CIsin>
			      C 
			      C     externdef _imp___CIsinh:PTR c_msvcrt
 = _imp___CIsinh	      C     crt__CIsinh equ <_imp___CIsinh>
			      C 
			      C     externdef _imp___CIsqrt:PTR c_msvcrt
 = _imp___CIsqrt	      C     crt__CIsqrt equ <_imp___CIsqrt>
			      C 
			      C     externdef _imp___CItan:PTR c_msvcrt
 = _imp___CItan		      C     crt__CItan equ <_imp___CItan>
			      C 
			      C     externdef _imp___CItanh:PTR c_msvcrt
 = _imp___CItanh	      C     crt__CItanh equ <_imp___CItanh>
			      C 
			      C     externdef _imp___CxxThrowException:PTR c_msvcrt
 = _imp___CxxThrowException   C     crt__CxxThrowException equ <_imp___CxxThrowException>
			      C 
			      C     externdef _imp___EH_prolog:PTR c_msvcrt
 = _imp___EH_prolog	      C     crt__EH_prolog equ <_imp___EH_prolog>
			      C 
			      C     externdef _imp___Getdays:PTR c_msvcrt
 = _imp___Getdays	      C     crt__Getdays equ <_imp___Getdays>
			      C 
			      C     externdef _imp___Getmonths:PTR c_msvcrt
 = _imp___Getmonths	      C     crt__Getmonths equ <_imp___Getmonths>
			      C 
			      C     externdef _imp___Gettnames:PTR c_msvcrt
 = _imp___Gettnames	      C     crt__Gettnames equ <_imp___Gettnames>
			      C 
			      C     externdef _imp___HUGE:PTR c_msvcrt
 = _imp___HUGE		      C     crt__HUGE equ <_imp___HUGE>
			      C 
			      C     externdef _imp___Strftime:PTR c_msvcrt
 = _imp___Strftime	      C     crt__Strftime equ <_imp___Strftime>
			      C 
			      C     externdef _imp___XcptFilter:PTR c_msvcrt
 = _imp___XcptFilter	      C     crt__XcptFilter equ <_imp___XcptFilter>
			      C 
			      C     externdef _imp____CxxFrameHandler:PTR c_msvcrt
 = _imp____CxxFrameHandler    C     crt___CxxFrameHandler equ <_imp____CxxFrameHandler>
			      C 
			      C     externdef _imp____CxxLongjmpUnwind:PTR c_msvcrt
 = _imp____CxxLongjmpUnwind   C     crt___CxxLongjmpUnwind equ <_imp____CxxLongjmpUnwind>
			      C 
			      C     externdef _imp____RTCastToVoid:PTR c_msvcrt
 = _imp____RTCastToVoid	      C     crt___RTCastToVoid equ <_imp____RTCastToVoid>
			      C 
			      C     externdef _imp____RTDynamicCast:PTR c_msvcrt
 = _imp____RTDynamicCast      C     crt___RTDynamicCast equ <_imp____RTDynamicCast>
			      C 
			      C     externdef _imp____RTtypeid:PTR c_msvcrt
 = _imp____RTtypeid	      C     crt___RTtypeid equ <_imp____RTtypeid>
			      C 
			      C     externdef _imp____STRINGTOLD:PTR c_msvcrt
 = _imp____STRINGTOLD	      C     crt___STRINGTOLD equ <_imp____STRINGTOLD>
			      C 
			      C     externdef _imp____argc:PTR c_msvcrt
 = _imp____argc		      C     crt___argc equ <_imp____argc>
			      C 
			      C     externdef _imp____argv:PTR c_msvcrt
 = _imp____argv		      C     crt___argv equ <_imp____argv>
			      C 
			      C     externdef _imp____badioinfo:PTR c_msvcrt
 = _imp____badioinfo	      C     crt___badioinfo equ <_imp____badioinfo>
			      C 
			      C     externdef _imp____crtCompareStringA:PTR c_msvcrt
 = _imp____crtCompareString   C     crt___crtCompareStringA equ <_imp____crtCompareStringA>
   A
			      C 
			      C     externdef _imp____crtGetLocaleInfoW:PTR c_msvcrt
 = _imp____crtGetLocaleInfo   C     crt___crtGetLocaleInfoW equ <_imp____crtGetLocaleInfoW>
   W
			      C 
			      C     externdef _imp____crtLCMapStringA:PTR c_msvcrt
 = _imp____crtLCMapStringA    C     crt___crtLCMapStringA equ <_imp____crtLCMapStringA>
			      C 
			      C     externdef _imp____dllonexit:PTR c_msvcrt
 = _imp____dllonexit	      C     crt___dllonexit equ <_imp____dllonexit>
			      C 
			      C     externdef _imp____doserrno:PTR c_msvcrt
 = _imp____doserrno	      C     crt___doserrno equ <_imp____doserrno>
			      C 
			      C     externdef _imp____fpecode:PTR c_msvcrt
 = _imp____fpecode	      C     crt___fpecode equ <_imp____fpecode>
			      C 
			      C     externdef _imp____getmainargs:PTR c_msvcrt
 = _imp____getmainargs	      C     crt___getmainargs equ <_imp____getmainargs>
			      C 
			      C     externdef _imp____initenv:PTR c_msvcrt
 = _imp____initenv	      C     crt___initenv equ <_imp____initenv>
			      C 
			      C     externdef _imp____isascii:PTR c_msvcrt
 = _imp____isascii	      C     crt___isascii equ <_imp____isascii>
			      C 
			      C     externdef _imp____iscsym:PTR c_msvcrt
 = _imp____iscsym	      C     crt___iscsym equ <_imp____iscsym>
			      C 
			      C     externdef _imp____iscsymf:PTR c_msvcrt
 = _imp____iscsymf	      C     crt___iscsymf equ <_imp____iscsymf>
			      C 
			      C     externdef _imp____lc_codepage:PTR c_msvcrt
 = _imp____lc_codepage	      C     crt___lc_codepage equ <_imp____lc_codepage>
			      C 
			      C     externdef _imp____lc_collate_cp:PTR c_msvcrt
 = _imp____lc_collate_cp      C     crt___lc_collate_cp equ <_imp____lc_collate_cp>
			      C 
			      C     externdef _imp____lc_handle:PTR c_msvcrt
 = _imp____lc_handle	      C     crt___lc_handle equ <_imp____lc_handle>
			      C 
			      C     externdef _imp____lconv_init:PTR c_msvcrt
 = _imp____lconv_init	      C     crt___lconv_init equ <_imp____lconv_init>
			      C 
			      C     externdef _imp____mb_cur_max:PTR c_msvcrt
 = _imp____mb_cur_max	      C     crt___mb_cur_max equ <_imp____mb_cur_max>
			      C 
			      C     externdef _imp____p___argc:PTR c_msvcrt
 = _imp____p___argc	      C     crt___p___argc equ <_imp____p___argc>
			      C 
			      C     externdef _imp____p___argv:PTR c_msvcrt
 = _imp____p___argv	      C     crt___p___argv equ <_imp____p___argv>
			      C 
			      C     externdef _imp____p___initenv:PTR c_msvcrt
 = _imp____p___initenv	      C     crt___p___initenv equ <_imp____p___initenv>
			      C 
			      C     externdef _imp____p___mb_cur_max:PTR c_msvcrt
 = _imp____p___mb_cur_max     C     crt___p___mb_cur_max equ <_imp____p___mb_cur_max>
			      C 
			      C     externdef _imp____p___wargv:PTR c_msvcrt
 = _imp____p___wargv	      C     crt___p___wargv equ <_imp____p___wargv>
			      C 
			      C     externdef _imp____p___winitenv:PTR c_msvcrt
 = _imp____p___winitenv	      C     crt___p___winitenv equ <_imp____p___winitenv>
			      C 
			      C     externdef _imp____p__acmdln:PTR c_msvcrt
 = _imp____p__acmdln	      C     crt___p__acmdln equ <_imp____p__acmdln>
			      C 
			      C     externdef _imp____p__amblksiz:PTR c_msvcrt
 = _imp____p__amblksiz	      C     crt___p__amblksiz equ <_imp____p__amblksiz>
			      C 
			      C     externdef _imp____p__commode:PTR c_msvcrt
 = _imp____p__commode	      C     crt___p__commode equ <_imp____p__commode>
			      C 
			      C     externdef _imp____p__daylight:PTR c_msvcrt
 = _imp____p__daylight	      C     crt___p__daylight equ <_imp____p__daylight>
			      C 
			      C     externdef _imp____p__dstbias:PTR c_msvcrt
 = _imp____p__dstbias	      C     crt___p__dstbias equ <_imp____p__dstbias>
			      C 
			      C     externdef _imp____p__environ:PTR c_msvcrt
 = _imp____p__environ	      C     crt___p__environ equ <_imp____p__environ>
			      C 
			      C     externdef _imp____p__fileinfo:PTR c_msvcrt
 = _imp____p__fileinfo	      C     crt___p__fileinfo equ <_imp____p__fileinfo>
			      C 
			      C     externdef _imp____p__fmode:PTR c_msvcrt
 = _imp____p__fmode	      C     crt___p__fmode equ <_imp____p__fmode>
			      C 
			      C     externdef _imp____p__iob:PTR c_msvcrt
 = _imp____p__iob	      C     crt___p__iob equ <_imp____p__iob>
			      C 
			      C     externdef _imp____p__mbcasemap:PTR c_msvcrt
 = _imp____p__mbcasemap	      C     crt___p__mbcasemap equ <_imp____p__mbcasemap>
			      C 
			      C     externdef _imp____p__mbctype:PTR c_msvcrt
 = _imp____p__mbctype	      C     crt___p__mbctype equ <_imp____p__mbctype>
			      C 
			      C     externdef _imp____p__osver:PTR c_msvcrt
 = _imp____p__osver	      C     crt___p__osver equ <_imp____p__osver>
			      C 
			      C     externdef _imp____p__pctype:PTR c_msvcrt
 = _imp____p__pctype	      C     crt___p__pctype equ <_imp____p__pctype>
			      C 
			      C     externdef _imp____p__pgmptr:PTR c_msvcrt
 = _imp____p__pgmptr	      C     crt___p__pgmptr equ <_imp____p__pgmptr>
			      C 
			      C     externdef _imp____p__pwctype:PTR c_msvcrt
 = _imp____p__pwctype	      C     crt___p__pwctype equ <_imp____p__pwctype>
			      C 
			      C     externdef _imp____p__timezone:PTR c_msvcrt
 = _imp____p__timezone	      C     crt___p__timezone equ <_imp____p__timezone>
			      C 
			      C     externdef _imp____p__tzname:PTR c_msvcrt
 = _imp____p__tzname	      C     crt___p__tzname equ <_imp____p__tzname>
			      C 
			      C     externdef _imp____p__wcmdln:PTR c_msvcrt
 = _imp____p__wcmdln	      C     crt___p__wcmdln equ <_imp____p__wcmdln>
			      C 
			      C     externdef _imp____p__wenviron:PTR c_msvcrt
 = _imp____p__wenviron	      C     crt___p__wenviron equ <_imp____p__wenviron>
			      C 
			      C     externdef _imp____p__winmajor:PTR c_msvcrt
 = _imp____p__winmajor	      C     crt___p__winmajor equ <_imp____p__winmajor>
			      C 
			      C     externdef _imp____p__winminor:PTR c_msvcrt
 = _imp____p__winminor	      C     crt___p__winminor equ <_imp____p__winminor>
			      C 
			      C     externdef _imp____p__winver:PTR c_msvcrt
 = _imp____p__winver	      C     crt___p__winver equ <_imp____p__winver>
			      C 
			      C     externdef _imp____p__wpgmptr:PTR c_msvcrt
 = _imp____p__wpgmptr	      C     crt___p__wpgmptr equ <_imp____p__wpgmptr>
			      C 
			      C     externdef _imp____pioinfo:PTR c_msvcrt
 = _imp____pioinfo	      C     crt___pioinfo equ <_imp____pioinfo>
			      C 
			      C     externdef _imp____pxcptinfoptrs:PTR c_msvcrt
 = _imp____pxcptinfoptrs      C     crt___pxcptinfoptrs equ <_imp____pxcptinfoptrs>
			      C 
			      C     externdef _imp____set_app_type:PTR c_msvcrt
 = _imp____set_app_type	      C     crt___set_app_type equ <_imp____set_app_type>
			      C 
			      C     externdef _imp____setlc_active:PTR c_msvcrt
 = _imp____setlc_active	      C     crt___setlc_active equ <_imp____setlc_active>
			      C 
			      C     externdef _imp____setusermatherr:PTR c_msvcrt
 = _imp____setusermatherr     C     crt___setusermatherr equ <_imp____setusermatherr>
			      C 
			      C     externdef _imp____threadhandle:PTR c_msvcrt
 = _imp____threadhandle	      C     crt___threadhandle equ <_imp____threadhandle>
			      C 
			      C     externdef _imp____threadid:PTR c_msvcrt
 = _imp____threadid	      C     crt___threadid equ <_imp____threadid>
			      C 
			      C     externdef _imp____toascii:PTR c_msvcrt
 = _imp____toascii	      C     crt___toascii equ <_imp____toascii>
			      C 
			      C     externdef _imp____unDName:PTR c_msvcrt
 = _imp____unDName	      C     crt___unDName equ <_imp____unDName>
			      C 
			      C     externdef _imp____unDNameEx:PTR c_msvcrt
 = _imp____unDNameEx	      C     crt___unDNameEx equ <_imp____unDNameEx>
			      C 
			      C     externdef _imp____unguarded_readlc_active:PTR c_msvcrt
 = _imp____unguarded_readlc   C     crt___unguarded_readlc_active equ <_imp____unguarded_readlc_active>
   _active
			      C 
			      C     externdef _imp____wargv:PTR c_msvcrt
 = _imp____wargv	      C     crt___wargv equ <_imp____wargv>
			      C 
			      C     externdef _imp____wgetmainargs:PTR c_msvcrt
 = _imp____wgetmainargs	      C     crt___wgetmainargs equ <_imp____wgetmainargs>
			      C 
			      C     externdef _imp____winitenv:PTR c_msvcrt
 = _imp____winitenv	      C     crt___winitenv equ <_imp____winitenv>
			      C 
			      C     externdef _imp___abnormal_termination:PTR c_msvcrt
 = _imp___abnormal_terminat   C     crt__abnormal_termination equ <_imp___abnormal_termination>
   ion
			      C 
			      C     externdef _imp___access:PTR c_msvcrt
 = _imp___access	      C     crt__access equ <_imp___access>
			      C 
			      C     externdef _imp___acmdln:PTR c_msvcrt
 = _imp___acmdln	      C     crt__acmdln equ <_imp___acmdln>
			      C 
			      C     externdef _imp___adj_fdiv_m16i:PTR c_msvcrt
 = _imp___adj_fdiv_m16i	      C     crt__adj_fdiv_m16i equ <_imp___adj_fdiv_m16i>
			      C 
			      C     externdef _imp___adj_fdiv_m32:PTR c_msvcrt
 = _imp___adj_fdiv_m32	      C     crt__adj_fdiv_m32 equ <_imp___adj_fdiv_m32>
			      C 
			      C     externdef _imp___adj_fdiv_m32i:PTR c_msvcrt
 = _imp___adj_fdiv_m32i	      C     crt__adj_fdiv_m32i equ <_imp___adj_fdiv_m32i>
			      C 
			      C     externdef _imp___adj_fdiv_m64:PTR c_msvcrt
 = _imp___adj_fdiv_m64	      C     crt__adj_fdiv_m64 equ <_imp___adj_fdiv_m64>
			      C 
			      C     externdef _imp___adj_fdiv_r:PTR c_msvcrt
 = _imp___adj_fdiv_r	      C     crt__adj_fdiv_r equ <_imp___adj_fdiv_r>
			      C 
			      C     externdef _imp___adj_fdivr_m16i:PTR c_msvcrt
 = _imp___adj_fdivr_m16i      C     crt__adj_fdivr_m16i equ <_imp___adj_fdivr_m16i>
			      C 
			      C     externdef _imp___adj_fdivr_m32:PTR c_msvcrt
 = _imp___adj_fdivr_m32	      C     crt__adj_fdivr_m32 equ <_imp___adj_fdivr_m32>
			      C 
			      C     externdef _imp___adj_fdivr_m32i:PTR c_msvcrt
 = _imp___adj_fdivr_m32i      C     crt__adj_fdivr_m32i equ <_imp___adj_fdivr_m32i>
			      C 
			      C     externdef _imp___adj_fdivr_m64:PTR c_msvcrt
 = _imp___adj_fdivr_m64	      C     crt__adj_fdivr_m64 equ <_imp___adj_fdivr_m64>
			      C 
			      C     externdef _imp___adj_fpatan:PTR c_msvcrt
 = _imp___adj_fpatan	      C     crt__adj_fpatan equ <_imp___adj_fpatan>
			      C 
			      C     externdef _imp___adj_fprem:PTR c_msvcrt
 = _imp___adj_fprem	      C     crt__adj_fprem equ <_imp___adj_fprem>
			      C 
			      C     externdef _imp___adj_fprem1:PTR c_msvcrt
 = _imp___adj_fprem1	      C     crt__adj_fprem1 equ <_imp___adj_fprem1>
			      C 
			      C     externdef _imp___adj_fptan:PTR c_msvcrt
 = _imp___adj_fptan	      C     crt__adj_fptan equ <_imp___adj_fptan>
			      C 
			      C     externdef _imp___adjust_fdiv:PTR c_msvcrt
 = _imp___adjust_fdiv	      C     crt__adjust_fdiv equ <_imp___adjust_fdiv>
			      C 
			      C     externdef _imp___aexit_rtn:PTR c_msvcrt
 = _imp___aexit_rtn	      C     crt__aexit_rtn equ <_imp___aexit_rtn>
			      C 
			      C     externdef _imp___amsg_exit:PTR c_msvcrt
 = _imp___amsg_exit	      C     crt__amsg_exit equ <_imp___amsg_exit>
			      C 
			      C     externdef _imp___assert:PTR c_msvcrt
 = _imp___assert	      C     crt__assert equ <_imp___assert>
			      C 
			      C     externdef _imp___atodbl:PTR c_msvcrt
 = _imp___atodbl	      C     crt__atodbl equ <_imp___atodbl>
			      C 
			      C     externdef _imp___atoi64:PTR c_msvcrt
 = _imp___atoi64	      C     crt__atoi64 equ <_imp___atoi64>
			      C 
			      C     externdef _imp___atoldbl:PTR c_msvcrt
 = _imp___atoldbl	      C     crt__atoldbl equ <_imp___atoldbl>
			      C 
			      C     externdef _imp___beep:PTR c_msvcrt
 = _imp___beep		      C     crt__beep equ <_imp___beep>
			      C 
			      C     externdef _imp___beginthread:PTR c_msvcrt
 = _imp___beginthread	      C     crt__beginthread equ <_imp___beginthread>
			      C 
			      C     externdef _imp___beginthreadex:PTR c_msvcrt
 = _imp___beginthreadex	      C     crt__beginthreadex equ <_imp___beginthreadex>
			      C 
			      C     externdef _imp___c_exit:PTR c_msvcrt
 = _imp___c_exit	      C     crt__c_exit equ <_imp___c_exit>
			      C 
			      C     externdef _imp___cabs:PTR c_msvcrt
 = _imp___cabs		      C     crt__cabs equ <_imp___cabs>
			      C 
			      C     externdef _imp___callnewh:PTR c_msvcrt
 = _imp___callnewh	      C     crt__callnewh equ <_imp___callnewh>
			      C 
			      C     externdef _imp___cexit:PTR c_msvcrt
 = _imp___cexit		      C     crt__cexit equ <_imp___cexit>
			      C 
			      C     externdef _imp___cgets:PTR c_msvcrt
 = _imp___cgets		      C     crt__cgets equ <_imp___cgets>
			      C 
			      C     externdef _imp___chdir:PTR c_msvcrt
 = _imp___chdir		      C     crt__chdir equ <_imp___chdir>
			      C 
			      C     externdef _imp___chdrive:PTR c_msvcrt
 = _imp___chdrive	      C     crt__chdrive equ <_imp___chdrive>
			      C 
			      C     externdef _imp___chgsign:PTR c_msvcrt
 = _imp___chgsign	      C     crt__chgsign equ <_imp___chgsign>
			      C 
			      C     externdef _imp___chkesp:PTR c_msvcrt
 = _imp___chkesp	      C     crt__chkesp equ <_imp___chkesp>
			      C 
			      C     externdef _imp___chmod:PTR c_msvcrt
 = _imp___chmod		      C     crt__chmod equ <_imp___chmod>
			      C 
			      C     externdef _imp___chsize:PTR c_msvcrt
 = _imp___chsize	      C     crt__chsize equ <_imp___chsize>
			      C 
			      C     externdef _imp___clearfp:PTR c_msvcrt
 = _imp___clearfp	      C     crt__clearfp equ <_imp___clearfp>
			      C 
			      C     externdef _imp___close:PTR c_msvcrt
 = _imp___close		      C     crt__close equ <_imp___close>
			      C 
			      C     externdef _imp___commit:PTR c_msvcrt
 = _imp___commit	      C     crt__commit equ <_imp___commit>
			      C 
			      C     externdef _imp___commode:PTR c_msvcrt
 = _imp___commode	      C     crt__commode equ <_imp___commode>
			      C 
			      C     externdef _imp___control87:PTR c_msvcrt
 = _imp___control87	      C     crt__control87 equ <_imp___control87>
			      C 
			      C     externdef _imp___controlfp:PTR c_msvcrt
 = _imp___controlfp	      C     crt__controlfp equ <_imp___controlfp>
			      C 
			      C     externdef _imp___copysign:PTR c_msvcrt
 = _imp___copysign	      C     crt__copysign equ <_imp___copysign>
			      C 
			      C     externdef _imp___cprintf:PTR c_msvcrt
 = _imp___cprintf	      C     crt__cprintf equ <_imp___cprintf>
			      C 
			      C     externdef _imp___cputs:PTR c_msvcrt
 = _imp___cputs		      C     crt__cputs equ <_imp___cputs>
			      C 
			      C     externdef _imp___creat:PTR c_msvcrt
 = _imp___creat		      C     crt__creat equ <_imp___creat>
			      C 
			      C     externdef _imp___cscanf:PTR c_msvcrt
 = _imp___cscanf	      C     crt__cscanf equ <_imp___cscanf>
			      C 
			      C     externdef _imp___ctime64:PTR c_msvcrt
 = _imp___ctime64	      C     crt__ctime64 equ <_imp___ctime64>
			      C 
			      C     externdef _imp___ctype:PTR c_msvcrt
 = _imp___ctype		      C     crt__ctype equ <_imp___ctype>
			      C 
			      C     externdef _imp___cwait:PTR c_msvcrt
 = _imp___cwait		      C     crt__cwait equ <_imp___cwait>
			      C 
			      C     externdef _imp___daylight:PTR c_msvcrt
 = _imp___daylight	      C     crt__daylight equ <_imp___daylight>
			      C 
			      C     externdef _imp___dstbias:PTR c_msvcrt
 = _imp___dstbias	      C     crt__dstbias equ <_imp___dstbias>
			      C 
			      C     externdef _imp___dup:PTR c_msvcrt
 = _imp___dup		      C     crt__dup equ <_imp___dup>
			      C 
			      C     externdef _imp___dup2:PTR c_msvcrt
 = _imp___dup2		      C     crt__dup2 equ <_imp___dup2>
			      C 
			      C     externdef _imp___ecvt:PTR c_msvcrt
 = _imp___ecvt		      C     crt__ecvt equ <_imp___ecvt>
			      C 
			      C     externdef _imp___endthread:PTR c_msvcrt
 = _imp___endthread	      C     crt__endthread equ <_imp___endthread>
			      C 
			      C     externdef _imp___endthreadex:PTR c_msvcrt
 = _imp___endthreadex	      C     crt__endthreadex equ <_imp___endthreadex>
			      C 
			      C     externdef _imp___environ:PTR c_msvcrt
 = _imp___environ	      C     crt__environ equ <_imp___environ>
			      C 
			      C     externdef _imp___eof:PTR c_msvcrt
 = _imp___eof		      C     crt__eof equ <_imp___eof>
			      C 
			      C     externdef _imp___errno:PTR c_msvcrt
 = _imp___errno		      C     crt__errno equ <_imp___errno>
			      C 
			      C     externdef _imp___except_handler2:PTR c_msvcrt
 = _imp___except_handler2     C     crt__except_handler2 equ <_imp___except_handler2>
			      C 
			      C     externdef _imp___except_handler3:PTR c_msvcrt
 = _imp___except_handler3     C     crt__except_handler3 equ <_imp___except_handler3>
			      C 
			      C     externdef _imp___execl:PTR c_msvcrt
 = _imp___execl		      C     crt__execl equ <_imp___execl>
			      C 
			      C     externdef _imp___execle:PTR c_msvcrt
 = _imp___execle	      C     crt__execle equ <_imp___execle>
			      C 
			      C     externdef _imp___execlp:PTR c_msvcrt
 = _imp___execlp	      C     crt__execlp equ <_imp___execlp>
			      C 
			      C     externdef _imp___execlpe:PTR c_msvcrt
 = _imp___execlpe	      C     crt__execlpe equ <_imp___execlpe>
			      C 
			      C     externdef _imp___execv:PTR c_msvcrt
 = _imp___execv		      C     crt__execv equ <_imp___execv>
			      C 
			      C     externdef _imp___execve:PTR c_msvcrt
 = _imp___execve	      C     crt__execve equ <_imp___execve>
			      C 
			      C     externdef _imp___execvp:PTR c_msvcrt
 = _imp___execvp	      C     crt__execvp equ <_imp___execvp>
			      C 
			      C     externdef _imp___execvpe:PTR c_msvcrt
 = _imp___execvpe	      C     crt__execvpe equ <_imp___execvpe>
			      C 
			      C     externdef _imp___exit:PTR c_msvcrt
 = _imp___exit		      C     crt__exit equ <_imp___exit>
			      C 
			      C     externdef _imp___expand:PTR c_msvcrt
 = _imp___expand	      C     crt__expand equ <_imp___expand>
			      C 
			      C     externdef _imp___fcloseall:PTR c_msvcrt
 = _imp___fcloseall	      C     crt__fcloseall equ <_imp___fcloseall>
			      C 
			      C     externdef _imp___fcvt:PTR c_msvcrt
 = _imp___fcvt		      C     crt__fcvt equ <_imp___fcvt>
			      C 
			      C     externdef _imp___fdopen:PTR c_msvcrt
 = _imp___fdopen	      C     crt__fdopen equ <_imp___fdopen>
			      C 
			      C     externdef _imp___fgetchar:PTR c_msvcrt
 = _imp___fgetchar	      C     crt__fgetchar equ <_imp___fgetchar>
			      C 
			      C     externdef _imp___fgetwchar:PTR c_msvcrt
 = _imp___fgetwchar	      C     crt__fgetwchar equ <_imp___fgetwchar>
			      C 
			      C     externdef _imp___filbuf:PTR c_msvcrt
 = _imp___filbuf	      C     crt__filbuf equ <_imp___filbuf>
			      C 
			      C     externdef _imp___fileinfo:PTR c_msvcrt
 = _imp___fileinfo	      C     crt__fileinfo equ <_imp___fileinfo>
			      C 
			      C     externdef _imp___filelength:PTR c_msvcrt
 = _imp___filelength	      C     crt__filelength equ <_imp___filelength>
			      C 
			      C     externdef _imp___filelengthi64:PTR c_msvcrt
 = _imp___filelengthi64	      C     crt__filelengthi64 equ <_imp___filelengthi64>
			      C 
			      C     externdef _imp___fileno:PTR c_msvcrt
 = _imp___fileno	      C     crt__fileno equ <_imp___fileno>
			      C 
			      C     externdef _imp___findclose:PTR c_msvcrt
 = _imp___findclose	      C     crt__findclose equ <_imp___findclose>
			      C 
			      C     externdef _imp___findfirst:PTR c_msvcrt
 = _imp___findfirst	      C     crt__findfirst equ <_imp___findfirst>
			      C 
			      C     externdef _imp___findfirst64:PTR c_msvcrt
 = _imp___findfirst64	      C     crt__findfirst64 equ <_imp___findfirst64>
			      C 
			      C     externdef _imp___findfirsti64:PTR c_msvcrt
 = _imp___findfirsti64	      C     crt__findfirsti64 equ <_imp___findfirsti64>
			      C 
			      C     externdef _imp___findnext:PTR c_msvcrt
 = _imp___findnext	      C     crt__findnext equ <_imp___findnext>
			      C 
			      C     externdef _imp___findnext64:PTR c_msvcrt
 = _imp___findnext64	      C     crt__findnext64 equ <_imp___findnext64>
			      C 
			      C     externdef _imp___findnexti64:PTR c_msvcrt
 = _imp___findnexti64	      C     crt__findnexti64 equ <_imp___findnexti64>
			      C 
			      C     externdef _imp___finite:PTR c_msvcrt
 = _imp___finite	      C     crt__finite equ <_imp___finite>
			      C 
			      C     externdef _imp___flsbuf:PTR c_msvcrt
 = _imp___flsbuf	      C     crt__flsbuf equ <_imp___flsbuf>
			      C 
			      C     externdef _imp___flushall:PTR c_msvcrt
 = _imp___flushall	      C     crt__flushall equ <_imp___flushall>
			      C 
			      C     externdef _imp___fmode:PTR c_msvcrt
 = _imp___fmode		      C     crt__fmode equ <_imp___fmode>
			      C 
			      C     externdef _imp___fpclass:PTR c_msvcrt
 = _imp___fpclass	      C     crt__fpclass equ <_imp___fpclass>
			      C 
			      C     externdef _imp___fpieee_flt:PTR c_msvcrt
 = _imp___fpieee_flt	      C     crt__fpieee_flt equ <_imp___fpieee_flt>
			      C 
			      C     externdef _imp___fpreset:PTR c_msvcrt
 = _imp___fpreset	      C     crt__fpreset equ <_imp___fpreset>
			      C 
			      C     externdef _imp___fputchar:PTR c_msvcrt
 = _imp___fputchar	      C     crt__fputchar equ <_imp___fputchar>
			      C 
			      C     externdef _imp___fputwchar:PTR c_msvcrt
 = _imp___fputwchar	      C     crt__fputwchar equ <_imp___fputwchar>
			      C 
			      C     externdef _imp___fsopen:PTR c_msvcrt
 = _imp___fsopen	      C     crt__fsopen equ <_imp___fsopen>
			      C 
			      C     externdef _imp___fstat:PTR c_msvcrt
 = _imp___fstat		      C     crt__fstat equ <_imp___fstat>
			      C 
			      C     externdef _imp___fstat64:PTR c_msvcrt
 = _imp___fstat64	      C     crt__fstat64 equ <_imp___fstat64>
			      C 
			      C     externdef _imp___fstati64:PTR c_msvcrt
 = _imp___fstati64	      C     crt__fstati64 equ <_imp___fstati64>
			      C 
			      C     externdef _imp___ftime:PTR c_msvcrt
 = _imp___ftime		      C     crt__ftime equ <_imp___ftime>
			      C 
			      C     externdef _imp___ftime64:PTR c_msvcrt
 = _imp___ftime64	      C     crt__ftime64 equ <_imp___ftime64>
			      C 
			      C     externdef _imp___ftol:PTR c_msvcrt
 = _imp___ftol		      C     crt__ftol equ <_imp___ftol>
			      C 
			      C     externdef _imp___fullpath:PTR c_msvcrt
 = _imp___fullpath	      C     crt__fullpath equ <_imp___fullpath>
			      C 
			      C     externdef _imp___futime:PTR c_msvcrt
 = _imp___futime	      C     crt__futime equ <_imp___futime>
			      C 
			      C     externdef _imp___futime64:PTR c_msvcrt
 = _imp___futime64	      C     crt__futime64 equ <_imp___futime64>
			      C 
			      C     externdef _imp___gcvt:PTR c_msvcrt
 = _imp___gcvt		      C     crt__gcvt equ <_imp___gcvt>
			      C 
			      C     externdef _imp___get_heap_handle:PTR c_msvcrt
 = _imp___get_heap_handle     C     crt__get_heap_handle equ <_imp___get_heap_handle>
			      C 
			      C     externdef _imp___get_osfhandle:PTR c_msvcrt
 = _imp___get_osfhandle	      C     crt__get_osfhandle equ <_imp___get_osfhandle>
			      C 
			      C     externdef _imp___get_sbh_threshold:PTR c_msvcrt
 = _imp___get_sbh_threshold   C     crt__get_sbh_threshold equ <_imp___get_sbh_threshold>
			      C 
			      C     externdef _imp___getch:PTR c_msvcrt
 = _imp___getch		      C     crt__getch equ <_imp___getch>
			      C 
			      C     externdef _imp___getche:PTR c_msvcrt
 = _imp___getche	      C     crt__getche equ <_imp___getche>
			      C 
			      C     externdef _imp___getcwd:PTR c_msvcrt
 = _imp___getcwd	      C     crt__getcwd equ <_imp___getcwd>
			      C 
			      C     externdef _imp___getdcwd:PTR c_msvcrt
 = _imp___getdcwd	      C     crt__getdcwd equ <_imp___getdcwd>
			      C 
			      C     externdef _imp___getdiskfree:PTR c_msvcrt
 = _imp___getdiskfree	      C     crt__getdiskfree equ <_imp___getdiskfree>
			      C 
			      C     externdef _imp___getdllprocaddr:PTR c_msvcrt
 = _imp___getdllprocaddr      C     crt__getdllprocaddr equ <_imp___getdllprocaddr>
			      C 
			      C     externdef _imp___getdrive:PTR c_msvcrt
 = _imp___getdrive	      C     crt__getdrive equ <_imp___getdrive>
			      C 
			      C     externdef _imp___getdrives:PTR c_msvcrt
 = _imp___getdrives	      C     crt__getdrives equ <_imp___getdrives>
			      C 
			      C     externdef _imp___getmaxstdio:PTR c_msvcrt
 = _imp___getmaxstdio	      C     crt__getmaxstdio equ <_imp___getmaxstdio>
			      C 
			      C     externdef _imp___getmbcp:PTR c_msvcrt
 = _imp___getmbcp	      C     crt__getmbcp equ <_imp___getmbcp>
			      C 
			      C     externdef _imp___getpid:PTR c_msvcrt
 = _imp___getpid	      C     crt__getpid equ <_imp___getpid>
			      C 
			      C     externdef _imp___getsystime:PTR c_msvcrt
 = _imp___getsystime	      C     crt__getsystime equ <_imp___getsystime>
			      C 
			      C     externdef _imp___getw:PTR c_msvcrt
 = _imp___getw		      C     crt__getw equ <_imp___getw>
			      C 
			      C     externdef _imp___getws:PTR c_msvcrt
 = _imp___getws		      C     crt__getws equ <_imp___getws>
			      C 
			      C     externdef _imp___global_unwind2:PTR c_msvcrt
 = _imp___global_unwind2      C     crt__global_unwind2 equ <_imp___global_unwind2>
			      C 
			      C     externdef _imp___gmtime64:PTR c_msvcrt
 = _imp___gmtime64	      C     crt__gmtime64 equ <_imp___gmtime64>
			      C 
			      C     externdef _imp___heapadd:PTR c_msvcrt
 = _imp___heapadd	      C     crt__heapadd equ <_imp___heapadd>
			      C 
			      C     externdef _imp___heapchk:PTR c_msvcrt
 = _imp___heapchk	      C     crt__heapchk equ <_imp___heapchk>
			      C 
			      C     externdef _imp___heapmin:PTR c_msvcrt
 = _imp___heapmin	      C     crt__heapmin equ <_imp___heapmin>
			      C 
			      C     externdef _imp___heapset:PTR c_msvcrt
 = _imp___heapset	      C     crt__heapset equ <_imp___heapset>
			      C 
			      C     externdef _imp___heapused:PTR c_msvcrt
 = _imp___heapused	      C     crt__heapused equ <_imp___heapused>
			      C 
			      C     externdef _imp___heapwalk:PTR c_msvcrt
 = _imp___heapwalk	      C     crt__heapwalk equ <_imp___heapwalk>
			      C 
			      C     externdef _imp___hypot:PTR c_msvcrt
 = _imp___hypot		      C     crt__hypot equ <_imp___hypot>
			      C 
			      C     externdef _imp___i64toa:PTR c_msvcrt
 = _imp___i64toa	      C     crt__i64toa equ <_imp___i64toa>
			      C 
			      C     externdef _imp___i64tow:PTR c_msvcrt
 = _imp___i64tow	      C     crt__i64tow equ <_imp___i64tow>
			      C 
			      C     externdef _imp___initterm:PTR c_msvcrt
 = _imp___initterm	      C     crt__initterm equ <_imp___initterm>
			      C 
			      C     externdef _imp___inp:PTR c_msvcrt
 = _imp___inp		      C     crt__inp equ <_imp___inp>
			      C 
			      C     externdef _imp___inpd:PTR c_msvcrt
 = _imp___inpd		      C     crt__inpd equ <_imp___inpd>
			      C 
			      C     externdef _imp___inpw:PTR c_msvcrt
 = _imp___inpw		      C     crt__inpw equ <_imp___inpw>
			      C 
			      C     externdef _imp___iob:PTR c_msvcrt
 = _imp___iob		      C     crt__iob equ <_imp___iob>
			      C 
			      C     externdef _imp___isatty:PTR c_msvcrt
 = _imp___isatty	      C     crt__isatty equ <_imp___isatty>
			      C 
			      C     externdef _imp___isctype:PTR c_msvcrt
 = _imp___isctype	      C     crt__isctype equ <_imp___isctype>
			      C 
			      C     externdef _imp___ismbbalnum:PTR c_msvcrt
 = _imp___ismbbalnum	      C     crt__ismbbalnum equ <_imp___ismbbalnum>
			      C 
			      C     externdef _imp___ismbbalpha:PTR c_msvcrt
 = _imp___ismbbalpha	      C     crt__ismbbalpha equ <_imp___ismbbalpha>
			      C 
			      C     externdef _imp___ismbbgraph:PTR c_msvcrt
 = _imp___ismbbgraph	      C     crt__ismbbgraph equ <_imp___ismbbgraph>
			      C 
			      C     externdef _imp___ismbbkalnum:PTR c_msvcrt
 = _imp___ismbbkalnum	      C     crt__ismbbkalnum equ <_imp___ismbbkalnum>
			      C 
			      C     externdef _imp___ismbbkana:PTR c_msvcrt
 = _imp___ismbbkana	      C     crt__ismbbkana equ <_imp___ismbbkana>
			      C 
			      C     externdef _imp___ismbbkprint:PTR c_msvcrt
 = _imp___ismbbkprint	      C     crt__ismbbkprint equ <_imp___ismbbkprint>
			      C 
			      C     externdef _imp___ismbbkpunct:PTR c_msvcrt
 = _imp___ismbbkpunct	      C     crt__ismbbkpunct equ <_imp___ismbbkpunct>
			      C 
			      C     externdef _imp___ismbblead:PTR c_msvcrt
 = _imp___ismbblead	      C     crt__ismbblead equ <_imp___ismbblead>
			      C 
			      C     externdef _imp___ismbbprint:PTR c_msvcrt
 = _imp___ismbbprint	      C     crt__ismbbprint equ <_imp___ismbbprint>
			      C 
			      C     externdef _imp___ismbbpunct:PTR c_msvcrt
 = _imp___ismbbpunct	      C     crt__ismbbpunct equ <_imp___ismbbpunct>
			      C 
			      C     externdef _imp___ismbbtrail:PTR c_msvcrt
 = _imp___ismbbtrail	      C     crt__ismbbtrail equ <_imp___ismbbtrail>
			      C 
			      C     externdef _imp___ismbcalnum:PTR c_msvcrt
 = _imp___ismbcalnum	      C     crt__ismbcalnum equ <_imp___ismbcalnum>
			      C 
			      C     externdef _imp___ismbcalpha:PTR c_msvcrt
 = _imp___ismbcalpha	      C     crt__ismbcalpha equ <_imp___ismbcalpha>
			      C 
			      C     externdef _imp___ismbcdigit:PTR c_msvcrt
 = _imp___ismbcdigit	      C     crt__ismbcdigit equ <_imp___ismbcdigit>
			      C 
			      C     externdef _imp___ismbcgraph:PTR c_msvcrt
 = _imp___ismbcgraph	      C     crt__ismbcgraph equ <_imp___ismbcgraph>
			      C 
			      C     externdef _imp___ismbchira:PTR c_msvcrt
 = _imp___ismbchira	      C     crt__ismbchira equ <_imp___ismbchira>
			      C 
			      C     externdef _imp___ismbckata:PTR c_msvcrt
 = _imp___ismbckata	      C     crt__ismbckata equ <_imp___ismbckata>
			      C 
			      C     externdef _imp___ismbcl0:PTR c_msvcrt
 = _imp___ismbcl0	      C     crt__ismbcl0 equ <_imp___ismbcl0>
			      C 
			      C     externdef _imp___ismbcl1:PTR c_msvcrt
 = _imp___ismbcl1	      C     crt__ismbcl1 equ <_imp___ismbcl1>
			      C 
			      C     externdef _imp___ismbcl2:PTR c_msvcrt
 = _imp___ismbcl2	      C     crt__ismbcl2 equ <_imp___ismbcl2>
			      C 
			      C     externdef _imp___ismbclegal:PTR c_msvcrt
 = _imp___ismbclegal	      C     crt__ismbclegal equ <_imp___ismbclegal>
			      C 
			      C     externdef _imp___ismbclower:PTR c_msvcrt
 = _imp___ismbclower	      C     crt__ismbclower equ <_imp___ismbclower>
			      C 
			      C     externdef _imp___ismbcprint:PTR c_msvcrt
 = _imp___ismbcprint	      C     crt__ismbcprint equ <_imp___ismbcprint>
			      C 
			      C     externdef _imp___ismbcpunct:PTR c_msvcrt
 = _imp___ismbcpunct	      C     crt__ismbcpunct equ <_imp___ismbcpunct>
			      C 
			      C     externdef _imp___ismbcspace:PTR c_msvcrt
 = _imp___ismbcspace	      C     crt__ismbcspace equ <_imp___ismbcspace>
			      C 
			      C     externdef _imp___ismbcsymbol:PTR c_msvcrt
 = _imp___ismbcsymbol	      C     crt__ismbcsymbol equ <_imp___ismbcsymbol>
			      C 
			      C     externdef _imp___ismbcupper:PTR c_msvcrt
 = _imp___ismbcupper	      C     crt__ismbcupper equ <_imp___ismbcupper>
			      C 
			      C     externdef _imp___ismbslead:PTR c_msvcrt
 = _imp___ismbslead	      C     crt__ismbslead equ <_imp___ismbslead>
			      C 
			      C     externdef _imp___ismbstrail:PTR c_msvcrt
 = _imp___ismbstrail	      C     crt__ismbstrail equ <_imp___ismbstrail>
			      C 
			      C     externdef _imp___isnan:PTR c_msvcrt
 = _imp___isnan		      C     crt__isnan equ <_imp___isnan>
			      C 
			      C     externdef _imp___itoa:PTR c_msvcrt
 = _imp___itoa		      C     crt__itoa equ <_imp___itoa>
			      C 
			      C     externdef _imp___itow:PTR c_msvcrt
 = _imp___itow		      C     crt__itow equ <_imp___itow>
			      C 
			      C     externdef _imp___j0:PTR c_msvcrt
 = _imp___j0		      C     crt__j0 equ <_imp___j0>
			      C 
			      C     externdef _imp___j1:PTR c_msvcrt
 = _imp___j1		      C     crt__j1 equ <_imp___j1>
			      C 
			      C     externdef _imp___jn:PTR c_msvcrt
 = _imp___jn		      C     crt__jn equ <_imp___jn>
			      C 
			      C     externdef _imp___kbhit:PTR c_msvcrt
 = _imp___kbhit		      C     crt__kbhit equ <_imp___kbhit>
			      C 
			      C     externdef _imp___lfind:PTR c_msvcrt
 = _imp___lfind		      C     crt__lfind equ <_imp___lfind>
			      C 
			      C     externdef _imp___loaddll:PTR c_msvcrt
 = _imp___loaddll	      C     crt__loaddll equ <_imp___loaddll>
			      C 
			      C     externdef _imp___local_unwind2:PTR c_msvcrt
 = _imp___local_unwind2	      C     crt__local_unwind2 equ <_imp___local_unwind2>
			      C 
			      C     externdef _imp___localtime64:PTR c_msvcrt
 = _imp___localtime64	      C     crt__localtime64 equ <_imp___localtime64>
			      C 
			      C     externdef _imp___lock:PTR c_msvcrt
 = _imp___lock		      C     crt__lock equ <_imp___lock>
			      C 
			      C     externdef _imp___locking:PTR c_msvcrt
 = _imp___locking	      C     crt__locking equ <_imp___locking>
			      C 
			      C     externdef _imp___logb:PTR c_msvcrt
 = _imp___logb		      C     crt__logb equ <_imp___logb>
			      C 
			      C     externdef _imp___longjmpex:PTR c_msvcrt
 = _imp___longjmpex	      C     crt__longjmpex equ <_imp___longjmpex>
			      C 
			      C     externdef _imp___lrotl:PTR c_msvcrt
 = _imp___lrotl		      C     crt__lrotl equ <_imp___lrotl>
			      C 
			      C     externdef _imp___lrotr:PTR c_msvcrt
 = _imp___lrotr		      C     crt__lrotr equ <_imp___lrotr>
			      C 
			      C     externdef _imp___lsearch:PTR c_msvcrt
 = _imp___lsearch	      C     crt__lsearch equ <_imp___lsearch>
			      C 
			      C     externdef _imp___lseek:PTR c_msvcrt
 = _imp___lseek		      C     crt__lseek equ <_imp___lseek>
			      C 
			      C     externdef _imp___lseeki64:PTR c_msvcrt
 = _imp___lseeki64	      C     crt__lseeki64 equ <_imp___lseeki64>
			      C 
			      C     externdef _imp___ltoa:PTR c_msvcrt
 = _imp___ltoa		      C     crt__ltoa equ <_imp___ltoa>
			      C 
			      C     externdef _imp___ltow:PTR c_msvcrt
 = _imp___ltow		      C     crt__ltow equ <_imp___ltow>
			      C 
			      C     externdef _imp___makepath:PTR c_msvcrt
 = _imp___makepath	      C     crt__makepath equ <_imp___makepath>
			      C 
			      C     externdef _imp___mbbtombc:PTR c_msvcrt
 = _imp___mbbtombc	      C     crt__mbbtombc equ <_imp___mbbtombc>
			      C 
			      C     externdef _imp___mbbtype:PTR c_msvcrt
 = _imp___mbbtype	      C     crt__mbbtype equ <_imp___mbbtype>
			      C 
			      C     externdef _imp___mbcasemap:PTR c_msvcrt
 = _imp___mbcasemap	      C     crt__mbcasemap equ <_imp___mbcasemap>
			      C 
			      C     externdef _imp___mbccpy:PTR c_msvcrt
 = _imp___mbccpy	      C     crt__mbccpy equ <_imp___mbccpy>
			      C 
			      C     externdef _imp___mbcjistojms:PTR c_msvcrt
 = _imp___mbcjistojms	      C     crt__mbcjistojms equ <_imp___mbcjistojms>
			      C 
			      C     externdef _imp___mbcjmstojis:PTR c_msvcrt
 = _imp___mbcjmstojis	      C     crt__mbcjmstojis equ <_imp___mbcjmstojis>
			      C 
			      C     externdef _imp___mbclen:PTR c_msvcrt
 = _imp___mbclen	      C     crt__mbclen equ <_imp___mbclen>
			      C 
			      C     externdef _imp___mbctohira:PTR c_msvcrt
 = _imp___mbctohira	      C     crt__mbctohira equ <_imp___mbctohira>
			      C 
			      C     externdef _imp___mbctokata:PTR c_msvcrt
 = _imp___mbctokata	      C     crt__mbctokata equ <_imp___mbctokata>
			      C 
			      C     externdef _imp___mbctolower:PTR c_msvcrt
 = _imp___mbctolower	      C     crt__mbctolower equ <_imp___mbctolower>
			      C 
			      C     externdef _imp___mbctombb:PTR c_msvcrt
 = _imp___mbctombb	      C     crt__mbctombb equ <_imp___mbctombb>
			      C 
			      C     externdef _imp___mbctoupper:PTR c_msvcrt
 = _imp___mbctoupper	      C     crt__mbctoupper equ <_imp___mbctoupper>
			      C 
			      C     externdef _imp___mbctype:PTR c_msvcrt
 = _imp___mbctype	      C     crt__mbctype equ <_imp___mbctype>
			      C 
			      C     externdef _imp___mbsbtype:PTR c_msvcrt
 = _imp___mbsbtype	      C     crt__mbsbtype equ <_imp___mbsbtype>
			      C 
			      C     externdef _imp___mbscat:PTR c_msvcrt
 = _imp___mbscat	      C     crt__mbscat equ <_imp___mbscat>
			      C 
			      C     externdef _imp___mbschr:PTR c_msvcrt
 = _imp___mbschr	      C     crt__mbschr equ <_imp___mbschr>
			      C 
			      C     externdef _imp___mbscmp:PTR c_msvcrt
 = _imp___mbscmp	      C     crt__mbscmp equ <_imp___mbscmp>
			      C 
			      C     externdef _imp___mbscoll:PTR c_msvcrt
 = _imp___mbscoll	      C     crt__mbscoll equ <_imp___mbscoll>
			      C 
			      C     externdef _imp___mbscpy:PTR c_msvcrt
 = _imp___mbscpy	      C     crt__mbscpy equ <_imp___mbscpy>
			      C 
			      C     externdef _imp___mbscspn:PTR c_msvcrt
 = _imp___mbscspn	      C     crt__mbscspn equ <_imp___mbscspn>
			      C 
			      C     externdef _imp___mbsdec:PTR c_msvcrt
 = _imp___mbsdec	      C     crt__mbsdec equ <_imp___mbsdec>
			      C 
			      C     externdef _imp___mbsdup:PTR c_msvcrt
 = _imp___mbsdup	      C     crt__mbsdup equ <_imp___mbsdup>
			      C 
			      C     externdef _imp___mbsicmp:PTR c_msvcrt
 = _imp___mbsicmp	      C     crt__mbsicmp equ <_imp___mbsicmp>
			      C 
			      C     externdef _imp___mbsicoll:PTR c_msvcrt
 = _imp___mbsicoll	      C     crt__mbsicoll equ <_imp___mbsicoll>
			      C 
			      C     externdef _imp___mbsinc:PTR c_msvcrt
 = _imp___mbsinc	      C     crt__mbsinc equ <_imp___mbsinc>
			      C 
			      C     externdef _imp___mbslen:PTR c_msvcrt
 = _imp___mbslen	      C     crt__mbslen equ <_imp___mbslen>
			      C 
			      C     externdef _imp___mbslwr:PTR c_msvcrt
 = _imp___mbslwr	      C     crt__mbslwr equ <_imp___mbslwr>
			      C 
			      C     externdef _imp___mbsnbcat:PTR c_msvcrt
 = _imp___mbsnbcat	      C     crt__mbsnbcat equ <_imp___mbsnbcat>
			      C 
			      C     externdef _imp___mbsnbcmp:PTR c_msvcrt
 = _imp___mbsnbcmp	      C     crt__mbsnbcmp equ <_imp___mbsnbcmp>
			      C 
			      C     externdef _imp___mbsnbcnt:PTR c_msvcrt
 = _imp___mbsnbcnt	      C     crt__mbsnbcnt equ <_imp___mbsnbcnt>
			      C 
			      C     externdef _imp___mbsnbcoll:PTR c_msvcrt
 = _imp___mbsnbcoll	      C     crt__mbsnbcoll equ <_imp___mbsnbcoll>
			      C 
			      C     externdef _imp___mbsnbcpy:PTR c_msvcrt
 = _imp___mbsnbcpy	      C     crt__mbsnbcpy equ <_imp___mbsnbcpy>
			      C 
			      C     externdef _imp___mbsnbicmp:PTR c_msvcrt
 = _imp___mbsnbicmp	      C     crt__mbsnbicmp equ <_imp___mbsnbicmp>
			      C 
			      C     externdef _imp___mbsnbicoll:PTR c_msvcrt
 = _imp___mbsnbicoll	      C     crt__mbsnbicoll equ <_imp___mbsnbicoll>
			      C 
			      C     externdef _imp___mbsnbset:PTR c_msvcrt
 = _imp___mbsnbset	      C     crt__mbsnbset equ <_imp___mbsnbset>
			      C 
			      C     externdef _imp___mbsncat:PTR c_msvcrt
 = _imp___mbsncat	      C     crt__mbsncat equ <_imp___mbsncat>
			      C 
			      C     externdef _imp___mbsnccnt:PTR c_msvcrt
 = _imp___mbsnccnt	      C     crt__mbsnccnt equ <_imp___mbsnccnt>
			      C 
			      C     externdef _imp___mbsncmp:PTR c_msvcrt
 = _imp___mbsncmp	      C     crt__mbsncmp equ <_imp___mbsncmp>
			      C 
			      C     externdef _imp___mbsncoll:PTR c_msvcrt
 = _imp___mbsncoll	      C     crt__mbsncoll equ <_imp___mbsncoll>
			      C 
			      C     externdef _imp___mbsncpy:PTR c_msvcrt
 = _imp___mbsncpy	      C     crt__mbsncpy equ <_imp___mbsncpy>
			      C 
			      C     externdef _imp___mbsnextc:PTR c_msvcrt
 = _imp___mbsnextc	      C     crt__mbsnextc equ <_imp___mbsnextc>
			      C 
			      C     externdef _imp___mbsnicmp:PTR c_msvcrt
 = _imp___mbsnicmp	      C     crt__mbsnicmp equ <_imp___mbsnicmp>
			      C 
			      C     externdef _imp___mbsnicoll:PTR c_msvcrt
 = _imp___mbsnicoll	      C     crt__mbsnicoll equ <_imp___mbsnicoll>
			      C 
			      C     externdef _imp___mbsninc:PTR c_msvcrt
 = _imp___mbsninc	      C     crt__mbsninc equ <_imp___mbsninc>
			      C 
			      C     externdef _imp___mbsnset:PTR c_msvcrt
 = _imp___mbsnset	      C     crt__mbsnset equ <_imp___mbsnset>
			      C 
			      C     externdef _imp___mbspbrk:PTR c_msvcrt
 = _imp___mbspbrk	      C     crt__mbspbrk equ <_imp___mbspbrk>
			      C 
			      C     externdef _imp___mbsrchr:PTR c_msvcrt
 = _imp___mbsrchr	      C     crt__mbsrchr equ <_imp___mbsrchr>
			      C 
			      C     externdef _imp___mbsrev:PTR c_msvcrt
 = _imp___mbsrev	      C     crt__mbsrev equ <_imp___mbsrev>
			      C 
			      C     externdef _imp___mbsset:PTR c_msvcrt
 = _imp___mbsset	      C     crt__mbsset equ <_imp___mbsset>
			      C 
			      C     externdef _imp___mbsspn:PTR c_msvcrt
 = _imp___mbsspn	      C     crt__mbsspn equ <_imp___mbsspn>
			      C 
			      C     externdef _imp___mbsspnp:PTR c_msvcrt
 = _imp___mbsspnp	      C     crt__mbsspnp equ <_imp___mbsspnp>
			      C 
			      C     externdef _imp___mbsstr:PTR c_msvcrt
 = _imp___mbsstr	      C     crt__mbsstr equ <_imp___mbsstr>
			      C 
			      C     externdef _imp___mbstok:PTR c_msvcrt
 = _imp___mbstok	      C     crt__mbstok equ <_imp___mbstok>
			      C 
			      C     externdef _imp___mbstrlen:PTR c_msvcrt
 = _imp___mbstrlen	      C     crt__mbstrlen equ <_imp___mbstrlen>
			      C 
			      C     externdef _imp___mbsupr:PTR c_msvcrt
 = _imp___mbsupr	      C     crt__mbsupr equ <_imp___mbsupr>
			      C 
			      C     externdef _imp___memccpy:PTR c_msvcrt
 = _imp___memccpy	      C     crt__memccpy equ <_imp___memccpy>
			      C 
			      C     externdef _imp___memicmp:PTR c_msvcrt
 = _imp___memicmp	      C     crt__memicmp equ <_imp___memicmp>
			      C 
			      C     externdef _imp___mkdir:PTR c_msvcrt
 = _imp___mkdir		      C     crt__mkdir equ <_imp___mkdir>
			      C 
			      C     externdef _imp___mktemp:PTR c_msvcrt
 = _imp___mktemp	      C     crt__mktemp equ <_imp___mktemp>
			      C 
			      C     externdef _imp___mktime64:PTR c_msvcrt
 = _imp___mktime64	      C     crt__mktime64 equ <_imp___mktime64>
			      C 
			      C     externdef _imp___msize:PTR c_msvcrt
 = _imp___msize		      C     crt__msize equ <_imp___msize>
			      C 
			      C     externdef _imp___nextafter:PTR c_msvcrt
 = _imp___nextafter	      C     crt__nextafter equ <_imp___nextafter>
			      C 
			      C     externdef _imp___onexit:PTR c_msvcrt
 = _imp___onexit	      C     crt__onexit equ <_imp___onexit>
			      C 
			      C     externdef _imp___open:PTR c_msvcrt
 = _imp___open		      C     crt__open equ <_imp___open>
			      C 
			      C     externdef _imp___open_osfhandle:PTR c_msvcrt
 = _imp___open_osfhandle      C     crt__open_osfhandle equ <_imp___open_osfhandle>
			      C 
			      C     externdef _imp___osplatform:PTR c_msvcrt
 = _imp___osplatform	      C     crt__osplatform equ <_imp___osplatform>
			      C 
			      C     externdef _imp___osver:PTR c_msvcrt
 = _imp___osver		      C     crt__osver equ <_imp___osver>
			      C 
			      C     externdef _imp___outp:PTR c_msvcrt
 = _imp___outp		      C     crt__outp equ <_imp___outp>
			      C 
			      C     externdef _imp___outpd:PTR c_msvcrt
 = _imp___outpd		      C     crt__outpd equ <_imp___outpd>
			      C 
			      C     externdef _imp___outpw:PTR c_msvcrt
 = _imp___outpw		      C     crt__outpw equ <_imp___outpw>
			      C 
			      C     externdef _imp___pclose:PTR c_msvcrt
 = _imp___pclose	      C     crt__pclose equ <_imp___pclose>
			      C 
			      C     externdef _imp___pctype:PTR c_msvcrt
 = _imp___pctype	      C     crt__pctype equ <_imp___pctype>
			      C 
			      C     externdef _imp___pgmptr:PTR c_msvcrt
 = _imp___pgmptr	      C     crt__pgmptr equ <_imp___pgmptr>
			      C 
			      C     externdef _imp___pipe:PTR c_msvcrt
 = _imp___pipe		      C     crt__pipe equ <_imp___pipe>
			      C 
			      C     externdef _imp___popen:PTR c_msvcrt
 = _imp___popen		      C     crt__popen equ <_imp___popen>
			      C 
			      C     externdef _imp___purecall:PTR c_msvcrt
 = _imp___purecall	      C     crt__purecall equ <_imp___purecall>
			      C 
			      C     externdef _imp___putch:PTR c_msvcrt
 = _imp___putch		      C     crt__putch equ <_imp___putch>
			      C 
			      C     externdef _imp___putenv:PTR c_msvcrt
 = _imp___putenv	      C     crt__putenv equ <_imp___putenv>
			      C 
			      C     externdef _imp___putw:PTR c_msvcrt
 = _imp___putw		      C     crt__putw equ <_imp___putw>
			      C 
			      C     externdef _imp___putws:PTR c_msvcrt
 = _imp___putws		      C     crt__putws equ <_imp___putws>
			      C 
			      C     externdef _imp___pwctype:PTR c_msvcrt
 = _imp___pwctype	      C     crt__pwctype equ <_imp___pwctype>
			      C 
			      C     externdef _imp___read:PTR c_msvcrt
 = _imp___read		      C     crt__read equ <_imp___read>
			      C 
			      C     externdef _imp___rmdir:PTR c_msvcrt
 = _imp___rmdir		      C     crt__rmdir equ <_imp___rmdir>
			      C 
			      C     externdef _imp___rmtmp:PTR c_msvcrt
 = _imp___rmtmp		      C     crt__rmtmp equ <_imp___rmtmp>
			      C 
			      C     externdef _imp___rotl:PTR c_msvcrt
 = _imp___rotl		      C     crt__rotl equ <_imp___rotl>
			      C 
			      C     externdef _imp___rotr:PTR c_msvcrt
 = _imp___rotr		      C     crt__rotr equ <_imp___rotr>
			      C 
			      C     externdef _imp___safe_fdiv:PTR c_msvcrt
 = _imp___safe_fdiv	      C     crt__safe_fdiv equ <_imp___safe_fdiv>
			      C 
			      C     externdef _imp___safe_fdivr:PTR c_msvcrt
 = _imp___safe_fdivr	      C     crt__safe_fdivr equ <_imp___safe_fdivr>
			      C 
			      C     externdef _imp___safe_fprem:PTR c_msvcrt
 = _imp___safe_fprem	      C     crt__safe_fprem equ <_imp___safe_fprem>
			      C 
			      C     externdef _imp___safe_fprem1:PTR c_msvcrt
 = _imp___safe_fprem1	      C     crt__safe_fprem1 equ <_imp___safe_fprem1>
			      C 
			      C     externdef _imp___scalb:PTR c_msvcrt
 = _imp___scalb		      C     crt__scalb equ <_imp___scalb>
			      C 
			      C     externdef _imp___searchenv:PTR c_msvcrt
 = _imp___searchenv	      C     crt__searchenv equ <_imp___searchenv>
			      C 
			      C     externdef _imp___seh_longjmp_unwind:PTR c_msvcrt
 = _imp___seh_longjmp_unwin   C     crt__seh_longjmp_unwind equ <_imp___seh_longjmp_unwind>
   d
			      C 
			      C     externdef _imp___set_error_mode:PTR c_msvcrt
 = _imp___set_error_mode      C     crt__set_error_mode equ <_imp___set_error_mode>
			      C 
			      C     externdef _imp___set_sbh_threshold:PTR c_msvcrt
 = _imp___set_sbh_threshold   C     crt__set_sbh_threshold equ <_imp___set_sbh_threshold>
			      C 
			      C     externdef _imp___seterrormode:PTR c_msvcrt
 = _imp___seterrormode	      C     crt__seterrormode equ <_imp___seterrormode>
			      C 
			      C     externdef _imp___setjmp:PTR c_msvcrt
 = _imp___setjmp	      C     crt__setjmp equ <_imp___setjmp>
			      C 
			      C     externdef _imp___setjmp3:PTR c_msvcrt
 = _imp___setjmp3	      C     crt__setjmp3 equ <_imp___setjmp3>
			      C 
			      C     externdef _imp___setmaxstdio:PTR c_msvcrt
 = _imp___setmaxstdio	      C     crt__setmaxstdio equ <_imp___setmaxstdio>
			      C 
			      C     externdef _imp___setmbcp:PTR c_msvcrt
 = _imp___setmbcp	      C     crt__setmbcp equ <_imp___setmbcp>
			      C 
			      C     externdef _imp___setmode:PTR c_msvcrt
 = _imp___setmode	      C     crt__setmode equ <_imp___setmode>
			      C 
			      C     externdef _imp___setsystime:PTR c_msvcrt
 = _imp___setsystime	      C     crt__setsystime equ <_imp___setsystime>
			      C 
			      C     externdef _imp___sleep:PTR c_msvcrt
 = _imp___sleep		      C     crt__sleep equ <_imp___sleep>
			      C 
			      C     externdef _imp___snprintf:PTR c_msvcrt
 = _imp___snprintf	      C     crt__snprintf equ <_imp___snprintf>
			      C 
			      C     externdef _imp___snwprintf:PTR c_msvcrt
 = _imp___snwprintf	      C     crt__snwprintf equ <_imp___snwprintf>
			      C 
			      C     externdef _imp___sopen:PTR c_msvcrt
 = _imp___sopen		      C     crt__sopen equ <_imp___sopen>
			      C 
			      C     externdef _imp___spawnl:PTR c_msvcrt
 = _imp___spawnl	      C     crt__spawnl equ <_imp___spawnl>
			      C 
			      C     externdef _imp___spawnle:PTR c_msvcrt
 = _imp___spawnle	      C     crt__spawnle equ <_imp___spawnle>
			      C 
			      C     externdef _imp___spawnlp:PTR c_msvcrt
 = _imp___spawnlp	      C     crt__spawnlp equ <_imp___spawnlp>
			      C 
			      C     externdef _imp___spawnlpe:PTR c_msvcrt
 = _imp___spawnlpe	      C     crt__spawnlpe equ <_imp___spawnlpe>
			      C 
			      C     externdef _imp___spawnv:PTR c_msvcrt
 = _imp___spawnv	      C     crt__spawnv equ <_imp___spawnv>
			      C 
			      C     externdef _imp___spawnve:PTR c_msvcrt
 = _imp___spawnve	      C     crt__spawnve equ <_imp___spawnve>
			      C 
			      C     externdef _imp___spawnvp:PTR c_msvcrt
 = _imp___spawnvp	      C     crt__spawnvp equ <_imp___spawnvp>
			      C 
			      C     externdef _imp___spawnvpe:PTR c_msvcrt
 = _imp___spawnvpe	      C     crt__spawnvpe equ <_imp___spawnvpe>
			      C 
			      C     externdef _imp___splitpath:PTR c_msvcrt
 = _imp___splitpath	      C     crt__splitpath equ <_imp___splitpath>
			      C 
			      C     externdef _imp___stat:PTR c_msvcrt
 = _imp___stat		      C     crt__stat equ <_imp___stat>
			      C 
			      C     externdef _imp___stat64:PTR c_msvcrt
 = _imp___stat64	      C     crt__stat64 equ <_imp___stat64>
			      C 
			      C     externdef _imp___stati64:PTR c_msvcrt
 = _imp___stati64	      C     crt__stati64 equ <_imp___stati64>
			      C 
			      C     externdef _imp___statusfp:PTR c_msvcrt
 = _imp___statusfp	      C     crt__statusfp equ <_imp___statusfp>
			      C 
			      C     externdef _imp___strcmpi:PTR c_msvcrt
 = _imp___strcmpi	      C     crt__strcmpi equ <_imp___strcmpi>
			      C 
			      C     externdef _imp___strdate:PTR c_msvcrt
 = _imp___strdate	      C     crt__strdate equ <_imp___strdate>
			      C 
			      C     externdef _imp___strdup:PTR c_msvcrt
 = _imp___strdup	      C     crt__strdup equ <_imp___strdup>
			      C 
			      C     externdef _imp___strerror:PTR c_msvcrt
 = _imp___strerror	      C     crt__strerror equ <_imp___strerror>
			      C 
			      C     externdef _imp___stricmp:PTR c_msvcrt
 = _imp___stricmp	      C     crt__stricmp equ <_imp___stricmp>
			      C 
			      C     externdef _imp___stricoll:PTR c_msvcrt
 = _imp___stricoll	      C     crt__stricoll equ <_imp___stricoll>
			      C 
			      C     externdef _imp___strlwr:PTR c_msvcrt
 = _imp___strlwr	      C     crt__strlwr equ <_imp___strlwr>
			      C 
			      C     externdef _imp___strncoll:PTR c_msvcrt
 = _imp___strncoll	      C     crt__strncoll equ <_imp___strncoll>
			      C 
			      C     externdef _imp___strnicmp:PTR c_msvcrt
 = _imp___strnicmp	      C     crt__strnicmp equ <_imp___strnicmp>
			      C 
			      C     externdef _imp___strnicoll:PTR c_msvcrt
 = _imp___strnicoll	      C     crt__strnicoll equ <_imp___strnicoll>
			      C 
			      C     externdef _imp___strnset:PTR c_msvcrt
 = _imp___strnset	      C     crt__strnset equ <_imp___strnset>
			      C 
			      C     externdef _imp___strrev:PTR c_msvcrt
 = _imp___strrev	      C     crt__strrev equ <_imp___strrev>
			      C 
			      C     externdef _imp___strset:PTR c_msvcrt
 = _imp___strset	      C     crt__strset equ <_imp___strset>
			      C 
			      C     externdef _imp___strtime:PTR c_msvcrt
 = _imp___strtime	      C     crt__strtime equ <_imp___strtime>
			      C 
			      C     externdef _imp___strupr:PTR c_msvcrt
 = _imp___strupr	      C     crt__strupr equ <_imp___strupr>
			      C 
			      C     externdef _imp___swab:PTR c_msvcrt
 = _imp___swab		      C     crt__swab equ <_imp___swab>
			      C 
			      C     externdef _imp___sys_errlist:PTR c_msvcrt
 = _imp___sys_errlist	      C     crt__sys_errlist equ <_imp___sys_errlist>
			      C 
			      C     externdef _imp___sys_nerr:PTR c_msvcrt
 = _imp___sys_nerr	      C     crt__sys_nerr equ <_imp___sys_nerr>
			      C 
			      C     externdef _imp___tell:PTR c_msvcrt
 = _imp___tell		      C     crt__tell equ <_imp___tell>
			      C 
			      C     externdef _imp___telli64:PTR c_msvcrt
 = _imp___telli64	      C     crt__telli64 equ <_imp___telli64>
			      C 
			      C     externdef _imp___tempnam:PTR c_msvcrt
 = _imp___tempnam	      C     crt__tempnam equ <_imp___tempnam>
			      C 
			      C     externdef _imp___time64:PTR c_msvcrt
 = _imp___time64	      C     crt__time64 equ <_imp___time64>
			      C 
			      C     externdef _imp___timezone:PTR c_msvcrt
 = _imp___timezone	      C     crt__timezone equ <_imp___timezone>
			      C 
			      C     externdef _imp___tolower:PTR c_msvcrt
 = _imp___tolower	      C     crt__tolower equ <_imp___tolower>
			      C 
			      C     externdef _imp___toupper:PTR c_msvcrt
 = _imp___toupper	      C     crt__toupper equ <_imp___toupper>
			      C 
			      C     externdef _imp___tzname:PTR c_msvcrt
 = _imp___tzname	      C     crt__tzname equ <_imp___tzname>
			      C 
			      C     externdef _imp___tzset:PTR c_msvcrt
 = _imp___tzset		      C     crt__tzset equ <_imp___tzset>
			      C 
			      C     externdef _imp___ui64toa:PTR c_msvcrt
 = _imp___ui64toa	      C     crt__ui64toa equ <_imp___ui64toa>
			      C 
			      C     externdef _imp___ui64tow:PTR c_msvcrt
 = _imp___ui64tow	      C     crt__ui64tow equ <_imp___ui64tow>
			      C 
			      C     externdef _imp___ultoa:PTR c_msvcrt
 = _imp___ultoa		      C     crt__ultoa equ <_imp___ultoa>
			      C 
			      C     externdef _imp___ultow:PTR c_msvcrt
 = _imp___ultow		      C     crt__ultow equ <_imp___ultow>
			      C 
			      C     externdef _imp___umask:PTR c_msvcrt
 = _imp___umask		      C     crt__umask equ <_imp___umask>
			      C 
			      C     externdef _imp___ungetch:PTR c_msvcrt
 = _imp___ungetch	      C     crt__ungetch equ <_imp___ungetch>
			      C 
			      C     externdef _imp___unlink:PTR c_msvcrt
 = _imp___unlink	      C     crt__unlink equ <_imp___unlink>
			      C 
			      C     externdef _imp___unloaddll:PTR c_msvcrt
 = _imp___unloaddll	      C     crt__unloaddll equ <_imp___unloaddll>
			      C 
			      C     externdef _imp___unlock:PTR c_msvcrt
 = _imp___unlock	      C     crt__unlock equ <_imp___unlock>
			      C 
			      C     externdef _imp___utime:PTR c_msvcrt
 = _imp___utime		      C     crt__utime equ <_imp___utime>
			      C 
			      C     externdef _imp___utime64:PTR c_msvcrt
 = _imp___utime64	      C     crt__utime64 equ <_imp___utime64>
			      C 
			      C     externdef _imp___vsnprintf:PTR c_msvcrt
 = _imp___vsnprintf	      C     crt__vsnprintf equ <_imp___vsnprintf>
			      C 
			      C     externdef _imp___vsnwprintf:PTR c_msvcrt
 = _imp___vsnwprintf	      C     crt__vsnwprintf equ <_imp___vsnwprintf>
			      C 
			      C     externdef _imp___waccess:PTR c_msvcrt
 = _imp___waccess	      C     crt__waccess equ <_imp___waccess>
			      C 
			      C     externdef _imp___wasctime:PTR c_msvcrt
 = _imp___wasctime	      C     crt__wasctime equ <_imp___wasctime>
			      C 
			      C     externdef _imp___wchdir:PTR c_msvcrt
 = _imp___wchdir	      C     crt__wchdir equ <_imp___wchdir>
			      C 
			      C     externdef _imp___wchmod:PTR c_msvcrt
 = _imp___wchmod	      C     crt__wchmod equ <_imp___wchmod>
			      C 
			      C     externdef _imp___wcmdln:PTR c_msvcrt
 = _imp___wcmdln	      C     crt__wcmdln equ <_imp___wcmdln>
			      C 
			      C     externdef _imp___wcreat:PTR c_msvcrt
 = _imp___wcreat	      C     crt__wcreat equ <_imp___wcreat>
			      C 
			      C     externdef _imp___wcsdup:PTR c_msvcrt
 = _imp___wcsdup	      C     crt__wcsdup equ <_imp___wcsdup>
			      C 
			      C     externdef _imp___wcsicmp:PTR c_msvcrt
 = _imp___wcsicmp	      C     crt__wcsicmp equ <_imp___wcsicmp>
			      C 
			      C     externdef _imp___wcsicoll:PTR c_msvcrt
 = _imp___wcsicoll	      C     crt__wcsicoll equ <_imp___wcsicoll>
			      C 
			      C     externdef _imp___wcslwr:PTR c_msvcrt
 = _imp___wcslwr	      C     crt__wcslwr equ <_imp___wcslwr>
			      C 
			      C     externdef _imp___wcsncoll:PTR c_msvcrt
 = _imp___wcsncoll	      C     crt__wcsncoll equ <_imp___wcsncoll>
			      C 
			      C     externdef _imp___wcsnicmp:PTR c_msvcrt
 = _imp___wcsnicmp	      C     crt__wcsnicmp equ <_imp___wcsnicmp>
			      C 
			      C     externdef _imp___wcsnicoll:PTR c_msvcrt
 = _imp___wcsnicoll	      C     crt__wcsnicoll equ <_imp___wcsnicoll>
			      C 
			      C     externdef _imp___wcsnset:PTR c_msvcrt
 = _imp___wcsnset	      C     crt__wcsnset equ <_imp___wcsnset>
			      C 
			      C     externdef _imp___wcsrev:PTR c_msvcrt
 = _imp___wcsrev	      C     crt__wcsrev equ <_imp___wcsrev>
			      C 
			      C     externdef _imp___wcsset:PTR c_msvcrt
 = _imp___wcsset	      C     crt__wcsset equ <_imp___wcsset>
			      C 
			      C     externdef _imp___wcsupr:PTR c_msvcrt
 = _imp___wcsupr	      C     crt__wcsupr equ <_imp___wcsupr>
			      C 
			      C     externdef _imp___wctime:PTR c_msvcrt
 = _imp___wctime	      C     crt__wctime equ <_imp___wctime>
			      C 
			      C     externdef _imp___wctime64:PTR c_msvcrt
 = _imp___wctime64	      C     crt__wctime64 equ <_imp___wctime64>
			      C 
			      C     externdef _imp___wenviron:PTR c_msvcrt
 = _imp___wenviron	      C     crt__wenviron equ <_imp___wenviron>
			      C 
			      C     externdef _imp___wexecl:PTR c_msvcrt
 = _imp___wexecl	      C     crt__wexecl equ <_imp___wexecl>
			      C 
			      C     externdef _imp___wexecle:PTR c_msvcrt
 = _imp___wexecle	      C     crt__wexecle equ <_imp___wexecle>
			      C 
			      C     externdef _imp___wexeclp:PTR c_msvcrt
 = _imp___wexeclp	      C     crt__wexeclp equ <_imp___wexeclp>
			      C 
			      C     externdef _imp___wexeclpe:PTR c_msvcrt
 = _imp___wexeclpe	      C     crt__wexeclpe equ <_imp___wexeclpe>
			      C 
			      C     externdef _imp___wexecv:PTR c_msvcrt
 = _imp___wexecv	      C     crt__wexecv equ <_imp___wexecv>
			      C 
			      C     externdef _imp___wexecve:PTR c_msvcrt
 = _imp___wexecve	      C     crt__wexecve equ <_imp___wexecve>
			      C 
			      C     externdef _imp___wexecvp:PTR c_msvcrt
 = _imp___wexecvp	      C     crt__wexecvp equ <_imp___wexecvp>
			      C 
			      C     externdef _imp___wexecvpe:PTR c_msvcrt
 = _imp___wexecvpe	      C     crt__wexecvpe equ <_imp___wexecvpe>
			      C 
			      C     externdef _imp___wfdopen:PTR c_msvcrt
 = _imp___wfdopen	      C     crt__wfdopen equ <_imp___wfdopen>
			      C 
			      C     externdef _imp___wfindfirst:PTR c_msvcrt
 = _imp___wfindfirst	      C     crt__wfindfirst equ <_imp___wfindfirst>
			      C 
			      C     externdef _imp___wfindfirst64:PTR c_msvcrt
 = _imp___wfindfirst64	      C     crt__wfindfirst64 equ <_imp___wfindfirst64>
			      C 
			      C     externdef _imp___wfindfirsti64:PTR c_msvcrt
 = _imp___wfindfirsti64	      C     crt__wfindfirsti64 equ <_imp___wfindfirsti64>
			      C 
			      C     externdef _imp___wfindnext:PTR c_msvcrt
 = _imp___wfindnext	      C     crt__wfindnext equ <_imp___wfindnext>
			      C 
			      C     externdef _imp___wfindnext64:PTR c_msvcrt
 = _imp___wfindnext64	      C     crt__wfindnext64 equ <_imp___wfindnext64>
			      C 
			      C     externdef _imp___wfindnexti64:PTR c_msvcrt
 = _imp___wfindnexti64	      C     crt__wfindnexti64 equ <_imp___wfindnexti64>
			      C 
			      C     externdef _imp___wfopen:PTR c_msvcrt
 = _imp___wfopen	      C     crt__wfopen equ <_imp___wfopen>
			      C 
			      C     externdef _imp___wfreopen:PTR c_msvcrt
 = _imp___wfreopen	      C     crt__wfreopen equ <_imp___wfreopen>
			      C 
			      C     externdef _imp___wfsopen:PTR c_msvcrt
 = _imp___wfsopen	      C     crt__wfsopen equ <_imp___wfsopen>
			      C 
			      C     externdef _imp___wfullpath:PTR c_msvcrt
 = _imp___wfullpath	      C     crt__wfullpath equ <_imp___wfullpath>
			      C 
			      C     externdef _imp___wgetcwd:PTR c_msvcrt
 = _imp___wgetcwd	      C     crt__wgetcwd equ <_imp___wgetcwd>
			      C 
			      C     externdef _imp___wgetdcwd:PTR c_msvcrt
 = _imp___wgetdcwd	      C     crt__wgetdcwd equ <_imp___wgetdcwd>
			      C 
			      C     externdef _imp___wgetenv:PTR c_msvcrt
 = _imp___wgetenv	      C     crt__wgetenv equ <_imp___wgetenv>
			      C 
			      C     externdef _imp___winmajor:PTR c_msvcrt
 = _imp___winmajor	      C     crt__winmajor equ <_imp___winmajor>
			      C 
			      C     externdef _imp___winminor:PTR c_msvcrt
 = _imp___winminor	      C     crt__winminor equ <_imp___winminor>
			      C 
			      C     externdef _imp___winver:PTR c_msvcrt
 = _imp___winver	      C     crt__winver equ <_imp___winver>
			      C 
			      C     externdef _imp___wmakepath:PTR c_msvcrt
 = _imp___wmakepath	      C     crt__wmakepath equ <_imp___wmakepath>
			      C 
			      C     externdef _imp___wmkdir:PTR c_msvcrt
 = _imp___wmkdir	      C     crt__wmkdir equ <_imp___wmkdir>
			      C 
			      C     externdef _imp___wmktemp:PTR c_msvcrt
 = _imp___wmktemp	      C     crt__wmktemp equ <_imp___wmktemp>
			      C 
			      C     externdef _imp___wopen:PTR c_msvcrt
 = _imp___wopen		      C     crt__wopen equ <_imp___wopen>
			      C 
			      C     externdef _imp___wperror:PTR c_msvcrt
 = _imp___wperror	      C     crt__wperror equ <_imp___wperror>
			      C 
			      C     externdef _imp___wpgmptr:PTR c_msvcrt
 = _imp___wpgmptr	      C     crt__wpgmptr equ <_imp___wpgmptr>
			      C 
			      C     externdef _imp___wpopen:PTR c_msvcrt
 = _imp___wpopen	      C     crt__wpopen equ <_imp___wpopen>
			      C 
			      C     externdef _imp___wputenv:PTR c_msvcrt
 = _imp___wputenv	      C     crt__wputenv equ <_imp___wputenv>
			      C 
			      C     externdef _imp___wremove:PTR c_msvcrt
 = _imp___wremove	      C     crt__wremove equ <_imp___wremove>
			      C 
			      C     externdef _imp___wrename:PTR c_msvcrt
 = _imp___wrename	      C     crt__wrename equ <_imp___wrename>
			      C 
			      C     externdef _imp___write:PTR c_msvcrt
 = _imp___write		      C     crt__write equ <_imp___write>
			      C 
			      C     externdef _imp___wrmdir:PTR c_msvcrt
 = _imp___wrmdir	      C     crt__wrmdir equ <_imp___wrmdir>
			      C 
			      C     externdef _imp___wsearchenv:PTR c_msvcrt
 = _imp___wsearchenv	      C     crt__wsearchenv equ <_imp___wsearchenv>
			      C 
			      C     externdef _imp___wsetlocale:PTR c_msvcrt
 = _imp___wsetlocale	      C     crt__wsetlocale equ <_imp___wsetlocale>
			      C 
			      C     externdef _imp___wsopen:PTR c_msvcrt
 = _imp___wsopen	      C     crt__wsopen equ <_imp___wsopen>
			      C 
			      C     externdef _imp___wspawnl:PTR c_msvcrt
 = _imp___wspawnl	      C     crt__wspawnl equ <_imp___wspawnl>
			      C 
			      C     externdef _imp___wspawnle:PTR c_msvcrt
 = _imp___wspawnle	      C     crt__wspawnle equ <_imp___wspawnle>
			      C 
			      C     externdef _imp___wspawnlp:PTR c_msvcrt
 = _imp___wspawnlp	      C     crt__wspawnlp equ <_imp___wspawnlp>
			      C 
			      C     externdef _imp___wspawnlpe:PTR c_msvcrt
 = _imp___wspawnlpe	      C     crt__wspawnlpe equ <_imp___wspawnlpe>
			      C 
			      C     externdef _imp___wspawnv:PTR c_msvcrt
 = _imp___wspawnv	      C     crt__wspawnv equ <_imp___wspawnv>
			      C 
			      C     externdef _imp___wspawnve:PTR c_msvcrt
 = _imp___wspawnve	      C     crt__wspawnve equ <_imp___wspawnve>
			      C 
			      C     externdef _imp___wspawnvp:PTR c_msvcrt
 = _imp___wspawnvp	      C     crt__wspawnvp equ <_imp___wspawnvp>
			      C 
			      C     externdef _imp___wspawnvpe:PTR c_msvcrt
 = _imp___wspawnvpe	      C     crt__wspawnvpe equ <_imp___wspawnvpe>
			      C 
			      C     externdef _imp___wsplitpath:PTR c_msvcrt
 = _imp___wsplitpath	      C     crt__wsplitpath equ <_imp___wsplitpath>
			      C 
			      C     externdef _imp___wstat:PTR c_msvcrt
 = _imp___wstat		      C     crt__wstat equ <_imp___wstat>
			      C 
			      C     externdef _imp___wstat64:PTR c_msvcrt
 = _imp___wstat64	      C     crt__wstat64 equ <_imp___wstat64>
			      C 
			      C     externdef _imp___wstati64:PTR c_msvcrt
 = _imp___wstati64	      C     crt__wstati64 equ <_imp___wstati64>
			      C 
			      C     externdef _imp___wstrdate:PTR c_msvcrt
 = _imp___wstrdate	      C     crt__wstrdate equ <_imp___wstrdate>
			      C 
			      C     externdef _imp___wstrtime:PTR c_msvcrt
 = _imp___wstrtime	      C     crt__wstrtime equ <_imp___wstrtime>
			      C 
			      C     externdef _imp___wsystem:PTR c_msvcrt
 = _imp___wsystem	      C     crt__wsystem equ <_imp___wsystem>
			      C 
			      C     externdef _imp___wtempnam:PTR c_msvcrt
 = _imp___wtempnam	      C     crt__wtempnam equ <_imp___wtempnam>
			      C 
			      C     externdef _imp___wtmpnam:PTR c_msvcrt
 = _imp___wtmpnam	      C     crt__wtmpnam equ <_imp___wtmpnam>
			      C 
			      C     externdef _imp___wtoi:PTR c_msvcrt
 = _imp___wtoi		      C     crt__wtoi equ <_imp___wtoi>
			      C 
			      C     externdef _imp___wtoi64:PTR c_msvcrt
 = _imp___wtoi64	      C     crt__wtoi64 equ <_imp___wtoi64>
			      C 
			      C     externdef _imp___wtol:PTR c_msvcrt
 = _imp___wtol		      C     crt__wtol equ <_imp___wtol>
			      C 
			      C     externdef _imp___wunlink:PTR c_msvcrt
 = _imp___wunlink	      C     crt__wunlink equ <_imp___wunlink>
			      C 
			      C     externdef _imp___wutime:PTR c_msvcrt
 = _imp___wutime	      C     crt__wutime equ <_imp___wutime>
			      C 
			      C     externdef _imp___wutime64:PTR c_msvcrt
 = _imp___wutime64	      C     crt__wutime64 equ <_imp___wutime64>
			      C 
			      C     externdef _imp___y0:PTR c_msvcrt
 = _imp___y0		      C     crt__y0 equ <_imp___y0>
			      C 
			      C     externdef _imp___y1:PTR c_msvcrt
 = _imp___y1		      C     crt__y1 equ <_imp___y1>
			      C 
			      C     externdef _imp___yn:PTR c_msvcrt
 = _imp___yn		      C     crt__yn equ <_imp___yn>
			      C 
			      C     externdef _imp__abort:PTR c_msvcrt
 = _imp__abort		      C     crt_abort equ <_imp__abort>
			      C 
			      C     externdef _imp__abs:PTR c_msvcrt
 = _imp__abs		      C     crt_abs equ <_imp__abs>
			      C 
			      C     externdef _imp__acos:PTR c_msvcrt
 = _imp__acos		      C     crt_acos equ <_imp__acos>
			      C 
			      C     externdef _imp__asctime:PTR c_msvcrt
 = _imp__asctime	      C     crt_asctime equ <_imp__asctime>
			      C 
			      C     externdef _imp__asin:PTR c_msvcrt
 = _imp__asin		      C     crt_asin equ <_imp__asin>
			      C 
			      C     externdef _imp__atan:PTR c_msvcrt
 = _imp__atan		      C     crt_atan equ <_imp__atan>
			      C 
			      C     externdef _imp__atan2:PTR c_msvcrt
 = _imp__atan2		      C     crt_atan2 equ <_imp__atan2>
			      C 
			      C     externdef _imp__atexit:PTR c_msvcrt
 = _imp__atexit		      C     crt_atexit equ <_imp__atexit>
			      C 
			      C     externdef _imp__atof:PTR c_msvcrt
 = _imp__atof		      C     crt_atof equ <_imp__atof>
			      C 
			      C     externdef _imp__atoi:PTR c_msvcrt
 = _imp__atoi		      C     crt_atoi equ <_imp__atoi>
			      C 
			      C     externdef _imp__atol:PTR c_msvcrt
 = _imp__atol		      C     crt_atol equ <_imp__atol>
			      C 
			      C     externdef _imp__bsearch:PTR c_msvcrt
 = _imp__bsearch	      C     crt_bsearch equ <_imp__bsearch>
			      C 
			      C     externdef _imp__calloc:PTR c_msvcrt
 = _imp__calloc		      C     crt_calloc equ <_imp__calloc>
			      C 
			      C     externdef _imp__ceil:PTR c_msvcrt
 = _imp__ceil		      C     crt_ceil equ <_imp__ceil>
			      C 
			      C     externdef _imp__clearerr:PTR c_msvcrt
 = _imp__clearerr	      C     crt_clearerr equ <_imp__clearerr>
			      C 
			      C     externdef _imp__clock:PTR c_msvcrt
 = _imp__clock		      C     crt_clock equ <_imp__clock>
			      C 
			      C     externdef _imp__cos:PTR c_msvcrt
 = _imp__cos		      C     crt_cos equ <_imp__cos>
			      C 
			      C     externdef _imp__cosh:PTR c_msvcrt
 = _imp__cosh		      C     crt_cosh equ <_imp__cosh>
			      C 
			      C     externdef _imp__ctime:PTR c_msvcrt
 = _imp__ctime		      C     crt_ctime equ <_imp__ctime>
			      C 
			      C     externdef _imp__difftime:PTR c_msvcrt
 = _imp__difftime	      C     crt_difftime equ <_imp__difftime>
			      C 
			      C     externdef _imp__div:PTR c_msvcrt
 = _imp__div		      C     crt_div equ <_imp__div>
			      C 
			      C     externdef _imp__exit:PTR c_msvcrt
 = _imp__exit		      C     crt_exit equ <_imp__exit>
			      C 
			      C     externdef _imp__exp:PTR c_msvcrt
 = _imp__exp		      C     crt_exp equ <_imp__exp>
			      C 
			      C     externdef _imp__fabs:PTR c_msvcrt
 = _imp__fabs		      C     crt_fabs equ <_imp__fabs>
			      C 
			      C     externdef _imp__fclose:PTR c_msvcrt
 = _imp__fclose		      C     crt_fclose equ <_imp__fclose>
			      C 
			      C     externdef _imp__feof:PTR c_msvcrt
 = _imp__feof		      C     crt_feof equ <_imp__feof>
			      C 
			      C     externdef _imp__ferror:PTR c_msvcrt
 = _imp__ferror		      C     crt_ferror equ <_imp__ferror>
			      C 
			      C     externdef _imp__fflush:PTR c_msvcrt
 = _imp__fflush		      C     crt_fflush equ <_imp__fflush>
			      C 
			      C     externdef _imp__fgetc:PTR c_msvcrt
 = _imp__fgetc		      C     crt_fgetc equ <_imp__fgetc>
			      C 
			      C     externdef _imp__fgetpos:PTR c_msvcrt
 = _imp__fgetpos	      C     crt_fgetpos equ <_imp__fgetpos>
			      C 
			      C     externdef _imp__fgets:PTR c_msvcrt
 = _imp__fgets		      C     crt_fgets equ <_imp__fgets>
			      C 
			      C     externdef _imp__fgetwc:PTR c_msvcrt
 = _imp__fgetwc		      C     crt_fgetwc equ <_imp__fgetwc>
			      C 
			      C     externdef _imp__fgetws:PTR c_msvcrt
 = _imp__fgetws		      C     crt_fgetws equ <_imp__fgetws>
			      C 
			      C     externdef _imp__floor:PTR c_msvcrt
 = _imp__floor		      C     crt_floor equ <_imp__floor>
			      C 
			      C     externdef _imp__fmod:PTR c_msvcrt
 = _imp__fmod		      C     crt_fmod equ <_imp__fmod>
			      C 
			      C     externdef _imp__fopen:PTR c_msvcrt
 = _imp__fopen		      C     crt_fopen equ <_imp__fopen>
			      C 
			      C     externdef _imp__fprintf:PTR c_msvcrt
 = _imp__fprintf	      C     crt_fprintf equ <_imp__fprintf>
			      C 
			      C     externdef _imp__fputc:PTR c_msvcrt
 = _imp__fputc		      C     crt_fputc equ <_imp__fputc>
			      C 
			      C     externdef _imp__fputs:PTR c_msvcrt
 = _imp__fputs		      C     crt_fputs equ <_imp__fputs>
			      C 
			      C     externdef _imp__fputwc:PTR c_msvcrt
 = _imp__fputwc		      C     crt_fputwc equ <_imp__fputwc>
			      C 
			      C     externdef _imp__fputws:PTR c_msvcrt
 = _imp__fputws		      C     crt_fputws equ <_imp__fputws>
			      C 
			      C     externdef _imp__fread:PTR c_msvcrt
 = _imp__fread		      C     crt_fread equ <_imp__fread>
			      C 
			      C     externdef _imp__free:PTR c_msvcrt
 = _imp__free		      C     crt_free equ <_imp__free>
			      C 
			      C     externdef _imp__freopen:PTR c_msvcrt
 = _imp__freopen	      C     crt_freopen equ <_imp__freopen>
			      C 
			      C     externdef _imp__frexp:PTR c_msvcrt
 = _imp__frexp		      C     crt_frexp equ <_imp__frexp>
			      C 
			      C     externdef _imp__fscanf:PTR c_msvcrt
 = _imp__fscanf		      C     crt_fscanf equ <_imp__fscanf>
			      C 
			      C     externdef _imp__fseek:PTR c_msvcrt
 = _imp__fseek		      C     crt_fseek equ <_imp__fseek>
			      C 
			      C     externdef _imp__fsetpos:PTR c_msvcrt
 = _imp__fsetpos	      C     crt_fsetpos equ <_imp__fsetpos>
			      C 
			      C     externdef _imp__ftell:PTR c_msvcrt
 = _imp__ftell		      C     crt_ftell equ <_imp__ftell>
			      C 
			      C     externdef _imp__fwprintf:PTR c_msvcrt
 = _imp__fwprintf	      C     crt_fwprintf equ <_imp__fwprintf>
			      C 
			      C     externdef _imp__fwrite:PTR c_msvcrt
 = _imp__fwrite		      C     crt_fwrite equ <_imp__fwrite>
			      C 
			      C     externdef _imp__fwscanf:PTR c_msvcrt
 = _imp__fwscanf	      C     crt_fwscanf equ <_imp__fwscanf>
			      C 
			      C     externdef _imp__getc:PTR c_msvcrt
 = _imp__getc		      C     crt_getc equ <_imp__getc>
			      C 
			      C     externdef _imp__getchar:PTR c_msvcrt
 = _imp__getchar	      C     crt_getchar equ <_imp__getchar>
			      C 
			      C     externdef _imp__getenv:PTR c_msvcrt
 = _imp__getenv		      C     crt_getenv equ <_imp__getenv>
			      C 
			      C     externdef _imp__gets:PTR c_msvcrt
 = _imp__gets		      C     crt_gets equ <_imp__gets>
			      C 
			      C     externdef _imp__getwc:PTR c_msvcrt
 = _imp__getwc		      C     crt_getwc equ <_imp__getwc>
			      C 
			      C     externdef _imp__getwchar:PTR c_msvcrt
 = _imp__getwchar	      C     crt_getwchar equ <_imp__getwchar>
			      C 
			      C     externdef _imp__gmtime:PTR c_msvcrt
 = _imp__gmtime		      C     crt_gmtime equ <_imp__gmtime>
			      C 
			      C     externdef _imp__is_wctype:PTR c_msvcrt
 = _imp__is_wctype	      C     crt_is_wctype equ <_imp__is_wctype>
			      C 
			      C     externdef _imp__isalnum:PTR c_msvcrt
 = _imp__isalnum	      C     crt_isalnum equ <_imp__isalnum>
			      C 
			      C     externdef _imp__isalpha:PTR c_msvcrt
 = _imp__isalpha	      C     crt_isalpha equ <_imp__isalpha>
			      C 
			      C     externdef _imp__iscntrl:PTR c_msvcrt
 = _imp__iscntrl	      C     crt_iscntrl equ <_imp__iscntrl>
			      C 
			      C     externdef _imp__isdigit:PTR c_msvcrt
 = _imp__isdigit	      C     crt_isdigit equ <_imp__isdigit>
			      C 
			      C     externdef _imp__isgraph:PTR c_msvcrt
 = _imp__isgraph	      C     crt_isgraph equ <_imp__isgraph>
			      C 
			      C     externdef _imp__isleadbyte:PTR c_msvcrt
 = _imp__isleadbyte	      C     crt_isleadbyte equ <_imp__isleadbyte>
			      C 
			      C     externdef _imp__islower:PTR c_msvcrt
 = _imp__islower	      C     crt_islower equ <_imp__islower>
			      C 
			      C     externdef _imp__isprint:PTR c_msvcrt
 = _imp__isprint	      C     crt_isprint equ <_imp__isprint>
			      C 
			      C     externdef _imp__ispunct:PTR c_msvcrt
 = _imp__ispunct	      C     crt_ispunct equ <_imp__ispunct>
			      C 
			      C     externdef _imp__isspace:PTR c_msvcrt
 = _imp__isspace	      C     crt_isspace equ <_imp__isspace>
			      C 
			      C     externdef _imp__isupper:PTR c_msvcrt
 = _imp__isupper	      C     crt_isupper equ <_imp__isupper>
			      C 
			      C     externdef _imp__iswalnum:PTR c_msvcrt
 = _imp__iswalnum	      C     crt_iswalnum equ <_imp__iswalnum>
			      C 
			      C     externdef _imp__iswalpha:PTR c_msvcrt
 = _imp__iswalpha	      C     crt_iswalpha equ <_imp__iswalpha>
			      C 
			      C     externdef _imp__iswascii:PTR c_msvcrt
 = _imp__iswascii	      C     crt_iswascii equ <_imp__iswascii>
			      C 
			      C     externdef _imp__iswcntrl:PTR c_msvcrt
 = _imp__iswcntrl	      C     crt_iswcntrl equ <_imp__iswcntrl>
			      C 
			      C     externdef _imp__iswctype:PTR c_msvcrt
 = _imp__iswctype	      C     crt_iswctype equ <_imp__iswctype>
			      C 
			      C     externdef _imp__iswdigit:PTR c_msvcrt
 = _imp__iswdigit	      C     crt_iswdigit equ <_imp__iswdigit>
			      C 
			      C     externdef _imp__iswgraph:PTR c_msvcrt
 = _imp__iswgraph	      C     crt_iswgraph equ <_imp__iswgraph>
			      C 
			      C     externdef _imp__iswlower:PTR c_msvcrt
 = _imp__iswlower	      C     crt_iswlower equ <_imp__iswlower>
			      C 
			      C     externdef _imp__iswprint:PTR c_msvcrt
 = _imp__iswprint	      C     crt_iswprint equ <_imp__iswprint>
			      C 
			      C     externdef _imp__iswpunct:PTR c_msvcrt
 = _imp__iswpunct	      C     crt_iswpunct equ <_imp__iswpunct>
			      C 
			      C     externdef _imp__iswspace:PTR c_msvcrt
 = _imp__iswspace	      C     crt_iswspace equ <_imp__iswspace>
			      C 
			      C     externdef _imp__iswupper:PTR c_msvcrt
 = _imp__iswupper	      C     crt_iswupper equ <_imp__iswupper>
			      C 
			      C     externdef _imp__iswxdigit:PTR c_msvcrt
 = _imp__iswxdigit	      C     crt_iswxdigit equ <_imp__iswxdigit>
			      C 
			      C     externdef _imp__isxdigit:PTR c_msvcrt
 = _imp__isxdigit	      C     crt_isxdigit equ <_imp__isxdigit>
			      C 
			      C     externdef _imp__labs:PTR c_msvcrt
 = _imp__labs		      C     crt_labs equ <_imp__labs>
			      C 
			      C     externdef _imp__ldexp:PTR c_msvcrt
 = _imp__ldexp		      C     crt_ldexp equ <_imp__ldexp>
			      C 
			      C     externdef _imp__ldiv:PTR c_msvcrt
 = _imp__ldiv		      C     crt_ldiv equ <_imp__ldiv>
			      C 
			      C     externdef _imp__localeconv:PTR c_msvcrt
 = _imp__localeconv	      C     crt_localeconv equ <_imp__localeconv>
			      C 
			      C     externdef _imp__localtime:PTR c_msvcrt
 = _imp__localtime	      C     crt_localtime equ <_imp__localtime>
			      C 
			      C     externdef _imp__log:PTR c_msvcrt
 = _imp__log		      C     crt_log equ <_imp__log>
			      C 
			      C     externdef _imp__log10:PTR c_msvcrt
 = _imp__log10		      C     crt_log10 equ <_imp__log10>
			      C 
			      C     externdef _imp__longjmp:PTR c_msvcrt
 = _imp__longjmp	      C     crt_longjmp equ <_imp__longjmp>
			      C 
			      C     externdef _imp__malloc:PTR c_msvcrt
 = _imp__malloc		      C     crt_malloc equ <_imp__malloc>
			      C 
			      C     externdef _imp__mblen:PTR c_msvcrt
 = _imp__mblen		      C     crt_mblen equ <_imp__mblen>
			      C 
			      C     externdef _imp__mbstowcs:PTR c_msvcrt
 = _imp__mbstowcs	      C     crt_mbstowcs equ <_imp__mbstowcs>
			      C 
			      C     externdef _imp__mbtowc:PTR c_msvcrt
 = _imp__mbtowc		      C     crt_mbtowc equ <_imp__mbtowc>
			      C 
			      C     externdef _imp__memchr:PTR c_msvcrt
 = _imp__memchr		      C     crt_memchr equ <_imp__memchr>
			      C 
			      C     externdef _imp__memcmp:PTR c_msvcrt
 = _imp__memcmp		      C     crt_memcmp equ <_imp__memcmp>
			      C 
			      C     externdef _imp__memcpy:PTR c_msvcrt
 = _imp__memcpy		      C     crt_memcpy equ <_imp__memcpy>
			      C 
			      C     externdef _imp__memmove:PTR c_msvcrt
 = _imp__memmove	      C     crt_memmove equ <_imp__memmove>
			      C 
			      C     externdef _imp__memset:PTR c_msvcrt
 = _imp__memset		      C     crt_memset equ <_imp__memset>
			      C 
			      C     externdef _imp__mktime:PTR c_msvcrt
 = _imp__mktime		      C     crt_mktime equ <_imp__mktime>
			      C 
			      C     externdef _imp__modf:PTR c_msvcrt
 = _imp__modf		      C     crt_modf equ <_imp__modf>
			      C 
			      C     externdef _imp__perror:PTR c_msvcrt
 = _imp__perror		      C     crt_perror equ <_imp__perror>
			      C 
			      C     externdef _imp__pow:PTR c_msvcrt
 = _imp__pow		      C     crt_pow equ <_imp__pow>
			      C 
			      C     externdef _imp__printf:PTR c_msvcrt
 = _imp__printf		      C     crt_printf equ <_imp__printf>
			      C 
			      C     externdef _imp__putc:PTR c_msvcrt
 = _imp__putc		      C     crt_putc equ <_imp__putc>
			      C 
			      C     externdef _imp__putchar:PTR c_msvcrt
 = _imp__putchar	      C     crt_putchar equ <_imp__putchar>
			      C 
			      C     externdef _imp__puts:PTR c_msvcrt
 = _imp__puts		      C     crt_puts equ <_imp__puts>
			      C 
			      C     externdef _imp__putwc:PTR c_msvcrt
 = _imp__putwc		      C     crt_putwc equ <_imp__putwc>
			      C 
			      C     externdef _imp__putwchar:PTR c_msvcrt
 = _imp__putwchar	      C     crt_putwchar equ <_imp__putwchar>
			      C 
			      C     externdef _imp__qsort:PTR c_msvcrt
 = _imp__qsort		      C     crt_qsort equ <_imp__qsort>
			      C 
			      C     externdef _imp__raise:PTR c_msvcrt
 = _imp__raise		      C     crt_raise equ <_imp__raise>
			      C 
			      C     externdef _imp__rand:PTR c_msvcrt
 = _imp__rand		      C     crt_rand equ <_imp__rand>
			      C 
			      C     externdef _imp__realloc:PTR c_msvcrt
 = _imp__realloc	      C     crt_realloc equ <_imp__realloc>
			      C 
			      C     externdef _imp__remove:PTR c_msvcrt
 = _imp__remove		      C     crt_remove equ <_imp__remove>
			      C 
			      C     externdef _imp__rename:PTR c_msvcrt
 = _imp__rename		      C     crt_rename equ <_imp__rename>
			      C 
			      C     externdef _imp__rewind:PTR c_msvcrt
 = _imp__rewind		      C     crt_rewind equ <_imp__rewind>
			      C 
			      C     externdef _imp__scanf:PTR c_msvcrt
 = _imp__scanf		      C     crt_scanf equ <_imp__scanf>
			      C 
			      C     externdef _imp__setbuf:PTR c_msvcrt
 = _imp__setbuf		      C     crt_setbuf equ <_imp__setbuf>
			      C 
			      C     externdef _imp__setlocale:PTR c_msvcrt
 = _imp__setlocale	      C     crt_setlocale equ <_imp__setlocale>
			      C 
			      C     externdef _imp__setvbuf:PTR c_msvcrt
 = _imp__setvbuf	      C     crt_setvbuf equ <_imp__setvbuf>
			      C 
			      C     externdef _imp__signal:PTR c_msvcrt
 = _imp__signal		      C     crt_signal equ <_imp__signal>
			      C 
			      C     externdef _imp__sin:PTR c_msvcrt
 = _imp__sin		      C     crt_sin equ <_imp__sin>
			      C 
			      C     externdef _imp__sinh:PTR c_msvcrt
 = _imp__sinh		      C     crt_sinh equ <_imp__sinh>
			      C 
			      C     externdef _imp__sprintf:PTR c_msvcrt
 = _imp__sprintf	      C     crt_sprintf equ <_imp__sprintf>
			      C 
			      C     externdef _imp__sqrt:PTR c_msvcrt
 = _imp__sqrt		      C     crt_sqrt equ <_imp__sqrt>
			      C 
			      C     externdef _imp__srand:PTR c_msvcrt
 = _imp__srand		      C     crt_srand equ <_imp__srand>
			      C 
			      C     externdef _imp__sscanf:PTR c_msvcrt
 = _imp__sscanf		      C     crt_sscanf equ <_imp__sscanf>
			      C 
			      C     externdef _imp__strcat:PTR c_msvcrt
 = _imp__strcat		      C     crt_strcat equ <_imp__strcat>
			      C 
			      C     externdef _imp__strchr:PTR c_msvcrt
 = _imp__strchr		      C     crt_strchr equ <_imp__strchr>
			      C 
			      C     externdef _imp__strcmp:PTR c_msvcrt
 = _imp__strcmp		      C     crt_strcmp equ <_imp__strcmp>
			      C 
			      C     externdef _imp__strcoll:PTR c_msvcrt
 = _imp__strcoll	      C     crt_strcoll equ <_imp__strcoll>
			      C 
			      C     externdef _imp__strcpy:PTR c_msvcrt
 = _imp__strcpy		      C     crt_strcpy equ <_imp__strcpy>
			      C 
			      C     externdef _imp__strcspn:PTR c_msvcrt
 = _imp__strcspn	      C     crt_strcspn equ <_imp__strcspn>
			      C 
			      C     externdef _imp__strerror:PTR c_msvcrt
 = _imp__strerror	      C     crt_strerror equ <_imp__strerror>
			      C 
			      C     externdef _imp__strftime:PTR c_msvcrt
 = _imp__strftime	      C     crt_strftime equ <_imp__strftime>
			      C 
			      C     externdef _imp__strlen:PTR c_msvcrt
 = _imp__strlen		      C     crt_strlen equ <_imp__strlen>
			      C 
			      C     externdef _imp__strncat:PTR c_msvcrt
 = _imp__strncat	      C     crt_strncat equ <_imp__strncat>
			      C 
			      C     externdef _imp__strncmp:PTR c_msvcrt
 = _imp__strncmp	      C     crt_strncmp equ <_imp__strncmp>
			      C 
			      C     externdef _imp__strncpy:PTR c_msvcrt
 = _imp__strncpy	      C     crt_strncpy equ <_imp__strncpy>
			      C 
			      C     externdef _imp__strpbrk:PTR c_msvcrt
 = _imp__strpbrk	      C     crt_strpbrk equ <_imp__strpbrk>
			      C 
			      C     externdef _imp__strrchr:PTR c_msvcrt
 = _imp__strrchr	      C     crt_strrchr equ <_imp__strrchr>
			      C 
			      C     externdef _imp__strspn:PTR c_msvcrt
 = _imp__strspn		      C     crt_strspn equ <_imp__strspn>
			      C 
			      C     externdef _imp__strstr:PTR c_msvcrt
 = _imp__strstr		      C     crt_strstr equ <_imp__strstr>
			      C 
			      C     externdef _imp__strtod:PTR c_msvcrt
 = _imp__strtod		      C     crt_strtod equ <_imp__strtod>
			      C 
			      C     externdef _imp__strtok:PTR c_msvcrt
 = _imp__strtok		      C     crt_strtok equ <_imp__strtok>
			      C 
			      C     externdef _imp__strtol:PTR c_msvcrt
 = _imp__strtol		      C     crt_strtol equ <_imp__strtol>
			      C 
			      C     externdef _imp__strtoul:PTR c_msvcrt
 = _imp__strtoul	      C     crt_strtoul equ <_imp__strtoul>
			      C 
			      C     externdef _imp__strxfrm:PTR c_msvcrt
 = _imp__strxfrm	      C     crt_strxfrm equ <_imp__strxfrm>
			      C 
			      C     externdef _imp__swprintf:PTR c_msvcrt
 = _imp__swprintf	      C     crt_swprintf equ <_imp__swprintf>
			      C 
			      C     externdef _imp__swscanf:PTR c_msvcrt
 = _imp__swscanf	      C     crt_swscanf equ <_imp__swscanf>
			      C 
			      C     externdef _imp__system:PTR c_msvcrt
 = _imp__system		      C     crt_system equ <_imp__system>
			      C 
			      C     externdef _imp__tan:PTR c_msvcrt
 = _imp__tan		      C     crt_tan equ <_imp__tan>
			      C 
			      C     externdef _imp__tanh:PTR c_msvcrt
 = _imp__tanh		      C     crt_tanh equ <_imp__tanh>
			      C 
			      C     externdef _imp__time:PTR c_msvcrt
 = _imp__time		      C     crt_time equ <_imp__time>
			      C 
			      C     externdef _imp__tmpfile:PTR c_msvcrt
 = _imp__tmpfile	      C     crt_tmpfile equ <_imp__tmpfile>
			      C 
			      C     externdef _imp__tmpnam:PTR c_msvcrt
 = _imp__tmpnam		      C     crt_tmpnam equ <_imp__tmpnam>
			      C 
			      C     externdef _imp__tolower:PTR c_msvcrt
 = _imp__tolower	      C     crt_tolower equ <_imp__tolower>
			      C 
			      C     externdef _imp__toupper:PTR c_msvcrt
 = _imp__toupper	      C     crt_toupper equ <_imp__toupper>
			      C 
			      C     externdef _imp__towlower:PTR c_msvcrt
 = _imp__towlower	      C     crt_towlower equ <_imp__towlower>
			      C 
			      C     externdef _imp__towupper:PTR c_msvcrt
 = _imp__towupper	      C     crt_towupper equ <_imp__towupper>
			      C 
			      C     externdef _imp__ungetc:PTR c_msvcrt
 = _imp__ungetc		      C     crt_ungetc equ <_imp__ungetc>
			      C 
			      C     externdef _imp__ungetwc:PTR c_msvcrt
 = _imp__ungetwc	      C     crt_ungetwc equ <_imp__ungetwc>
			      C 
			      C     externdef _imp__vfprintf:PTR c_msvcrt
 = _imp__vfprintf	      C     crt_vfprintf equ <_imp__vfprintf>
			      C 
			      C     externdef _imp__vfwprintf:PTR c_msvcrt
 = _imp__vfwprintf	      C     crt_vfwprintf equ <_imp__vfwprintf>
			      C 
			      C     externdef _imp__vprintf:PTR c_msvcrt
 = _imp__vprintf	      C     crt_vprintf equ <_imp__vprintf>
			      C 
			      C     externdef _imp__vsprintf:PTR c_msvcrt
 = _imp__vsprintf	      C     crt_vsprintf equ <_imp__vsprintf>
			      C 
			      C     externdef _imp__vswprintf:PTR c_msvcrt
 = _imp__vswprintf	      C     crt_vswprintf equ <_imp__vswprintf>
			      C 
			      C     externdef _imp__vwprintf:PTR c_msvcrt
 = _imp__vwprintf	      C     crt_vwprintf equ <_imp__vwprintf>
			      C 
			      C     externdef _imp__wcscat:PTR c_msvcrt
 = _imp__wcscat		      C     crt_wcscat equ <_imp__wcscat>
			      C 
			      C     externdef _imp__wcschr:PTR c_msvcrt
 = _imp__wcschr		      C     crt_wcschr equ <_imp__wcschr>
			      C 
			      C     externdef _imp__wcscmp:PTR c_msvcrt
 = _imp__wcscmp		      C     crt_wcscmp equ <_imp__wcscmp>
			      C 
			      C     externdef _imp__wcscoll:PTR c_msvcrt
 = _imp__wcscoll	      C     crt_wcscoll equ <_imp__wcscoll>
			      C 
			      C     externdef _imp__wcscpy:PTR c_msvcrt
 = _imp__wcscpy		      C     crt_wcscpy equ <_imp__wcscpy>
			      C 
			      C     externdef _imp__wcscspn:PTR c_msvcrt
 = _imp__wcscspn	      C     crt_wcscspn equ <_imp__wcscspn>
			      C 
			      C     externdef _imp__wcsftime:PTR c_msvcrt
 = _imp__wcsftime	      C     crt_wcsftime equ <_imp__wcsftime>
			      C 
			      C     externdef _imp__wcslen:PTR c_msvcrt
 = _imp__wcslen		      C     crt_wcslen equ <_imp__wcslen>
			      C 
			      C     externdef _imp__wcsncat:PTR c_msvcrt
 = _imp__wcsncat	      C     crt_wcsncat equ <_imp__wcsncat>
			      C 
			      C     externdef _imp__wcsncmp:PTR c_msvcrt
 = _imp__wcsncmp	      C     crt_wcsncmp equ <_imp__wcsncmp>
			      C 
			      C     externdef _imp__wcsncpy:PTR c_msvcrt
 = _imp__wcsncpy	      C     crt_wcsncpy equ <_imp__wcsncpy>
			      C 
			      C     externdef _imp__wcspbrk:PTR c_msvcrt
 = _imp__wcspbrk	      C     crt_wcspbrk equ <_imp__wcspbrk>
			      C 
			      C     externdef _imp__wcsrchr:PTR c_msvcrt
 = _imp__wcsrchr	      C     crt_wcsrchr equ <_imp__wcsrchr>
			      C 
			      C     externdef _imp__wcsspn:PTR c_msvcrt
 = _imp__wcsspn		      C     crt_wcsspn equ <_imp__wcsspn>
			      C 
			      C     externdef _imp__wcsstr:PTR c_msvcrt
 = _imp__wcsstr		      C     crt_wcsstr equ <_imp__wcsstr>
			      C 
			      C     externdef _imp__wcstod:PTR c_msvcrt
 = _imp__wcstod		      C     crt_wcstod equ <_imp__wcstod>
			      C 
			      C     externdef _imp__wcstok:PTR c_msvcrt
 = _imp__wcstok		      C     crt_wcstok equ <_imp__wcstok>
			      C 
			      C     externdef _imp__wcstol:PTR c_msvcrt
 = _imp__wcstol		      C     crt_wcstol equ <_imp__wcstol>
			      C 
			      C     externdef _imp__wcstombs:PTR c_msvcrt
 = _imp__wcstombs	      C     crt_wcstombs equ <_imp__wcstombs>
			      C 
			      C     externdef _imp__wcstoul:PTR c_msvcrt
 = _imp__wcstoul	      C     crt_wcstoul equ <_imp__wcstoul>
			      C 
			      C     externdef _imp__wcsxfrm:PTR c_msvcrt
 = _imp__wcsxfrm	      C     crt_wcsxfrm equ <_imp__wcsxfrm>
			      C 
			      C     externdef _imp__wctomb:PTR c_msvcrt
 = _imp__wctomb		      C     crt_wctomb equ <_imp__wctomb>
			      C 
			      C     externdef _imp__wprintf:PTR c_msvcrt
 = _imp__wprintf	      C     crt_wprintf equ <_imp__wprintf>
			      C 
			      C     externdef _imp__wscanf:PTR c_msvcrt
 = _imp__wscanf		      C     crt_wscanf equ <_imp__wscanf>
			      C 
			      C 
				include kernel32.inc
			      C ; --------------------------------------------------------------------------------------------------
			      C ;                          kernel32.inc Copyright The MASM32 SDK 1998-2010
			      C ; --------------------------------------------------------------------------------------------------
			      C 
			      C IFNDEF KERNEL32_INC
 = 1			      C KERNEL32_INC equ <1>
			      C 
			      C ActivateActCtx PROTO STDCALL :DWORD,:DWORD
			      C 
			      C AddAtomA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = AddAtomA		      C   AddAtom equ <AddAtomA>
			      C ENDIF
			      C 
			      C AddAtomW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C AddLocalAlternateComputerNameA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = AddLocalAlternateCompute   C   AddLocalAlternateComputerName equ <AddLocalAlternateComputerNameA>
   rNameA
			      C ENDIF
			      C 
			      C AddLocalAlternateComputerNameW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C AddRefActCtx PROTO STDCALL :DWORD
			      C AddVectoredExceptionHandler PROTO STDCALL :DWORD,:DWORD
			      C AllocConsole PROTO STDCALL
			      C AllocateUserPhysicalPages PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C AreFileApisANSI PROTO STDCALL
			      C AssignProcessToJobObject PROTO STDCALL :DWORD,:DWORD
			      C AttachConsole PROTO STDCALL :DWORD
			      C BackupRead PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C BackupSeek PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C BackupWrite PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C Beep PROTO STDCALL :DWORD,:DWORD
			      C 
			      C BeginUpdateResourceA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = BeginUpdateResourceA	      C   BeginUpdateResource equ <BeginUpdateResourceA>
			      C ENDIF
			      C 
			      C BeginUpdateResourceW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C BindIoCompletionCallback PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C BuildCommDCBA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = BuildCommDCBA	      C   BuildCommDCB equ <BuildCommDCBA>
			      C ENDIF
			      C 
			      C BuildCommDCBAndTimeoutsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = BuildCommDCBAndTimeoutsA   C   BuildCommDCBAndTimeouts equ <BuildCommDCBAndTimeoutsA>
			      C ENDIF
			      C 
			      C BuildCommDCBAndTimeoutsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C BuildCommDCBW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CallNamedPipeA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CallNamedPipeA	      C   CallNamedPipe equ <CallNamedPipeA>
			      C ENDIF
			      C 
			      C CallNamedPipeW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CancelDeviceWakeupRequest PROTO STDCALL :DWORD
			      C CancelIo PROTO STDCALL :DWORD
			      C CancelTimerQueueTimer PROTO STDCALL :DWORD,:DWORD
			      C CancelWaitableTimer PROTO STDCALL :DWORD
			      C ChangeTimerQueueTimer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C CheckNameLegalDOS8Dot3A PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CheckNameLegalDOS8Dot3A    C   CheckNameLegalDOS8Dot3 equ <CheckNameLegalDOS8Dot3A>
			      C ENDIF
			      C 
			      C CheckNameLegalDOS8Dot3W PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CheckRemoteDebuggerPresent PROTO STDCALL :DWORD,:DWORD
			      C ClearCommBreak PROTO STDCALL :DWORD
			      C ClearCommError PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C CloseHandle PROTO STDCALL :DWORD
			      C 
			      C CommConfigDialogA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CommConfigDialogA	      C   CommConfigDialog equ <CommConfigDialogA>
			      C ENDIF
			      C 
			      C CommConfigDialogW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CompareFileTime PROTO STDCALL :DWORD,:DWORD
			      C 
			      C CompareStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CompareStringA	      C   CompareString equ <CompareStringA>
			      C ENDIF
			      C 
			      C CompareStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ConnectNamedPipe PROTO STDCALL :DWORD,:DWORD
			      C ContinueDebugEvent PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C ConvertDefaultLocale PROTO STDCALL :DWORD
			      C ConvertFiberToThread PROTO STDCALL
			      C ConvertThreadToFiber PROTO STDCALL :DWORD
			      C 
			      C CopyFileA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CopyFileA		      C   CopyFile equ <CopyFileA>
			      C ENDIF
			      C 
			      C CopyFileExA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CopyFileExA		      C   CopyFileEx equ <CopyFileExA>
			      C ENDIF
			      C 
			      C CopyFileExW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CopyFileW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateActCtxA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = CreateActCtxA	      C   CreateActCtx equ <CreateActCtxA>
			      C ENDIF
			      C 
			      C CreateActCtxW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateConsoleScreenBuffer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C CreateDirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateDirectoryA	      C   CreateDirectory equ <CreateDirectoryA>
			      C ENDIF
			      C 
			      C CreateDirectoryExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateDirectoryExA	      C   CreateDirectoryEx equ <CreateDirectoryExA>
			      C ENDIF
			      C 
			      C CreateDirectoryExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateDirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateEventA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateEventA		      C   CreateEvent equ <CreateEventA>
			      C ENDIF
			      C 
			      C CreateEventW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateFiber PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C CreateFiberEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C CreateFileA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateFileA		      C   CreateFile equ <CreateFileA>
			      C ENDIF
			      C 
			      C CreateFileMappingA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateFileMappingA	      C   CreateFileMapping equ <CreateFileMappingA>
			      C ENDIF
			      C 
			      C CreateFileMappingW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateFileW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateHardLinkA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateHardLinkA	      C   CreateHardLink equ <CreateHardLinkA>
			      C ENDIF
			      C 
			      C CreateHardLinkW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateIoCompletionPort PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C CreateJobObjectA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateJobObjectA	      C   CreateJobObject equ <CreateJobObjectA>
			      C ENDIF
			      C 
			      C CreateJobObjectW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateJobSet PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C CreateMailslotA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateMailslotA	      C   CreateMailslot equ <CreateMailslotA>
			      C ENDIF
			      C 
			      C CreateMailslotW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateMemoryResourceNotification PROTO STDCALL :DWORD
			      C 
			      C CreateMutexA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateMutexA		      C   CreateMutex equ <CreateMutexA>
			      C ENDIF
			      C 
			      C CreateMutexW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateNamedPipeA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateNamedPipeA	      C   CreateNamedPipe equ <CreateNamedPipeA>
			      C ENDIF
			      C 
			      C CreateNamedPipeW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreatePipe PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C CreateProcessA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateProcessA	      C   CreateProcess equ <CreateProcessA>
			      C ENDIF
			      C 
			      C CreateProcessInternalWSecure PROTO STDCALL
			      C 
			      C CreateProcessW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateRemoteThread PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C CreateSemaphoreA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateSemaphoreA	      C   CreateSemaphore equ <CreateSemaphoreA>
			      C ENDIF
			      C 
			      C CreateSemaphoreW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateTapePartition PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C CreateThread PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C CreateTimerQueue PROTO STDCALL
			      C CreateTimerQueueTimer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C CreateToolhelp32Snapshot PROTO STDCALL :DWORD,:DWORD
			      C 
			      C CreateWaitableTimerA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateWaitableTimerA	      C   CreateWaitableTimer equ <CreateWaitableTimerA>
			      C ENDIF
			      C 
			      C CreateWaitableTimerW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C DeactivateActCtx PROTO STDCALL :DWORD,:DWORD
			      C DebugActiveProcess PROTO STDCALL :DWORD
			      C DebugActiveProcessStop PROTO STDCALL :DWORD
			      C DebugBreak PROTO STDCALL
			      C DebugBreakProcess PROTO STDCALL :DWORD
			      C DebugSetProcessKillOnExit PROTO STDCALL :DWORD
			      C DecodePointer PROTO STDCALL :DWORD
			      C DecodeSystemPointer PROTO STDCALL :DWORD
			      C 
			      C DefineDosDeviceA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = DefineDosDeviceA	      C   DefineDosDevice equ <DefineDosDeviceA>
			      C ENDIF
			      C 
			      C DefineDosDeviceW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C DeleteAtom PROTO STDCALL :DWORD
			      C DeleteCriticalSection PROTO STDCALL :DWORD
			      C DeleteFiber PROTO STDCALL :DWORD
			      C 
			      C DeleteFileA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = DeleteFileA		      C   DeleteFile equ <DeleteFileA>
			      C ENDIF
			      C 
			      C DeleteFileW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C DeleteTimerQueue PROTO STDCALL :DWORD
			      C DeleteTimerQueueEx PROTO STDCALL :DWORD,:DWORD
			      C DeleteTimerQueueTimer PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C DeleteVolumeMountPointA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = DeleteVolumeMountPointA    C   DeleteVolumeMountPoint equ <DeleteVolumeMountPointA>
			      C ENDIF
			      C 
			      C DeleteVolumeMountPointW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C DeviceIoControl PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C DisableThreadLibraryCalls PROTO STDCALL :DWORD
			      C DisconnectNamedPipe PROTO STDCALL :DWORD
			      C 
			      C DnsHostnameToComputerNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = DnsHostnameToComputerNam   C   DnsHostnameToComputerName equ <DnsHostnameToComputerNameA>
   eA
			      C ENDIF
			      C 
			      C DnsHostnameToComputerNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C DosDateTimeToFileTime PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C DuplicateHandle PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C EncodePointer PROTO STDCALL :DWORD
			      C EncodeSystemPointer PROTO STDCALL :DWORD
			      C 
			      C EndUpdateResourceA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EndUpdateResourceA	      C   EndUpdateResource equ <EndUpdateResourceA>
			      C ENDIF
			      C 
			      C EndUpdateResourceW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnterCriticalSection PROTO STDCALL :DWORD
			      C 
			      C EnumCalendarInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumCalendarInfoA	      C   EnumCalendarInfo equ <EnumCalendarInfoA>
			      C ENDIF
			      C 
			      C EnumCalendarInfoExA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumCalendarInfoExA	      C   EnumCalendarInfoEx equ <EnumCalendarInfoExA>
			      C ENDIF
			      C 
			      C EnumCalendarInfoExW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumCalendarInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumDateFormatsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumDateFormatsA	      C   EnumDateFormats equ <EnumDateFormatsA>
			      C ENDIF
			      C 
			      C EnumDateFormatsExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumDateFormatsExA	      C   EnumDateFormatsEx equ <EnumDateFormatsExA>
			      C ENDIF
			      C 
			      C EnumDateFormatsExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumDateFormatsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumLanguageGroupLocalesA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumLanguageGroupLocales   C   EnumLanguageGroupLocales equ <EnumLanguageGroupLocalesA>
   A
			      C ENDIF
			      C 
			      C EnumLanguageGroupLocalesW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumResourceLanguagesA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumResourceLanguagesA     C   EnumResourceLanguages equ <EnumResourceLanguagesA>
			      C ENDIF
			      C 
			      C EnumResourceLanguagesW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumResourceNamesA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumResourceNamesA	      C   EnumResourceNames equ <EnumResourceNamesA>
			      C ENDIF
			      C 
			      C EnumResourceNamesW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumResourceTypesA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumResourceTypesA	      C   EnumResourceTypes equ <EnumResourceTypesA>
			      C ENDIF
			      C 
			      C EnumResourceTypesW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumSystemCodePagesA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumSystemCodePagesA	      C   EnumSystemCodePages equ <EnumSystemCodePagesA>
			      C ENDIF
			      C 
			      C EnumSystemCodePagesW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumSystemGeoID PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C EnumSystemLanguageGroupsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumSystemLanguageGroups   C   EnumSystemLanguageGroups equ <EnumSystemLanguageGroupsA>
   A
			      C ENDIF
			      C 
			      C EnumSystemLanguageGroupsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumSystemLocalesA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumSystemLocalesA	      C   EnumSystemLocales equ <EnumSystemLocalesA>
			      C ENDIF
			      C 
			      C EnumSystemLocalesW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumTimeFormatsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumTimeFormatsA	      C   EnumTimeFormats equ <EnumTimeFormatsA>
			      C ENDIF
			      C 
			      C EnumTimeFormatsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumUILanguagesA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumUILanguagesA	      C   EnumUILanguages equ <EnumUILanguagesA>
			      C ENDIF
			      C 
			      C EnumUILanguagesW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumerateLocalComputerNamesA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumerateLocalComputerNa   C   EnumerateLocalComputerNames equ <EnumerateLocalComputerNamesA>
   mesA
			      C ENDIF
			      C 
			      C EnumerateLocalComputerNamesW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EraseTape PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C EscapeCommFunction PROTO STDCALL :DWORD,:DWORD
			      C ExitProcess PROTO STDCALL :DWORD
			      C ExitThread PROTO STDCALL :DWORD
			      C 
			      C ExpandEnvironmentStringsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ExpandEnvironmentStrings   C   ExpandEnvironmentStrings equ <ExpandEnvironmentStringsA>
   A
			      C ENDIF
			      C 
			      C ExpandEnvironmentStringsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FatalAppExitA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FatalAppExitA	      C   FatalAppExit equ <FatalAppExitA>
			      C ENDIF
			      C 
			      C FatalAppExitW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FatalExit PROTO STDCALL :DWORD
			      C FileTimeToDosDateTime PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C FileTimeToLocalFileTime PROTO STDCALL :DWORD,:DWORD
			      C FileTimeToSystemTime PROTO STDCALL :DWORD,:DWORD
			      C FillConsoleOutputAttribute PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C FillConsoleOutputCharacterA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FillConsoleOutputCharact   C   FillConsoleOutputCharacter equ <FillConsoleOutputCharacterA>
   erA
			      C ENDIF
			      C 
			      C FillConsoleOutputCharacterW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindActCtxSectionGuid PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C FindActCtxSectionStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindActCtxSectionStringA   C   FindActCtxSectionString equ <FindActCtxSectionStringA>
			      C ENDIF
			      C 
			      C FindActCtxSectionStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindAtomA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = FindAtomA		      C   FindAtom equ <FindAtomA>
			      C ENDIF
			      C 
			      C FindAtomW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindClose PROTO STDCALL :DWORD
			      C FindCloseChangeNotification PROTO STDCALL :DWORD
			      C 
			      C FindFirstChangeNotificationA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindFirstChangeNotificat   C   FindFirstChangeNotification equ <FindFirstChangeNotificationA>
   ionA
			      C ENDIF
			      C 
			      C FindFirstChangeNotificationW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindFirstFileA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindFirstFileA	      C   FindFirstFile equ <FindFirstFileA>
			      C ENDIF
			      C 
			      C FindFirstFileExA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindFirstFileExA	      C   FindFirstFileEx equ <FindFirstFileExA>
			      C ENDIF
			      C 
			      C FindFirstFileExW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindFirstFileW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindFirstVolumeA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindFirstVolumeA	      C   FindFirstVolume equ <FindFirstVolumeA>
			      C ENDIF
			      C 
			      C FindFirstVolumeMountPointA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindFirstVolumeMountPoin   C   FindFirstVolumeMountPoint equ <FindFirstVolumeMountPointA>
   tA
			      C ENDIF
			      C 
			      C FindFirstVolumeMountPointW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindFirstVolumeW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindNextChangeNotification PROTO STDCALL :DWORD
			      C 
			      C FindNextFileA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindNextFileA	      C   FindNextFile equ <FindNextFileA>
			      C ENDIF
			      C 
			      C FindNextFileW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindNextVolumeA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindNextVolumeA	      C   FindNextVolume equ <FindNextVolumeA>
			      C ENDIF
			      C 
			      C FindNextVolumeMountPointA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindNextVolumeMountPoint   C   FindNextVolumeMountPoint equ <FindNextVolumeMountPointA>
   A
			      C ENDIF
			      C 
			      C FindNextVolumeMountPointW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindNextVolumeW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindResourceA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindResourceA	      C   FindResource equ <FindResourceA>
			      C ENDIF
			      C 
			      C FindResourceExA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindResourceExA	      C   FindResourceEx equ <FindResourceExA>
			      C ENDIF
			      C 
			      C FindResourceExW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindResourceW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindVolumeClose PROTO STDCALL :DWORD
			      C FindVolumeMountPointClose PROTO STDCALL :DWORD
			      C FlushConsoleInputBuffer PROTO STDCALL :DWORD
			      C FlushFileBuffers PROTO STDCALL :DWORD
			      C FlushInstructionCache PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C FlushViewOfFile PROTO STDCALL :DWORD,:DWORD
			      C 
			      C FoldStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FoldStringA		      C   FoldString equ <FoldStringA>
			      C ENDIF
			      C 
			      C FoldStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FormatMessageA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FormatMessageA	      C   FormatMessage equ <FormatMessageA>
			      C ENDIF
			      C 
			      C FormatMessageW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FreeConsole PROTO STDCALL
			      C 
			      C FreeEnvironmentStringsA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = FreeEnvironmentStringsA    C   FreeEnvironmentStrings equ <FreeEnvironmentStringsA>
			      C ENDIF
			      C 
			      C FreeEnvironmentStringsW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FreeLibrary PROTO STDCALL :DWORD
			      C FreeLibraryAndExitThread PROTO STDCALL :DWORD,:DWORD
			      C FreeResource PROTO STDCALL :DWORD
			      C FreeUserPhysicalPages PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GenerateConsoleCtrlEvent PROTO STDCALL :DWORD,:DWORD
			      C GetACP PROTO STDCALL
			      C 
			      C GetAtomNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetAtomNameA		      C   GetAtomName equ <GetAtomNameA>
			      C ENDIF
			      C 
			      C GetAtomNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C GetBinaryTypeA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetBinaryTypeA	      C   GetBinaryType equ <GetBinaryTypeA>
			      C ENDIF
			      C 
			      C GetBinaryTypeW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetCPInfo PROTO STDCALL :DWORD,:DWORD
			      C 
			      C GetCPInfoExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetCPInfoExA		      C   GetCPInfoEx equ <GetCPInfoExA>
			      C ENDIF
			      C 
			      C GetCPInfoExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetCalendarInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetCalendarInfoA	      C   GetCalendarInfo equ <GetCalendarInfoA>
			      C ENDIF
			      C 
			      C GetCalendarInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetCommConfig PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GetCommMask PROTO STDCALL :DWORD,:DWORD
			      C GetCommModemStatus PROTO STDCALL :DWORD,:DWORD
			      C GetCommProperties PROTO STDCALL :DWORD,:DWORD
			      C GetCommState PROTO STDCALL :DWORD,:DWORD
			      C GetCommTimeouts PROTO STDCALL :DWORD,:DWORD
			      C 
			      C GetCommandLineA PROTO STDCALL
			      C IFNDEF __UNICODE__
 = GetCommandLineA	      C   GetCommandLine equ <GetCommandLineA>
			      C ENDIF
			      C 
			      C GetCommandLineW PROTO STDCALL
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetCompressedFileSizeA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetCompressedFileSizeA     C   GetCompressedFileSize equ <GetCompressedFileSizeA>
			      C ENDIF
			      C 
			      C GetCompressedFileSizeW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetComputerNameA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetComputerNameA	      C   GetComputerName equ <GetComputerNameA>
			      C ENDIF
			      C 
			      C GetComputerNameExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetComputerNameExA	      C   GetComputerNameEx equ <GetComputerNameExA>
			      C ENDIF
			      C 
			      C GetComputerNameExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetComputerNameW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetConsoleCP PROTO STDCALL
			      C GetConsoleCursorInfo PROTO STDCALL :DWORD,:DWORD
			      C GetConsoleDisplayMode PROTO STDCALL :DWORD
			      C GetConsoleFontSize PROTO STDCALL :DWORD,:DWORD
			      C GetConsoleMode PROTO STDCALL :DWORD,:DWORD
			      C GetConsoleOutputCP PROTO STDCALL
			      C GetConsoleProcessList PROTO STDCALL :DWORD,:DWORD
			      C GetConsoleScreenBufferInfo PROTO STDCALL :DWORD,:DWORD
			      C GetConsoleSelectionInfo PROTO STDCALL :DWORD
			      C 
			      C GetConsoleTitleA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetConsoleTitleA	      C   GetConsoleTitle equ <GetConsoleTitleA>
			      C ENDIF
			      C 
			      C GetConsoleTitleW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetConsoleWindow PROTO STDCALL
			      C 
			      C GetCurrencyFormatA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetCurrencyFormatA	      C   GetCurrencyFormat equ <GetCurrencyFormatA>
			      C ENDIF
			      C 
			      C GetCurrencyFormatW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetCurrentActCtx PROTO STDCALL :DWORD
			      C GetCurrentConsoleFont PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C GetCurrentDirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetCurrentDirectoryA	      C   GetCurrentDirectory equ <GetCurrentDirectoryA>
			      C ENDIF
			      C 
			      C GetCurrentDirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetCurrentProcess PROTO STDCALL
			      C GetCurrentProcessId PROTO STDCALL
			      C GetCurrentThread PROTO STDCALL
			      C GetCurrentThreadId PROTO STDCALL
			      C 
			      C GetDateFormatA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetDateFormatA	      C   GetDateFormat equ <GetDateFormatA>
			      C ENDIF
			      C 
			      C GetDateFormatW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetDefaultCommConfigA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetDefaultCommConfigA      C   GetDefaultCommConfig equ <GetDefaultCommConfigA>
			      C ENDIF
			      C 
			      C GetDefaultCommConfigW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetDevicePowerState PROTO STDCALL :DWORD,:DWORD
			      C 
			      C GetDiskFreeSpaceA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetDiskFreeSpaceA	      C   GetDiskFreeSpace equ <GetDiskFreeSpaceA>
			      C ENDIF
			      C 
			      C GetDiskFreeSpaceExA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetDiskFreeSpaceExA	      C   GetDiskFreeSpaceEx equ <GetDiskFreeSpaceExA>
			      C ENDIF
			      C 
			      C GetDiskFreeSpaceExW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetDiskFreeSpaceW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetDllDirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetDllDirectoryA	      C   GetDllDirectory equ <GetDllDirectoryA>
			      C ENDIF
			      C 
			      C GetDllDirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetDriveTypeA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GetDriveTypeA	      C   GetDriveType equ <GetDriveTypeA>
			      C ENDIF
			      C 
			      C GetDriveTypeW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C GetEnvironmentStringsA PROTO STDCALL
			      C IFNDEF __UNICODE__
 = GetEnvironmentStringsA     C   GetEnvironmentStrings equ <GetEnvironmentStringsA>
			      C ENDIF
			      C 
			      C GetEnvironmentStringsW PROTO STDCALL
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetEnvironmentVariableA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetEnvironmentVariableA    C   GetEnvironmentVariable equ <GetEnvironmentVariableA>
			      C ENDIF
			      C 
			      C GetEnvironmentVariableW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetExitCodeProcess PROTO STDCALL :DWORD,:DWORD
			      C GetExitCodeThread PROTO STDCALL :DWORD,:DWORD
			      C 
			      C GetFileAttributesA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GetFileAttributesA	      C   GetFileAttributes equ <GetFileAttributesA>
			      C ENDIF
			      C 
			      C GetFileAttributesExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetFileAttributesExA	      C   GetFileAttributesEx equ <GetFileAttributesExA>
			      C ENDIF
			      C 
			      C GetFileAttributesExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetFileAttributesW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetFileInformationByHandle PROTO STDCALL :DWORD,:DWORD
			      C GetFileSize PROTO STDCALL :DWORD,:DWORD
			      C GetFileSizeEx PROTO STDCALL :DWORD,:DWORD
			      C GetFileTime PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C GetFileType PROTO STDCALL :DWORD
			      C 
			      C GetFirmwareEnvironmentVariableA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetFirmwareEnvironmentVa   C   GetFirmwareEnvironmentVariable equ <GetFirmwareEnvironmentVariableA>
   riableA
			      C ENDIF
			      C 
			      C GetFirmwareEnvironmentVariableW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetFullPathNameA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetFullPathNameA	      C   GetFullPathName equ <GetFullPathNameA>
			      C ENDIF
			      C 
			      C GetFullPathNameW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetGeoInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetGeoInfoA		      C   GetGeoInfo equ <GetGeoInfoA>
			      C ENDIF
			      C 
			      C GetGeoInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetHandleInformation PROTO STDCALL :DWORD,:DWORD
			      C GetLargestConsoleWindowSize PROTO STDCALL :DWORD
			      C GetLastError PROTO STDCALL
			      C GetLocalTime PROTO STDCALL :DWORD
			      C 
			      C GetLocaleInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetLocaleInfoA	      C   GetLocaleInfo equ <GetLocaleInfoA>
			      C ENDIF
			      C 
			      C GetLocaleInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetLogicalDriveStringsA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetLogicalDriveStringsA    C   GetLogicalDriveStrings equ <GetLogicalDriveStringsA>
			      C ENDIF
			      C 
			      C GetLogicalDriveStringsW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetLogicalDrives PROTO STDCALL
			      C 
			      C GetLongPathNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetLongPathNameA	      C   GetLongPathName equ <GetLongPathNameA>
			      C ENDIF
			      C 
			      C GetLongPathNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetMailslotInfo PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C GetModuleFileNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetModuleFileNameA	      C   GetModuleFileName equ <GetModuleFileNameA>
			      C ENDIF
			      C 
			      C GetModuleFileNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetModuleHandleA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GetModuleHandleA	      C   GetModuleHandle equ <GetModuleHandleA>
			      C ENDIF
			      C 
			      C GetModuleHandleExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetModuleHandleExA	      C   GetModuleHandleEx equ <GetModuleHandleExA>
			      C ENDIF
			      C 
			      C GetModuleHandleExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetModuleHandleW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetNamedPipeHandleStateA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetNamedPipeHandleStateA   C   GetNamedPipeHandleState equ <GetNamedPipeHandleStateA>
			      C ENDIF
			      C 
			      C GetNamedPipeHandleStateW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetNamedPipeInfo PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C GetNativeSystemInfo PROTO STDCALL :DWORD
			      C GetNumaAvailableMemory PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GetNumaAvailableMemoryNode PROTO STDCALL :DWORD,:DWORD
			      C GetNumaHighestNodeNumber PROTO STDCALL :DWORD
			      C GetNumaNodeProcessorMask PROTO STDCALL :DWORD,:DWORD
			      C GetNumaProcessorMap PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GetNumaProcessorNode PROTO STDCALL :DWORD,:DWORD
			      C 
			      C GetNumberFormatA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetNumberFormatA	      C   GetNumberFormat equ <GetNumberFormatA>
			      C ENDIF
			      C 
			      C GetNumberFormatW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetNumberOfConsoleInputEvents PROTO STDCALL :DWORD,:DWORD
			      C GetNumberOfConsoleMouseButtons PROTO STDCALL :DWORD
			      C GetOEMCP PROTO STDCALL
			      C GetOverlappedResult PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C GetPriorityClass PROTO STDCALL :DWORD
			      C 
			      C GetPrivateProfileIntA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetPrivateProfileIntA      C   GetPrivateProfileInt equ <GetPrivateProfileIntA>
			      C ENDIF
			      C 
			      C GetPrivateProfileIntW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetPrivateProfileSectionA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetPrivateProfileSection   C   GetPrivateProfileSection equ <GetPrivateProfileSectionA>
   A
			      C ENDIF
			      C 
			      C GetPrivateProfileSectionNamesA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetPrivateProfileSection   C   GetPrivateProfileSectionNames equ <GetPrivateProfileSectionNamesA>
   NamesA
			      C ENDIF
			      C 
			      C GetPrivateProfileSectionNamesW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetPrivateProfileSectionW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetPrivateProfileStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetPrivateProfileStringA   C   GetPrivateProfileString equ <GetPrivateProfileStringA>
			      C ENDIF
			      C 
			      C GetPrivateProfileStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetPrivateProfileStructA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetPrivateProfileStructA   C   GetPrivateProfileStruct equ <GetPrivateProfileStructA>
			      C ENDIF
			      C 
			      C GetPrivateProfileStructW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetProcAddress PROTO STDCALL :DWORD,:DWORD
			      C GetProcessAffinityMask PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GetProcessHandleCount PROTO STDCALL :DWORD,:DWORD
			      C GetProcessHeap PROTO STDCALL
			      C GetProcessHeaps PROTO STDCALL :DWORD,:DWORD
			      C GetProcessId PROTO STDCALL :DWORD
			      C GetProcessIoCounters PROTO STDCALL :DWORD,:DWORD
			      C GetProcessPriorityBoost PROTO STDCALL :DWORD,:DWORD
			      C GetProcessShutdownParameters PROTO STDCALL :DWORD,:DWORD
			      C GetProcessTimes PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C GetProcessVersion PROTO STDCALL :DWORD
			      C GetProcessWorkingSetSize PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C GetProfileIntA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetProfileIntA	      C   GetProfileInt equ <GetProfileIntA>
			      C ENDIF
			      C 
			      C GetProfileIntW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetProfileSectionA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetProfileSectionA	      C   GetProfileSection equ <GetProfileSectionA>
			      C ENDIF
			      C 
			      C GetProfileSectionW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetProfileStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetProfileStringA	      C   GetProfileString equ <GetProfileStringA>
			      C ENDIF
			      C 
			      C GetProfileStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetQueuedCompletionStatus PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C GetShortPathNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetShortPathNameA	      C   GetShortPathName equ <GetShortPathNameA>
			      C ENDIF
			      C 
			      C GetShortPathNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetStartupInfoA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GetStartupInfoA	      C   GetStartupInfo equ <GetStartupInfoA>
			      C ENDIF
			      C 
			      C GetStartupInfoW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetStdHandle PROTO STDCALL :DWORD
			      C 
			      C GetStringTypeA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetStringTypeA	      C   GetStringType equ <GetStringTypeA>
			      C ENDIF
			      C 
			      C GetStringTypeExA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetStringTypeExA	      C   GetStringTypeEx equ <GetStringTypeExA>
			      C ENDIF
			      C 
			      C GetStringTypeExW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetStringTypeW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetSystemDefaultLCID PROTO STDCALL
			      C GetSystemDefaultLangID PROTO STDCALL
			      C GetSystemDefaultUILanguage PROTO STDCALL
			      C 
			      C GetSystemDirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetSystemDirectoryA	      C   GetSystemDirectory equ <GetSystemDirectoryA>
			      C ENDIF
			      C 
			      C GetSystemDirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetSystemInfo PROTO STDCALL :DWORD
			      C GetSystemPowerStatus PROTO STDCALL :DWORD
			      C GetSystemRegistryQuota PROTO STDCALL :DWORD,:DWORD
			      C GetSystemTime PROTO STDCALL :DWORD
			      C GetSystemTimeAdjustment PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GetSystemTimeAsFileTime PROTO STDCALL :DWORD
			      C GetSystemTimes PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C GetSystemWindowsDirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetSystemWindowsDirector   C   GetSystemWindowsDirectory equ <GetSystemWindowsDirectoryA>
   yA
			      C ENDIF
			      C 
			      C GetSystemWindowsDirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetSystemWow64DirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetSystemWow64DirectoryA   C   GetSystemWow64Directory equ <GetSystemWow64DirectoryA>
			      C ENDIF
			      C 
			      C GetSystemWow64DirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetTapeParameters PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C GetTapePosition PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C GetTapeStatus PROTO STDCALL :DWORD
			      C 
			      C GetTempFileNameA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetTempFileNameA	      C   GetTempFileName equ <GetTempFileNameA>
			      C ENDIF
			      C 
			      C GetTempFileNameW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetTempPathA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetTempPathA		      C   GetTempPath equ <GetTempPathA>
			      C ENDIF
			      C 
			      C GetTempPathW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetThreadContext PROTO STDCALL :DWORD,:DWORD
			      C GetThreadIOPendingFlag PROTO STDCALL :DWORD,:DWORD
			      C GetThreadLocale PROTO STDCALL
			      C GetThreadPriority PROTO STDCALL :DWORD
			      C GetThreadPriorityBoost PROTO STDCALL :DWORD,:DWORD
			      C GetThreadSelectorEntry PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GetThreadTimes PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C GetTickCount PROTO STDCALL
			      C 
			      C GetTimeFormatA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetTimeFormatA	      C   GetTimeFormat equ <GetTimeFormatA>
			      C ENDIF
			      C 
			      C GetTimeFormatW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetTimeZoneInformation PROTO STDCALL :DWORD
			      C GetUserDefaultLCID PROTO STDCALL
			      C GetUserDefaultLangID PROTO STDCALL
			      C GetUserDefaultUILanguage PROTO STDCALL
			      C GetUserGeoID PROTO STDCALL :DWORD
			      C GetVersion PROTO STDCALL
			      C 
			      C GetVersionExA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GetVersionExA	      C   GetVersionEx equ <GetVersionExA>
			      C ENDIF
			      C 
			      C GetVersionExW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetVolumeInformationA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetVolumeInformationA      C   GetVolumeInformation equ <GetVolumeInformationA>
			      C ENDIF
			      C 
			      C GetVolumeInformationW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetVolumeNameForVolumeMountPointA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetVolumeNameForVolumeMo   C   GetVolumeNameForVolumeMountPoint equ <GetVolumeNameForVolumeMountPointA>
   untPointA
			      C ENDIF
			      C 
			      C GetVolumeNameForVolumeMountPointW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetVolumePathNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetVolumePathNameA	      C   GetVolumePathName equ <GetVolumePathNameA>
			      C ENDIF
			      C 
			      C GetVolumePathNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetVolumePathNamesForVolumeNameA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetVolumePathNamesForVol   C   GetVolumePathNamesForVolumeName equ <GetVolumePathNamesForVolumeNameA>
   umeNameA
			      C ENDIF
			      C 
			      C GetVolumePathNamesForVolumeNameW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetWindowsDirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetWindowsDirectoryA	      C   GetWindowsDirectory equ <GetWindowsDirectoryA>
			      C ENDIF
			      C 
			      C GetWindowsDirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetWriteWatch PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C GlobalAddAtomA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GlobalAddAtomA	      C   GlobalAddAtom equ <GlobalAddAtomA>
			      C ENDIF
			      C 
			      C GlobalAddAtomW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GlobalAlloc PROTO STDCALL :DWORD,:DWORD
			      C GlobalCompact PROTO STDCALL :DWORD
			      C GlobalDeleteAtom PROTO STDCALL :DWORD
			      C 
			      C GlobalFindAtomA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GlobalFindAtomA	      C   GlobalFindAtom equ <GlobalFindAtomA>
			      C ENDIF
			      C 
			      C GlobalFindAtomW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GlobalFix PROTO STDCALL :DWORD
			      C GlobalFlags PROTO STDCALL :DWORD
			      C GlobalFree PROTO STDCALL :DWORD
			      C 
			      C GlobalGetAtomNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GlobalGetAtomNameA	      C   GlobalGetAtomName equ <GlobalGetAtomNameA>
			      C ENDIF
			      C 
			      C GlobalGetAtomNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GlobalHandle PROTO STDCALL :DWORD
			      C GlobalLock PROTO STDCALL :DWORD
			      C GlobalMemoryStatus PROTO STDCALL :DWORD
			      C GlobalMemoryStatusEx PROTO STDCALL :DWORD
			      C GlobalReAlloc PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GlobalSize PROTO STDCALL :DWORD
			      C GlobalUnWire PROTO STDCALL :DWORD
			      C GlobalUnfix PROTO STDCALL :DWORD
			      C GlobalUnlock PROTO STDCALL :DWORD
			      C GlobalWire PROTO STDCALL :DWORD
			      C Heap32First PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C Heap32ListFirst PROTO STDCALL :DWORD,:DWORD
			      C Heap32ListNext PROTO STDCALL :DWORD,:DWORD
			      C Heap32Next PROTO STDCALL :DWORD
			      C HeapAlloc PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C HeapCompact PROTO STDCALL :DWORD,:DWORD
			      C HeapCreate PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C HeapDestroy PROTO STDCALL :DWORD
			      C HeapFree PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C HeapLock PROTO STDCALL :DWORD
			      C HeapQueryInformation PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C HeapReAlloc PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C HeapSetInformation PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C HeapSize PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C HeapUnlock PROTO STDCALL :DWORD
			      C HeapValidate PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C HeapWalk PROTO STDCALL :DWORD,:DWORD
			      C InitAtomTable PROTO STDCALL :DWORD
			      C InitializeCriticalSection PROTO STDCALL :DWORD
			      C InitializeCriticalSectionAndSpinCount PROTO STDCALL :DWORD,:DWORD
			      C InitializeSListHead PROTO STDCALL :DWORD
			      C InterlockedCompareExchange PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C InterlockedDecrement PROTO STDCALL :DWORD
			      C InterlockedExchange PROTO STDCALL :DWORD,:DWORD
			      C InterlockedExchangeAdd PROTO STDCALL :DWORD,:DWORD
			      C InterlockedFlushSList PROTO STDCALL :DWORD
			      C InterlockedIncrement PROTO STDCALL :DWORD
			      C InterlockedPopEntrySList PROTO STDCALL :DWORD
			      C InterlockedPushEntrySList PROTO STDCALL :DWORD,:DWORD
			      C IsBadCodePtr PROTO STDCALL :DWORD
			      C IsBadHugeReadPtr PROTO STDCALL :DWORD,:DWORD
			      C IsBadHugeWritePtr PROTO STDCALL :DWORD,:DWORD
			      C IsBadReadPtr PROTO STDCALL :DWORD,:DWORD
			      C 
			      C IsBadStringPtrA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = IsBadStringPtrA	      C   IsBadStringPtr equ <IsBadStringPtrA>
			      C ENDIF
			      C 
			      C IsBadStringPtrW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C IsBadWritePtr PROTO STDCALL :DWORD,:DWORD
			      C IsDBCSLeadByte PROTO STDCALL :DWORD
			      C IsDBCSLeadByteEx PROTO STDCALL :DWORD,:DWORD
			      C IsDebuggerPresent PROTO STDCALL
			      C IsProcessInJob PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IsProcessorFeaturePresent PROTO STDCALL :DWORD
			      C IsSystemResumeAutomatic PROTO STDCALL
			      C IsValidCodePage PROTO STDCALL :DWORD
			      C IsValidLanguageGroup PROTO STDCALL :DWORD,:DWORD
			      C IsValidLocale PROTO STDCALL :DWORD,:DWORD
			      C IsWow64Process PROTO STDCALL :DWORD,:DWORD
			      C 
			      C LCMapStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = LCMapStringA		      C   LCMapString equ <LCMapStringA>
			      C ENDIF
			      C 
			      C LCMapStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C LeaveCriticalSection PROTO STDCALL :DWORD
			      C 
			      C LoadLibraryA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = LoadLibraryA		      C   LoadLibrary equ <LoadLibraryA>
			      C ENDIF
			      C 
			      C LoadLibraryExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = LoadLibraryExA	      C   LoadLibraryEx equ <LoadLibraryExA>
			      C ENDIF
			      C 
			      C LoadLibraryExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C LoadLibraryW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C LoadModule PROTO STDCALL :DWORD,:DWORD
			      C LoadResource PROTO STDCALL :DWORD,:DWORD
			      C LocalAlloc PROTO STDCALL :DWORD,:DWORD
			      C LocalCompact PROTO STDCALL :DWORD
			      C LocalFileTimeToFileTime PROTO STDCALL :DWORD,:DWORD
			      C LocalFlags PROTO STDCALL :DWORD
			      C LocalFree PROTO STDCALL :DWORD
			      C LocalHandle PROTO STDCALL :DWORD
			      C LocalLock PROTO STDCALL :DWORD
			      C LocalReAlloc PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C LocalShrink PROTO STDCALL :DWORD,:DWORD
			      C LocalSize PROTO STDCALL :DWORD
			      C LocalUnlock PROTO STDCALL :DWORD
			      C LockFile PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C LockFileEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C LockResource PROTO STDCALL :DWORD
			      C MapUserPhysicalPages PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C MapUserPhysicalPagesScatter PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C MapViewOfFile PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C MapViewOfFileEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C Module32FirstW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C Module32NextW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C MoveFileA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = MoveFileA		      C   MoveFile equ <MoveFileA>
			      C ENDIF
			      C 
			      C MoveFileExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = MoveFileExA		      C   MoveFileEx equ <MoveFileExA>
			      C ENDIF
			      C 
			      C MoveFileExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C MoveFileW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C MoveFileWithProgressA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = MoveFileWithProgressA      C   MoveFileWithProgress equ <MoveFileWithProgressA>
			      C ENDIF
			      C 
			      C MoveFileWithProgressW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C MulDiv PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C MultiByteToWideChar PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C NumaVirtualQueryNode PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C OpenEventA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = OpenEventA		      C   OpenEvent equ <OpenEventA>
			      C ENDIF
			      C 
			      C OpenEventW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C OpenFile PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C OpenFileMappingA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = OpenFileMappingA	      C   OpenFileMapping equ <OpenFileMappingA>
			      C ENDIF
			      C 
			      C OpenFileMappingW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C OpenJobObjectA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = OpenJobObjectA	      C   OpenJobObject equ <OpenJobObjectA>
			      C ENDIF
			      C 
			      C OpenJobObjectW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C OpenMutexA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = OpenMutexA		      C   OpenMutex equ <OpenMutexA>
			      C ENDIF
			      C 
			      C OpenMutexW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C OpenProcess PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C OpenSemaphoreA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = OpenSemaphoreA	      C   OpenSemaphore equ <OpenSemaphoreA>
			      C ENDIF
			      C 
			      C OpenSemaphoreW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C OpenThread PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C OpenWaitableTimerA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = OpenWaitableTimerA	      C   OpenWaitableTimer equ <OpenWaitableTimerA>
			      C ENDIF
			      C 
			      C OpenWaitableTimerW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C OutputDebugStringA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = OutputDebugStringA	      C   OutputDebugString equ <OutputDebugStringA>
			      C ENDIF
			      C 
			      C OutputDebugStringW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C PeekConsoleInputA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = PeekConsoleInputA	      C   PeekConsoleInput equ <PeekConsoleInputA>
			      C ENDIF
			      C 
			      C PeekConsoleInputW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C PeekNamedPipe PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C PostQueuedCompletionStatus PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C PrepareTape PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C Process32FirstW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C Process32NextW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ProcessIdToSessionId PROTO STDCALL :DWORD,:DWORD
			      C PulseEvent PROTO STDCALL :DWORD
			      C PurgeComm PROTO STDCALL :DWORD,:DWORD
			      C 
			      C QueryActCtxW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C QueryDepthSList PROTO STDCALL :DWORD
			      C 
			      C QueryDosDeviceA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = QueryDosDeviceA	      C   QueryDosDevice equ <QueryDosDeviceA>
			      C ENDIF
			      C 
			      C QueryDosDeviceW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C QueryInformationJobObject PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C QueryMemoryResourceNotification PROTO STDCALL :DWORD,:DWORD
			      C QueryPerformanceCounter PROTO STDCALL :DWORD
			      C QueryPerformanceFrequency PROTO STDCALL :DWORD
			      C QueueUserAPC PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C QueueUserWorkItem PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C RaiseException PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C ReadConsoleA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ReadConsoleA		      C   ReadConsole equ <ReadConsoleA>
			      C ENDIF
			      C 
			      C ReadConsoleInputA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ReadConsoleInputA	      C   ReadConsoleInput equ <ReadConsoleInputA>
			      C ENDIF
			      C 
			      C ReadConsoleInputW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ReadConsoleOutputA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ReadConsoleOutputA	      C   ReadConsoleOutput equ <ReadConsoleOutputA>
			      C ENDIF
			      C 
			      C ReadConsoleOutputAttribute PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C ReadConsoleOutputCharacterA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ReadConsoleOutputCharact   C   ReadConsoleOutputCharacter equ <ReadConsoleOutputCharacterA>
   erA
			      C ENDIF
			      C 
			      C ReadConsoleOutputCharacterW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ReadConsoleOutputW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ReadConsoleW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ReadDirectoryChangesW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ReadFile PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C ReadFileEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C ReadFileScatter PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C ReadProcessMemory PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C RegisterWaitForSingleObject PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C RegisterWaitForSingleObjectEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C ReleaseActCtx PROTO STDCALL :DWORD
			      C ReleaseMutex PROTO STDCALL :DWORD
			      C ReleaseSemaphore PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C RemoveDirectoryA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = RemoveDirectoryA	      C   RemoveDirectory equ <RemoveDirectoryA>
			      C ENDIF
			      C 
			      C RemoveDirectoryW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C RemoveLocalAlternateComputerNameA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = RemoveLocalAlternateComp   C   RemoveLocalAlternateComputerName equ <RemoveLocalAlternateComputerNameA>
   uterNameA
			      C ENDIF
			      C 
			      C RemoveLocalAlternateComputerNameW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C RemoveVectoredExceptionHandler PROTO STDCALL :DWORD
			      C 
			      C ReplaceFileA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ReplaceFileA		      C   ReplaceFile equ <ReplaceFileA>
			      C ENDIF
			      C 
			      C ReplaceFileW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C RequestDeviceWakeup PROTO STDCALL :DWORD
			      C RequestWakeupLatency PROTO STDCALL :DWORD
			      C ResetEvent PROTO STDCALL :DWORD
			      C ResetWriteWatch PROTO STDCALL :DWORD,:DWORD
			      C RestoreLastError PROTO STDCALL :DWORD
			      C ResumeThread PROTO STDCALL :DWORD
			      C RtlCaptureContext PROTO STDCALL :DWORD
			      C RtlCaptureStackBackTrace PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C RtlFillMemory PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C RtlMoveMemory PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C RtlUnwind PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C RtlZeroMemory PROTO STDCALL :DWORD,:DWORD
			      C 
			      C ScrollConsoleScreenBufferA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ScrollConsoleScreenBuffe   C   ScrollConsoleScreenBuffer equ <ScrollConsoleScreenBufferA>
   rA
			      C ENDIF
			      C 
			      C ScrollConsoleScreenBufferW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SearchPathA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SearchPathA		      C   SearchPath equ <SearchPathA>
			      C ENDIF
			      C 
			      C SearchPathW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetCalendarInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetCalendarInfoA	      C   SetCalendarInfo equ <SetCalendarInfoA>
			      C ENDIF
			      C 
			      C SetCalendarInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetCommBreak PROTO STDCALL :DWORD
			      C SetCommConfig PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C SetCommMask PROTO STDCALL :DWORD,:DWORD
			      C SetCommState PROTO STDCALL :DWORD,:DWORD
			      C SetCommTimeouts PROTO STDCALL :DWORD,:DWORD
			      C 
			      C SetComputerNameA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = SetComputerNameA	      C   SetComputerName equ <SetComputerNameA>
			      C ENDIF
			      C 
			      C SetComputerNameExA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetComputerNameExA	      C   SetComputerNameEx equ <SetComputerNameExA>
			      C ENDIF
			      C 
			      C SetComputerNameExW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetComputerNameW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetConsoleActiveScreenBuffer PROTO STDCALL :DWORD
			      C SetConsoleCP PROTO STDCALL :DWORD
			      C SetConsoleCtrlHandler PROTO STDCALL :DWORD,:DWORD
			      C SetConsoleCursor PROTO STDCALL :DWORD,:DWORD
			      C SetConsoleCursorInfo PROTO STDCALL :DWORD,:DWORD
			      C SetConsoleCursorPosition PROTO STDCALL :DWORD,:DWORD
			      C SetConsoleMode PROTO STDCALL :DWORD,:DWORD
			      C SetConsoleOutputCP PROTO STDCALL :DWORD
			      C SetConsoleScreenBufferSize PROTO STDCALL :DWORD,:DWORD
			      C SetConsoleTextAttribute PROTO STDCALL :DWORD,:DWORD
			      C 
			      C SetConsoleTitleA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = SetConsoleTitleA	      C   SetConsoleTitle equ <SetConsoleTitleA>
			      C ENDIF
			      C 
			      C SetConsoleTitleW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetConsoleWindowInfo PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C SetCriticalSectionSpinCount PROTO STDCALL :DWORD,:DWORD
			      C 
			      C SetCurrentDirectoryA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = SetCurrentDirectoryA	      C   SetCurrentDirectory equ <SetCurrentDirectoryA>
			      C ENDIF
			      C 
			      C SetCurrentDirectoryW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetDefaultCommConfigA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetDefaultCommConfigA      C   SetDefaultCommConfig equ <SetDefaultCommConfigA>
			      C ENDIF
			      C 
			      C SetDefaultCommConfigW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetDllDirectoryA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = SetDllDirectoryA	      C   SetDllDirectory equ <SetDllDirectoryA>
			      C ENDIF
			      C 
			      C SetDllDirectoryW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetEndOfFile PROTO STDCALL :DWORD
			      C 
			      C SetEnvironmentVariableA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetEnvironmentVariableA    C   SetEnvironmentVariable equ <SetEnvironmentVariableA>
			      C ENDIF
			      C 
			      C SetEnvironmentVariableW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetErrorMode PROTO STDCALL :DWORD
			      C SetEvent PROTO STDCALL :DWORD
			      C SetFileApisToANSI PROTO STDCALL
			      C SetFileApisToOEM PROTO STDCALL
			      C 
			      C SetFileAttributesA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetFileAttributesA	      C   SetFileAttributes equ <SetFileAttributesA>
			      C ENDIF
			      C 
			      C SetFileAttributesW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetFilePointer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C SetFilePointerEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C SetFileShortNameA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetFileShortNameA	      C   SetFileShortName equ <SetFileShortNameA>
			      C ENDIF
			      C 
			      C SetFileShortNameW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetFileTime PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C SetFileValidData PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C SetFirmwareEnvironmentVariableA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetFirmwareEnvironmentVa   C   SetFirmwareEnvironmentVariable equ <SetFirmwareEnvironmentVariableA>
   riableA
			      C ENDIF
			      C 
			      C SetFirmwareEnvironmentVariableW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetHandleCount PROTO STDCALL :DWORD
			      C SetHandleInformation PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C SetInformationJobObject PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C SetLastError PROTO STDCALL :DWORD
			      C 
			      C SetLocalPrimaryComputerNameA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetLocalPrimaryComputerN   C   SetLocalPrimaryComputerName equ <SetLocalPrimaryComputerNameA>
   ameA
			      C ENDIF
			      C 
			      C SetLocalPrimaryComputerNameW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetLocalTime PROTO STDCALL :DWORD
			      C 
			      C SetLocaleInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetLocaleInfoA	      C   SetLocaleInfo equ <SetLocaleInfoA>
			      C ENDIF
			      C 
			      C SetLocaleInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetMailslotInfo PROTO STDCALL :DWORD,:DWORD
			      C SetMessageWaitingIndicator PROTO STDCALL :DWORD,:DWORD
			      C SetNamedPipeHandleState PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C SetPriorityClass PROTO STDCALL :DWORD,:DWORD
			      C SetProcessAffinityMask PROTO STDCALL :DWORD,:DWORD
			      C SetProcessPriorityBoost PROTO STDCALL :DWORD,:DWORD
			      C SetProcessShutdownParameters PROTO STDCALL :DWORD,:DWORD
			      C SetProcessWorkingSetSize PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C SetStdHandle PROTO STDCALL :DWORD,:DWORD
			      C SetSystemPowerState PROTO STDCALL :DWORD,:DWORD
			      C SetSystemTime PROTO STDCALL :DWORD
			      C SetSystemTimeAdjustment PROTO STDCALL :DWORD,:DWORD
			      C SetTapeParameters PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C SetTapePosition PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C SetThreadAffinityMask PROTO STDCALL :DWORD,:DWORD
			      C SetThreadContext PROTO STDCALL :DWORD,:DWORD
			      C SetThreadExecutionState PROTO STDCALL :DWORD
			      C SetThreadIdealProcessor PROTO STDCALL :DWORD,:DWORD
			      C SetThreadLocale PROTO STDCALL :DWORD
			      C SetThreadPriority PROTO STDCALL :DWORD,:DWORD
			      C SetThreadPriorityBoost PROTO STDCALL :DWORD,:DWORD
			      C SetTimeZoneInformation PROTO STDCALL :DWORD
			      C SetTimerQueueTimer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C SetUnhandledExceptionFilter PROTO STDCALL :DWORD
			      C SetUserGeoID PROTO STDCALL :DWORD
			      C 
			      C SetVolumeLabelA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetVolumeLabelA	      C   SetVolumeLabel equ <SetVolumeLabelA>
			      C ENDIF
			      C 
			      C SetVolumeLabelW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetVolumeMountPointA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetVolumeMountPointA	      C   SetVolumeMountPoint equ <SetVolumeMountPointA>
			      C ENDIF
			      C 
			      C SetVolumeMountPointW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetWaitableTimer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C SetupComm PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C SignalObjectAndWait PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C SizeofResource PROTO STDCALL :DWORD,:DWORD
			      C Sleep PROTO STDCALL :DWORD
			      C SleepEx PROTO STDCALL :DWORD,:DWORD
			      C SuspendThread PROTO STDCALL :DWORD
			      C SwitchToFiber PROTO STDCALL :DWORD
			      C SwitchToThread PROTO STDCALL
			      C SystemTimeToFileTime PROTO STDCALL :DWORD,:DWORD
			      C SystemTimeToTzSpecificLocalTime PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C TerminateJobObject PROTO STDCALL :DWORD,:DWORD
			      C TerminateProcess PROTO STDCALL :DWORD,:DWORD
			      C TerminateThread PROTO STDCALL :DWORD,:DWORD
			      C Thread32First PROTO STDCALL :DWORD,:DWORD
			      C Thread32Next PROTO STDCALL :DWORD,:DWORD
			      C TlsAlloc PROTO STDCALL
			      C TlsFree PROTO STDCALL :DWORD
			      C TlsGetValue PROTO STDCALL :DWORD
			      C TlsSetValue PROTO STDCALL :DWORD,:DWORD
			      C Toolhelp32ReadProcessMemory PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C TransactNamedPipe PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C TransmitCommChar PROTO STDCALL :DWORD,:DWORD
			      C TryEnterCriticalSection PROTO STDCALL :DWORD
			      C TzSpecificLocalTimeToSystemTime PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C UnhandledExceptionFilter PROTO STDCALL :DWORD
			      C UnlockFile PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C UnlockFileEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C UnmapViewOfFile PROTO STDCALL :DWORD
			      C UnregisterWait PROTO STDCALL :DWORD
			      C UnregisterWaitEx PROTO STDCALL :DWORD,:DWORD
			      C 
			      C UpdateResourceA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = UpdateResourceA	      C   UpdateResource equ <UpdateResourceA>
			      C ENDIF
			      C 
			      C UpdateResourceW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C VerLanguageNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = VerLanguageNameA	      C   VerLanguageName equ <VerLanguageNameA>
			      C ENDIF
			      C 
			      C VerLanguageNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C VerSetConditionMask PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C VerifyVersionInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = VerifyVersionInfoA	      C   VerifyVersionInfo equ <VerifyVersionInfoA>
			      C ENDIF
			      C 
			      C VerifyVersionInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C VirtualAlloc PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C VirtualAllocEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C VirtualFree PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C VirtualFreeEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C VirtualLock PROTO STDCALL :DWORD,:DWORD
			      C VirtualProtect PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C VirtualProtectEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C VirtualQuery PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C VirtualQueryEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C VirtualUnlock PROTO STDCALL :DWORD,:DWORD
			      C WTSGetActiveConsoleSessionId PROTO STDCALL
			      C WaitCommEvent PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C WaitForDebugEvent PROTO STDCALL :DWORD,:DWORD
			      C WaitForMultipleObjects PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C WaitForMultipleObjectsEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C WaitForSingleObject PROTO STDCALL :DWORD,:DWORD
			      C WaitForSingleObjectEx PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C WaitNamedPipeA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WaitNamedPipeA	      C   WaitNamedPipe equ <WaitNamedPipeA>
			      C ENDIF
			      C 
			      C WaitNamedPipeW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WideCharToMultiByte PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C WinExec PROTO STDCALL :DWORD,:DWORD
			      C 
			      C WriteConsoleA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WriteConsoleA	      C   WriteConsole equ <WriteConsoleA>
			      C ENDIF
			      C 
			      C WriteConsoleInputA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WriteConsoleInputA	      C   WriteConsoleInput equ <WriteConsoleInputA>
			      C ENDIF
			      C 
			      C WriteConsoleInputW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteConsoleOutputA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WriteConsoleOutputA	      C   WriteConsoleOutput equ <WriteConsoleOutputA>
			      C ENDIF
			      C 
			      C WriteConsoleOutputAttribute PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C WriteConsoleOutputCharacterA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WriteConsoleOutputCharac   C   WriteConsoleOutputCharacter equ <WriteConsoleOutputCharacterA>
   terA
			      C ENDIF
			      C 
			      C WriteConsoleOutputCharacterW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteConsoleOutputW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteConsoleW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteFile PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C WriteFileEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C WriteFileGather PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C WritePrivateProfileSectionA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WritePrivateProfileSecti   C   WritePrivateProfileSection equ <WritePrivateProfileSectionA>
   onA
			      C ENDIF
			      C 
			      C WritePrivateProfileSectionW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WritePrivateProfileStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WritePrivateProfileStrin   C   WritePrivateProfileString equ <WritePrivateProfileStringA>
   gA
			      C ENDIF
			      C 
			      C WritePrivateProfileStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WritePrivateProfileStructA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WritePrivateProfileStruc   C   WritePrivateProfileStruct equ <WritePrivateProfileStructA>
   tA
			      C ENDIF
			      C 
			      C WritePrivateProfileStructW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteProcessMemory PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C WriteProfileSectionA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WriteProfileSectionA	      C   WriteProfileSection equ <WriteProfileSectionA>
			      C ENDIF
			      C 
			      C WriteProfileSectionW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteProfileStringA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WriteProfileStringA	      C   WriteProfileString equ <WriteProfileStringA>
			      C ENDIF
			      C 
			      C WriteProfileStringW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteTapemark PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C ZombifyActCtx PROTO STDCALL :DWORD
			      C _hread PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C _hwrite PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C _lclose PROTO STDCALL :DWORD
			      C _lcreat PROTO STDCALL :DWORD,:DWORD
			      C _llseek PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C _lopen PROTO STDCALL :DWORD,:DWORD
			      C _lread PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C _lwrite PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C lstrcatA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = lstrcatA		      C   lstrcat equ <lstrcatA>
			      C ENDIF
			      C 
			      C lstrcatW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C lstrcmpA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = lstrcmpA		      C   lstrcmp equ <lstrcmpA>
			      C ENDIF
			      C 
			      C lstrcmpW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C lstrcmpiA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = lstrcmpiA		      C   lstrcmpi equ <lstrcmpiA>
			      C ENDIF
			      C 
			      C lstrcmpiW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C lstrcpyA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = lstrcpyA		      C   lstrcpy equ <lstrcpyA>
			      C ENDIF
			      C 
			      C lstrcpyW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C lstrcpynA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = lstrcpynA		      C   lstrcpyn equ <lstrcpynA>
			      C ENDIF
			      C 
			      C lstrcpynW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C lstrlenA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = lstrlenA		      C   lstrlen equ <lstrlenA>
			      C ENDIF
			      C 
			      C lstrlenW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ELSE
			      C ENDIF
			      C 
				includelib msvcrt.lib
				includelib kernel32.lib

				$main proto
 00000000			.const
 00000000 25 64 0D 0A 00	$output_format_int byte "%d", 0DH, 0AH, 0
 00000005 25 64 00		$input_format_int byte "%d", 0
 00000000			.code
 00000000			$print proc,
				    val: dword
 00000000  55		   *	    push   ebp
 00000001  8B EC	   *	    mov    ebp, esp
				    invoke crt_printf, addr $output_format_int, val
 00000003  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 00000006  68 00000000 R   *	    push   OFFSET $output_format_int
 0000000B  FF 15 00000000 E *	    call   _imp__printf
 00000011  83 C4 08	   *	    add    esp, 000000008h
				    ret
 00000014  C9		   *	    leave  
 00000015  C2 0004	   *	    ret    00004h
 00000018			$print endp
 00000018			$input proc,
				    val : ptr dword
 00000018  55		   *	    push   ebp
 00000019  8B EC	   *	    mov    ebp, esp
				    invoke crt_scanf, addr $input_format_int,  val
 0000001B  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 0000001E  68 00000005 R   *	    push   OFFSET $input_format_int
 00000023  FF 15 00000000 E *	    call   _imp__scanf
 00000029  83 C4 08	   *	    add    esp, 000000008h
				    ret
 0000002C  C9		   *	    leave  
 0000002D  C2 0004	   *	    ret    00004h
 00000030			$input endp
 00000030			$$getch proc
				    invoke crt__getch
 00000030  FF 15 00000000 E *	    call   _imp___getch
 00000036  C3			    ret
 00000037			$$getch endp

 00000000			.data
 00000000 00000000		    quanju$0 sdword ?

 00000037			.code
 00000037			label0:
 00000037			$fun1 PROC
 00000037			label1:
 00000037			label2:
 00000037			label3:
 00000037			label4:
				    INVOKE $print, quanju$0
 00000037  FF 35 00000000 R *	    push   dword  ptr quanju$0
 0000003D  E8 FFFFFFBE	   *	    call   $print
 00000042			label5:
 00000042			fun1_end:
 00000042  C3			    ret
 00000043			$fun1 ENDP
 00000043			label6:
 00000043			$main PROC
				    LOCAL temp$1:sdword
				    LOCAL temp$2:sdword
				    LOCAL temp$3:sdword
				    LOCAL temp$4:sdword
 00000043  55		   *	    push   ebp
 00000044  8B EC	   *	    mov    ebp, esp
 00000046  83 C4 F0	   *	    add    esp, 0FFFFFFF0h
 00000049			label7:
 00000049			label8:
 00000049  B8 00000005		    mov eax, 5
 0000004E  89 45 FC		    mov temp$1, eax
 00000051			label9:
 00000051  8B 45 FC		    mov eax, temp$1
 00000054  A3 00000000 R	    mov quanju$0, eax
 00000059			label10:
 00000059			label11:
 00000059			label12:
				    INVOKE $fun1
 00000059  E8 FFFFFFD9	   *	    call   $fun1
 0000005E			label13:
 0000005E			label14:
 0000005E  B8 00000006		    mov eax, 6
 00000063  89 45 F4		    mov temp$3, eax
 00000066			label15:
 00000066  8B 45 F4		    mov eax, temp$3
 00000069  A3 00000000 R	    mov quanju$0, eax
 0000006E			label16:
 0000006E			label17:
 0000006E			label18:
				    INVOKE $fun1
 0000006E  E8 FFFFFFC4	   *	    call   $fun1
 00000073			label19:
 00000073			main_end:
				    ret
 00000073  C9		   *	    leave  
 00000074  C3		   *	    ret    00000h
 00000075			$main ENDP
Assembly.asm(74) : warning A6004:procedure argument or local not referenced : temp$2
Assembly.asm(74) : warning A6004:procedure argument or local not referenced : temp$4
				END $main
Microsoft (R) Macro Assembler Version 14.10.25017.0	    01/02/19 13:45:00
Assembly.asm						     Symbols 2 - 1




Types:

                N a m e                  Size     Attr

c_msvcrt . . . . . . . . . . . .	 00000004     CODE


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000008 DWord	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000004 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000075 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

$$getch  . . . . . . . . . . . .	P Near	 00000030 _TEXT	Length= 00000007 Public STDCALL
$fun1  . . . . . . . . . . . . .	P Near	 00000037 _TEXT	Length= 0000000C Public STDCALL
  label1 . . . . . . . . . . . .	L Near	 00000037 _TEXT	
  label2 . . . . . . . . . . . .	L Near	 00000037 _TEXT	
  label3 . . . . . . . . . . . .	L Near	 00000037 _TEXT	
  label4 . . . . . . . . . . . .	L Near	 00000037 _TEXT	
  label5 . . . . . . . . . . . .	L Near	 00000042 _TEXT	
  fun1_end . . . . . . . . . . .	L Near	 00000042 _TEXT	
$input . . . . . . . . . . . . .	P Near	 00000018 _TEXT	Length= 00000018 Public STDCALL
  val  . . . . . . . . . . . . .	DWord	 bp + 00000008
$main  . . . . . . . . . . . . .	P Near	 00000043 _TEXT	Length= 00000032 Public STDCALL
  temp$1 . . . . . . . . . . . .	DWord	 bp - 00000004
  temp$2 . . . . . . . . . . . .	DWord	 bp - 00000008
  temp$3 . . . . . . . . . . . .	DWord	 bp - 0000000C
  temp$4 . . . . . . . . . . . .	DWord	 bp - 00000010
  label7 . . . . . . . . . . . .	L Near	 00000049 _TEXT	
  label8 . . . . . . . . . . . .	L Near	 00000049 _TEXT	
  label9 . . . . . . . . . . . .	L Near	 00000051 _TEXT	
  label10  . . . . . . . . . . .	L Near	 00000059 _TEXT	
  label11  . . . . . . . . . . .	L Near	 00000059 _TEXT	
  label12  . . . . . . . . . . .	L Near	 00000059 _TEXT	
  label13  . . . . . . . . . . .	L Near	 0000005E _TEXT	
  label14  . . . . . . . . . . .	L Near	 0000005E _TEXT	
  label15  . . . . . . . . . . .	L Near	 00000066 _TEXT	
  label16  . . . . . . . . . . .	L Near	 0000006E _TEXT	
  label17  . . . . . . . . . . .	L Near	 0000006E _TEXT	
  label18  . . . . . . . . . . .	L Near	 0000006E _TEXT	
  label19  . . . . . . . . . . .	L Near	 00000073 _TEXT	
  main_end . . . . . . . . . . .	L Near	 00000073 _TEXT	
$print . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000018 Public STDCALL
  val  . . . . . . . . . . . . .	DWord	 bp + 00000008
ActivateActCtx . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
AddAtomA . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
AddAtomW . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
AddLocalAlternateComputerNameA .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
AddLocalAlternateComputerNameW .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
AddRefActCtx . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
AddVectoredExceptionHandler  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
AllocConsole . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
AllocateUserPhysicalPages  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
AreFileApisANSI  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
AssignProcessToJobObject . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
AttachConsole  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BackupRead . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BackupSeek . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BackupWrite  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Beep . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BeginUpdateResourceA . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BeginUpdateResourceW . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BindIoCompletionCallback . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BuildCommDCBAndTimeoutsA . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BuildCommDCBAndTimeoutsW . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BuildCommDCBA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BuildCommDCBW  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CallNamedPipeA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CallNamedPipeW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CancelDeviceWakeupRequest  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CancelIo . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CancelTimerQueueTimer  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CancelWaitableTimer  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ChangeTimerQueueTimer  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CheckNameLegalDOS8Dot3A  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CheckNameLegalDOS8Dot3W  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CheckRemoteDebuggerPresent . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClearCommBreak . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClearCommError . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CommConfigDialogA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CommConfigDialogW  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CompareFileTime  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CompareStringA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CompareStringW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ConnectNamedPipe . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ContinueDebugEvent . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ConvertDefaultLocale . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ConvertFiberToThread . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ConvertThreadToFiber . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CopyFileA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CopyFileExA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CopyFileExW  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CopyFileW  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateActCtxA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateActCtxW  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateConsoleScreenBuffer  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateDirectoryA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateDirectoryExA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateDirectoryExW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateDirectoryW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateEventA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateEventW . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFiberEx  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFiber  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileMappingA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileMappingW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileW  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateHardLinkA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateHardLinkW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateIoCompletionPort . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateJobObjectA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateJobObjectW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateJobSet . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateMailslotA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateMailslotW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateMemoryResourceNotification .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateMutexA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateMutexW . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateNamedPipeA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateNamedPipeW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreatePipe . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateProcessA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateProcessInternalWSecure . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateProcessW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateRemoteThread . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateSemaphoreA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateSemaphoreW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateTapePartition  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateThread . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateTimerQueueTimer  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateTimerQueue . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateToolhelp32Snapshot . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateWaitableTimerA . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateWaitableTimerW . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeactivateActCtx . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DebugActiveProcessStop . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DebugActiveProcess . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DebugBreakProcess  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DebugBreak . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DebugSetProcessKillOnExit  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DecodePointer  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DecodeSystemPointer  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DefineDosDeviceA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DefineDosDeviceW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeleteAtom . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeleteCriticalSection  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeleteFiber  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeleteFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeleteFileW  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeleteTimerQueueEx . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeleteTimerQueueTimer  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeleteTimerQueue . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeleteVolumeMountPointA  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeleteVolumeMountPointW  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeviceIoControl  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DisableThreadLibraryCalls  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DisconnectNamedPipe  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DnsHostnameToComputerNameA . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DnsHostnameToComputerNameW . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DosDateTimeToFileTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DuplicateHandle  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EncodePointer  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EncodeSystemPointer  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EndUpdateResourceA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EndUpdateResourceW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnterCriticalSection . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumCalendarInfoA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumCalendarInfoExA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumCalendarInfoExW  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumCalendarInfoW  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumDateFormatsA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumDateFormatsExA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumDateFormatsExW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumDateFormatsW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumLanguageGroupLocalesA  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumLanguageGroupLocalesW  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumResourceLanguagesA . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumResourceLanguagesW . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumResourceNamesA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumResourceNamesW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumResourceTypesA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumResourceTypesW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumSystemCodePagesA . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumSystemCodePagesW . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumSystemGeoID  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumSystemLanguageGroupsA  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumSystemLanguageGroupsW  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumSystemLocalesA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumSystemLocalesW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumTimeFormatsA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumTimeFormatsW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumUILanguagesA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumUILanguagesW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumerateLocalComputerNamesA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnumerateLocalComputerNamesW . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EraseTape  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EscapeCommFunction . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitThread . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExpandEnvironmentStringsA  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExpandEnvironmentStringsW  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FatalAppExitA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FatalAppExitW  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FatalExit  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToLocalFileTime  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FillConsoleOutputAttribute . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FillConsoleOutputCharacterA  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FillConsoleOutputCharacterW  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindActCtxSectionGuid  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindActCtxSectionStringA . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindActCtxSectionStringW . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindAtomA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindAtomW  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindCloseChangeNotification  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindClose  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindFirstChangeNotificationA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindFirstChangeNotificationW . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindFirstFileA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindFirstFileExA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindFirstFileExW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindFirstFileW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindFirstVolumeA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindFirstVolumeMountPointA . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindFirstVolumeMountPointW . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindFirstVolumeW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindNextChangeNotification . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindNextFileA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindNextFileW  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindNextVolumeA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindNextVolumeMountPointA  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindNextVolumeMountPointW  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindNextVolumeW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindResourceA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindResourceExA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindResourceExW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindResourceW  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindVolumeClose  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FindVolumeMountPointClose  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushFileBuffers . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushInstructionCache  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushViewOfFile  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FoldStringA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FoldStringW  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FreeConsole  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FreeEnvironmentStringsA  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FreeEnvironmentStringsW  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FreeLibraryAndExitThread . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FreeLibrary  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FreeResource . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FreeUserPhysicalPages  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GenerateConsoleCtrlEvent . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetACP . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetAtomNameA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetAtomNameW . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetBinaryTypeA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetBinaryTypeW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCPInfoExA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCPInfoExW . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCPInfo  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCalendarInfoA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCalendarInfoW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommConfig  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommMask  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommModemStatus . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommProperties  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommState . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommTimeouts  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCompressedFileSizeA . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCompressedFileSizeW . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetComputerNameA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetComputerNameExA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetComputerNameExW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetComputerNameW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleDisplayMode  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleFontSize . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleOutputCP . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleProcessList  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleSelectionInfo  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleTitleW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleWindow . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCurrencyFormatA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCurrencyFormatW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCurrentActCtx . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCurrentConsoleFont  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCurrentDirectoryA . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCurrentDirectoryW . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCurrentProcessId  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCurrentProcess  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCurrentThreadId . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCurrentThread . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateFormatA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateFormatW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDefaultCommConfigA  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDefaultCommConfigW  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDevicePowerState  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDiskFreeSpaceA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDiskFreeSpaceExA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDiskFreeSpaceExW  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDiskFreeSpaceW  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDllDirectoryA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDllDirectoryW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDriveTypeA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDriveTypeW  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetEnvironmentStringsA . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetEnvironmentStringsW . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetEnvironmentVariableA  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetEnvironmentVariableW  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetExitCodeProcess . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetExitCodeThread  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileAttributesA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileAttributesExA . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileAttributesExW . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileAttributesW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileInformationByHandle . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileSizeEx  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileSize  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileType  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFirmwareEnvironmentVariableA 	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFirmwareEnvironmentVariableW 	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFullPathNameA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFullPathNameW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetGeoInfoA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetGeoInfoW  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetHandleInformation . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLargestConsoleWindowSize  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocaleInfoA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocaleInfoW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLogicalDriveStringsA  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLogicalDriveStringsW  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLogicalDrives . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLongPathNameA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLongPathNameW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMailslotInfo  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleFileNameA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleFileNameW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleHandleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleHandleExA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleHandleExW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleHandleW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNamedPipeHandleStateA . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNamedPipeHandleStateW . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNamedPipeInfo . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNativeSystemInfo  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumaAvailableMemoryNode . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumaAvailableMemory . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumaHighestNodeNumber . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumaNodeProcessorMask . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumaProcessorMap  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumaProcessorNode . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberFormatA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberFormatW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleMouseButtons .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetOEMCP . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetOverlappedResult  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetPriorityClass . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetPrivateProfileIntA  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetPrivateProfileIntW  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetPrivateProfileSectionA  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetPrivateProfileSectionNamesA .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetPrivateProfileSectionNamesW .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetPrivateProfileSectionW  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetPrivateProfileStringA . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetPrivateProfileStringW . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetPrivateProfileStructA . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetPrivateProfileStructW . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcAddress . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessAffinityMask . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHandleCount  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeaps  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessId . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessIoCounters . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessPriorityBoost  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessShutdownParameters . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessTimes  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessVersion  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessWorkingSetSize . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProfileIntA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProfileIntW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProfileSectionA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProfileSectionW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProfileStringA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProfileStringW  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetQueuedCompletionStatus  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetShortPathNameA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetShortPathNameW  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStartupInfoA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStartupInfoW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStringTypeA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStringTypeExA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStringTypeExW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStringTypeW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemDefaultLCID . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemDefaultLangID . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemDefaultUILanguage . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemDirectoryA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemDirectoryW  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemInfo  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemPowerStatus . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemRegistryQuota . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTimeAdjustment  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTimeAsFileTime  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTimes . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemWindowsDirectoryA . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemWindowsDirectoryW . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemWow64DirectoryA . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemWow64DirectoryW . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTapeParameters  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTapePosition  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTapeStatus  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTempFileNameA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTempFileNameW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTempPathA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTempPathW . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetThreadContext . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetThreadIOPendingFlag . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetThreadLocale  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetThreadPriorityBoost . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetThreadPriority  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetThreadSelectorEntry . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetThreadTimes . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTimeFormatA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTimeFormatW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTimeZoneInformation . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetUserDefaultLCID . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetUserDefaultLangID . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetUserDefaultUILanguage . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetUserGeoID . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetVersionExA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetVersionExW  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetVersion . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetVolumeInformationA  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetVolumeInformationW  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetVolumeNameForVolumeMountPointA 	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetVolumeNameForVolumeMountPointW 	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetVolumePathNameA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetVolumePathNameW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetVolumePathNamesForVolumeNameA .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetVolumePathNamesForVolumeNameW .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetWindowsDirectoryA . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetWindowsDirectoryW . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetWriteWatch  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalAddAtomA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalAddAtomW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalAlloc  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalCompact  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalDeleteAtom . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalFindAtomA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalFindAtomW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalFix  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalFlags  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalFree . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalGetAtomNameA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalGetAtomNameW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalLock . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalMemoryStatusEx . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalMemoryStatus . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalReAlloc  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalSize . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalUnWire . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalUnfix  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalUnlock . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalWire . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Heap32First  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Heap32ListFirst  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Heap32ListNext . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Heap32Next . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCompact  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapLock . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapQueryInformation . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapReAlloc  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSetInformation . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapUnlock . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapValidate . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapWalk . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InitAtomTable  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InitializeCriticalSectionAndSpinCount 	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InitializeCriticalSection  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InitializeSListHead  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InterlockedCompareExchange . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InterlockedDecrement . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InterlockedExchangeAdd . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InterlockedExchange  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InterlockedFlushSList  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InterlockedIncrement . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InterlockedPopEntrySList . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InterlockedPushEntrySList  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsBadCodePtr . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsBadHugeReadPtr . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsBadHugeWritePtr  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsBadReadPtr . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsBadStringPtrA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsBadStringPtrW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsBadWritePtr  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDBCSLeadByteEx . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDBCSLeadByte . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDebuggerPresent  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsProcessInJob . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsProcessorFeaturePresent  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsSystemResumeAutomatic  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsValidCodePage  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsValidLanguageGroup . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsValidLocale  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsWow64Process . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LCMapStringA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LCMapStringW . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LeaveCriticalSection . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LoadLibraryA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LoadLibraryExA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LoadLibraryExW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LoadLibraryW . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LoadModule . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LoadResource . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalAlloc . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalCompact . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFileTimeToFileTime  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFlags . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalLock  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalReAlloc . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalShrink  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalSize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalUnlock  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LockFileEx . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LockFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LockResource . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MapUserPhysicalPagesScatter  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MapUserPhysicalPages . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MapViewOfFileEx  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MapViewOfFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Module32FirstW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Module32NextW  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MoveFileA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MoveFileExA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MoveFileExW  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MoveFileWithProgressA  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MoveFileWithProgressW  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MoveFileW  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MulDiv . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MultiByteToWideChar  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
NumaVirtualQueryNode . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenEventA . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenEventW . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenFileMappingA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenFileMappingW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenJobObjectA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenJobObjectW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenMutexA . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenMutexW . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenSemaphoreA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenSemaphoreW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenThread . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenWaitableTimerA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenWaitableTimerW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OutputDebugStringA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OutputDebugStringW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputW  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekNamedPipe  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PostQueuedCompletionStatus . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PrepareTape  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Process32FirstW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Process32NextW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ProcessIdToSessionId . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PulseEvent . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PurgeComm  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
QueryActCtxW . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
QueryDepthSList  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
QueryDosDeviceA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
QueryDosDeviceW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
QueryInformationJobObject  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
QueryMemoryResourceNotification 	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
QueryPerformanceCounter  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
QueryPerformanceFrequency  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
QueueUserAPC . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
QueueUserWorkItem  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RaiseException . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputW  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleOutputAttribute . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleOutputA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleOutputCharacterA  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleOutputCharacterW  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleOutputW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleW . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDirectoryChangesW  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFileEx . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFileScatter  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadProcessMemory  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RegisterWaitForSingleObjectEx  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RegisterWaitForSingleObject  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReleaseActCtx  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReleaseMutex . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReleaseSemaphore . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RemoveDirectoryA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RemoveDirectoryW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RemoveLocalAlternateComputerNameA 	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RemoveLocalAlternateComputerNameW 	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RemoveVectoredExceptionHandler .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReplaceFileA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReplaceFileW . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RequestDeviceWakeup  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RequestWakeupLatency . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ResetEvent . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ResetWriteWatch  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RestoreLastError . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ResumeThread . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RtlCaptureContext  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RtlCaptureStackBackTrace . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RtlFillMemory  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RtlMoveMemory  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RtlUnwind  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RtlZeroMemory  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ScrollConsoleScreenBufferA . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ScrollConsoleScreenBufferW . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SearchPathA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SearchPathW  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetCalendarInfoA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetCalendarInfoW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetCommBreak . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetCommConfig  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetCommMask  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetCommState . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetCommTimeouts  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetComputerNameA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetComputerNameExA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetComputerNameExW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetComputerNameW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleActiveScreenBuffer . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCtrlHandler  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursor . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleOutputCP . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetCriticalSectionSpinCount  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetCurrentDirectoryA . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetCurrentDirectoryW . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetDefaultCommConfigA  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetDefaultCommConfigW  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetDllDirectoryA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetDllDirectoryW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetEndOfFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetEnvironmentVariableA  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetEnvironmentVariableW  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetErrorMode . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetEvent . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFileApisToANSI  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFileApisToOEM . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFileAttributesA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFileAttributesW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointerEx . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFileShortNameA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFileShortNameW  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFileValidData . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFirmwareEnvironmentVariableA 	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFirmwareEnvironmentVariableW 	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetHandleCount . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetHandleInformation . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetInformationJobObject  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalPrimaryComputerNameA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalPrimaryComputerNameW . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocaleInfoA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocaleInfoW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetMailslotInfo  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetMessageWaitingIndicator . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetNamedPipeHandleState  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetPriorityClass . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetProcessAffinityMask . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetProcessPriorityBoost  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetProcessShutdownParameters . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetProcessWorkingSetSize . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetSystemPowerState  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetSystemTimeAdjustment  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTapeParameters  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTapePosition  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetThreadAffinityMask  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetThreadContext . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetThreadExecutionState  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetThreadIdealProcessor  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetThreadLocale  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetThreadPriorityBoost . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetThreadPriority  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTimeZoneInformation . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTimerQueueTimer . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetUnhandledExceptionFilter  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetUserGeoID . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetVolumeLabelA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetVolumeLabelW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetVolumeMountPointA . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetVolumeMountPointW . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetWaitableTimer . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetupComm  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SignalObjectAndWait  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SizeofResource . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SleepEx  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SuspendThread  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SwitchToFiber  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SwitchToThread . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToTzSpecificLocalTime 	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
TerminateJobObject . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
TerminateProcess . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
TerminateThread  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Thread32First  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Thread32Next . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
TlsAlloc . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
TlsFree  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
TlsGetValue  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
TlsSetValue  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Toolhelp32ReadProcessMemory  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
TransactNamedPipe  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
TransmitCommChar . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
TryEnterCriticalSection  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
TzSpecificLocalTimeToSystemTime 	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UnhandledExceptionFilter . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UnlockFileEx . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UnlockFile . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UnmapViewOfFile  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UnregisterWaitEx . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UnregisterWait . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UpdateResourceA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UpdateResourceW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VerLanguageNameA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VerLanguageNameW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VerSetConditionMask  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VerifyVersionInfoA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VerifyVersionInfoW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualAllocEx . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualAlloc . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualFreeEx  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualFree  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualLock  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualProtectEx . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualProtect . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualQueryEx . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualQuery . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualUnlock  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WTSGetActiveConsoleSessionId . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitCommEvent  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitForDebugEvent  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitForMultipleObjectsEx . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitForMultipleObjects . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitForSingleObjectEx  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitForSingleObject  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitNamedPipeA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitNamedPipeW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WideCharToMultiByte  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WinExec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleInputA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleInputW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterW . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputW  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleW  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFileEx  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFileGather  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WritePrivateProfileSectionA  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WritePrivateProfileSectionW  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WritePrivateProfileStringA . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WritePrivateProfileStringW . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WritePrivateProfileStructA . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WritePrivateProfileStructW . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteProcessMemory . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteProfileSectionA . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteProfileSectionW . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteProfileStringA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteProfileStringW  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteTapemark  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ZombifyActCtx  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_hread . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_hwrite  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_lclose  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_lcreat  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_llseek  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_lopen . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_lread . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_lwrite  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
lstrcatA . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
lstrcatW . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
lstrcmpA . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
lstrcmpW . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
lstrcmpiA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
lstrcmpiW  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
lstrcpyA . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
lstrcpyW . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
lstrcpynA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
lstrcpynW  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
lstrlenA . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
lstrlenW . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

$input_format_int  . . . . . . .	Byte	 00000005 CONST	
$output_format_int . . . . . . .	Byte	 00000000 CONST	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
AddAtom  . . . . . . . . . . . .	Text   	 AddAtomA
AddLocalAlternateComputerName  .	Text   	 AddLocalAlternateComputerNameA
BeginUpdateResource  . . . . . .	Text   	 BeginUpdateResourceA
BuildCommDCBAndTimeouts  . . . .	Text   	 BuildCommDCBAndTimeoutsA
BuildCommDCB . . . . . . . . . .	Text   	 BuildCommDCBA
CallNamedPipe  . . . . . . . . .	Text   	 CallNamedPipeA
CheckNameLegalDOS8Dot3 . . . . .	Text   	 CheckNameLegalDOS8Dot3A
CommConfigDialog . . . . . . . .	Text   	 CommConfigDialogA
CompareString  . . . . . . . . .	Text   	 CompareStringA
CopyFileEx . . . . . . . . . . .	Text   	 CopyFileExA
CopyFile . . . . . . . . . . . .	Text   	 CopyFileA
CreateActCtx . . . . . . . . . .	Text   	 CreateActCtxA
CreateDirectoryEx  . . . . . . .	Text   	 CreateDirectoryExA
CreateDirectory  . . . . . . . .	Text   	 CreateDirectoryA
CreateEvent  . . . . . . . . . .	Text   	 CreateEventA
CreateFileMapping  . . . . . . .	Text   	 CreateFileMappingA
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
CreateHardLink . . . . . . . . .	Text   	 CreateHardLinkA
CreateJobObject  . . . . . . . .	Text   	 CreateJobObjectA
CreateMailslot . . . . . . . . .	Text   	 CreateMailslotA
CreateMutex  . . . . . . . . . .	Text   	 CreateMutexA
CreateNamedPipe  . . . . . . . .	Text   	 CreateNamedPipeA
CreateProcess  . . . . . . . . .	Text   	 CreateProcessA
CreateSemaphore  . . . . . . . .	Text   	 CreateSemaphoreA
CreateWaitableTimer  . . . . . .	Text   	 CreateWaitableTimerA
DefineDosDevice  . . . . . . . .	Text   	 DefineDosDeviceA
DeleteFile . . . . . . . . . . .	Text   	 DeleteFileA
DeleteVolumeMountPoint . . . . .	Text   	 DeleteVolumeMountPointA
DnsHostnameToComputerName  . . .	Text   	 DnsHostnameToComputerNameA
EndUpdateResource  . . . . . . .	Text   	 EndUpdateResourceA
EnumCalendarInfoEx . . . . . . .	Text   	 EnumCalendarInfoExA
EnumCalendarInfo . . . . . . . .	Text   	 EnumCalendarInfoA
EnumDateFormatsEx  . . . . . . .	Text   	 EnumDateFormatsExA
EnumDateFormats  . . . . . . . .	Text   	 EnumDateFormatsA
EnumLanguageGroupLocales . . . .	Text   	 EnumLanguageGroupLocalesA
EnumResourceLanguages  . . . . .	Text   	 EnumResourceLanguagesA
EnumResourceNames  . . . . . . .	Text   	 EnumResourceNamesA
EnumResourceTypes  . . . . . . .	Text   	 EnumResourceTypesA
EnumSystemCodePages  . . . . . .	Text   	 EnumSystemCodePagesA
EnumSystemLanguageGroups . . . .	Text   	 EnumSystemLanguageGroupsA
EnumSystemLocales  . . . . . . .	Text   	 EnumSystemLocalesA
EnumTimeFormats  . . . . . . . .	Text   	 EnumTimeFormatsA
EnumUILanguages  . . . . . . . .	Text   	 EnumUILanguagesA
EnumerateLocalComputerNames  . .	Text   	 EnumerateLocalComputerNamesA
ExpandEnvironmentStrings . . . .	Text   	 ExpandEnvironmentStringsA
FatalAppExit . . . . . . . . . .	Text   	 FatalAppExitA
FillConsoleOutputCharacter . . .	Text   	 FillConsoleOutputCharacterA
FindActCtxSectionString  . . . .	Text   	 FindActCtxSectionStringA
FindAtom . . . . . . . . . . . .	Text   	 FindAtomA
FindFirstChangeNotification  . .	Text   	 FindFirstChangeNotificationA
FindFirstFileEx  . . . . . . . .	Text   	 FindFirstFileExA
FindFirstFile  . . . . . . . . .	Text   	 FindFirstFileA
FindFirstVolumeMountPoint  . . .	Text   	 FindFirstVolumeMountPointA
FindFirstVolume  . . . . . . . .	Text   	 FindFirstVolumeA
FindNextFile . . . . . . . . . .	Text   	 FindNextFileA
FindNextVolumeMountPoint . . . .	Text   	 FindNextVolumeMountPointA
FindNextVolume . . . . . . . . .	Text   	 FindNextVolumeA
FindResourceEx . . . . . . . . .	Text   	 FindResourceExA
FindResource . . . . . . . . . .	Text   	 FindResourceA
FoldString . . . . . . . . . . .	Text   	 FoldStringA
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
FreeEnvironmentStrings . . . . .	Text   	 FreeEnvironmentStringsA
GetAtomName  . . . . . . . . . .	Text   	 GetAtomNameA
GetBinaryType  . . . . . . . . .	Text   	 GetBinaryTypeA
GetCPInfoEx  . . . . . . . . . .	Text   	 GetCPInfoExA
GetCalendarInfo  . . . . . . . .	Text   	 GetCalendarInfoA
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
GetCompressedFileSize  . . . . .	Text   	 GetCompressedFileSizeA
GetComputerNameEx  . . . . . . .	Text   	 GetComputerNameExA
GetComputerName  . . . . . . . .	Text   	 GetComputerNameA
GetConsoleTitle  . . . . . . . .	Text   	 GetConsoleTitleA
GetCurrencyFormat  . . . . . . .	Text   	 GetCurrencyFormatA
GetCurrentDirectory  . . . . . .	Text   	 GetCurrentDirectoryA
GetDateFormat  . . . . . . . . .	Text   	 GetDateFormatA
GetDefaultCommConfig . . . . . .	Text   	 GetDefaultCommConfigA
GetDiskFreeSpaceEx . . . . . . .	Text   	 GetDiskFreeSpaceExA
GetDiskFreeSpace . . . . . . . .	Text   	 GetDiskFreeSpaceA
GetDllDirectory  . . . . . . . .	Text   	 GetDllDirectoryA
GetDriveType . . . . . . . . . .	Text   	 GetDriveTypeA
GetEnvironmentStrings  . . . . .	Text   	 GetEnvironmentStringsA
GetEnvironmentVariable . . . . .	Text   	 GetEnvironmentVariableA
GetFileAttributesEx  . . . . . .	Text   	 GetFileAttributesExA
GetFileAttributes  . . . . . . .	Text   	 GetFileAttributesA
GetFirmwareEnvironmentVariable .	Text   	 GetFirmwareEnvironmentVariableA
GetFullPathName  . . . . . . . .	Text   	 GetFullPathNameA
GetGeoInfo . . . . . . . . . . .	Text   	 GetGeoInfoA
GetLocaleInfo  . . . . . . . . .	Text   	 GetLocaleInfoA
GetLogicalDriveStrings . . . . .	Text   	 GetLogicalDriveStringsA
GetLongPathName  . . . . . . . .	Text   	 GetLongPathNameA
GetModuleFileName  . . . . . . .	Text   	 GetModuleFileNameA
GetModuleHandleEx  . . . . . . .	Text   	 GetModuleHandleExA
GetModuleHandle  . . . . . . . .	Text   	 GetModuleHandleA
GetNamedPipeHandleState  . . . .	Text   	 GetNamedPipeHandleStateA
GetNumberFormat  . . . . . . . .	Text   	 GetNumberFormatA
GetPrivateProfileInt . . . . . .	Text   	 GetPrivateProfileIntA
GetPrivateProfileSectionNames  .	Text   	 GetPrivateProfileSectionNamesA
GetPrivateProfileSection . . . .	Text   	 GetPrivateProfileSectionA
GetPrivateProfileString  . . . .	Text   	 GetPrivateProfileStringA
GetPrivateProfileStruct  . . . .	Text   	 GetPrivateProfileStructA
GetProfileInt  . . . . . . . . .	Text   	 GetProfileIntA
GetProfileSection  . . . . . . .	Text   	 GetProfileSectionA
GetProfileString . . . . . . . .	Text   	 GetProfileStringA
GetShortPathName . . . . . . . .	Text   	 GetShortPathNameA
GetStartupInfo . . . . . . . . .	Text   	 GetStartupInfoA
GetStringTypeEx  . . . . . . . .	Text   	 GetStringTypeExA
GetStringType  . . . . . . . . .	Text   	 GetStringTypeA
GetSystemDirectory . . . . . . .	Text   	 GetSystemDirectoryA
GetSystemWindowsDirectory  . . .	Text   	 GetSystemWindowsDirectoryA
GetSystemWow64Directory  . . . .	Text   	 GetSystemWow64DirectoryA
GetTempFileName  . . . . . . . .	Text   	 GetTempFileNameA
GetTempPath  . . . . . . . . . .	Text   	 GetTempPathA
GetTimeFormat  . . . . . . . . .	Text   	 GetTimeFormatA
GetVersionEx . . . . . . . . . .	Text   	 GetVersionExA
GetVolumeInformation . . . . . .	Text   	 GetVolumeInformationA
GetVolumeNameForVolumeMountPoint .	Text   	 GetVolumeNameForVolumeMountPointA
GetVolumePathNamesForVolumeName 	Text   	 GetVolumePathNamesForVolumeNameA
GetVolumePathName  . . . . . . .	Text   	 GetVolumePathNameA
GetWindowsDirectory  . . . . . .	Text   	 GetWindowsDirectoryA
GlobalAddAtom  . . . . . . . . .	Text   	 GlobalAddAtomA
GlobalFindAtom . . . . . . . . .	Text   	 GlobalFindAtomA
GlobalGetAtomName  . . . . . . .	Text   	 GlobalGetAtomNameA
IsBadStringPtr . . . . . . . . .	Text   	 IsBadStringPtrA
KERNEL32_INC . . . . . . . . . .	Text   	 1
LCMapString  . . . . . . . . . .	Text   	 LCMapStringA
LoadLibraryEx  . . . . . . . . .	Text   	 LoadLibraryExA
LoadLibrary  . . . . . . . . . .	Text   	 LoadLibraryA
MoveFileEx . . . . . . . . . . .	Text   	 MoveFileExA
MoveFileWithProgress . . . . . .	Text   	 MoveFileWithProgressA
MoveFile . . . . . . . . . . . .	Text   	 MoveFileA
OpenEvent  . . . . . . . . . . .	Text   	 OpenEventA
OpenFileMapping  . . . . . . . .	Text   	 OpenFileMappingA
OpenJobObject  . . . . . . . . .	Text   	 OpenJobObjectA
OpenMutex  . . . . . . . . . . .	Text   	 OpenMutexA
OpenSemaphore  . . . . . . . . .	Text   	 OpenSemaphoreA
OpenWaitableTimer  . . . . . . .	Text   	 OpenWaitableTimerA
OutputDebugString  . . . . . . .	Text   	 OutputDebugStringA
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
QueryDosDevice . . . . . . . . .	Text   	 QueryDosDeviceA
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsoleOutputCharacter . . .	Text   	 ReadConsoleOutputCharacterA
ReadConsoleOutput  . . . . . . .	Text   	 ReadConsoleOutputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
RemoveDirectory  . . . . . . . .	Text   	 RemoveDirectoryA
RemoveLocalAlternateComputerName .	Text   	 RemoveLocalAlternateComputerNameA
ReplaceFile  . . . . . . . . . .	Text   	 ReplaceFileA
ScrollConsoleScreenBuffer  . . .	Text   	 ScrollConsoleScreenBufferA
SearchPath . . . . . . . . . . .	Text   	 SearchPathA
SetCalendarInfo  . . . . . . . .	Text   	 SetCalendarInfoA
SetComputerNameEx  . . . . . . .	Text   	 SetComputerNameExA
SetComputerName  . . . . . . . .	Text   	 SetComputerNameA
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
SetCurrentDirectory  . . . . . .	Text   	 SetCurrentDirectoryA
SetDefaultCommConfig . . . . . .	Text   	 SetDefaultCommConfigA
SetDllDirectory  . . . . . . . .	Text   	 SetDllDirectoryA
SetEnvironmentVariable . . . . .	Text   	 SetEnvironmentVariableA
SetFileAttributes  . . . . . . .	Text   	 SetFileAttributesA
SetFileShortName . . . . . . . .	Text   	 SetFileShortNameA
SetFirmwareEnvironmentVariable .	Text   	 SetFirmwareEnvironmentVariableA
SetLocalPrimaryComputerName  . .	Text   	 SetLocalPrimaryComputerNameA
SetLocaleInfo  . . . . . . . . .	Text   	 SetLocaleInfoA
SetVolumeLabel . . . . . . . . .	Text   	 SetVolumeLabelA
SetVolumeMountPoint  . . . . . .	Text   	 SetVolumeMountPointA
UpdateResource . . . . . . . . .	Text   	 UpdateResourceA
VerLanguageName  . . . . . . . .	Text   	 VerLanguageNameA
VerifyVersionInfo  . . . . . . .	Text   	 VerifyVersionInfoA
WaitNamedPipe  . . . . . . . . .	Text   	 WaitNamedPipeA
WriteConsoleInput  . . . . . . .	Text   	 WriteConsoleInputA
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsoleOutput . . . . . . .	Text   	 WriteConsoleOutputA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
WritePrivateProfileSection . . .	Text   	 WritePrivateProfileSectionA
WritePrivateProfileString  . . .	Text   	 WritePrivateProfileStringA
WritePrivateProfileStruct  . . .	Text   	 WritePrivateProfileStructA
WriteProfileSection  . . . . . .	Text   	 WriteProfileSectionA
WriteProfileString . . . . . . .	Text   	 WriteProfileStringA
_imp__$I10_OUTPUT  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIacos  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIasin  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIatan2 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIatan  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIcosh  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIcos . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIexp . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIfmod  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIlog10 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIlog . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIpow . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIsinh  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIsin . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CIsqrt  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CItanh  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CItan . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___CxxThrowException . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___EH_prolog . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___Getdays . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___Getmonths . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___Gettnames . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___HUGE  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___Strftime  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___XcptFilter  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____CxxFrameHandler  . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____CxxLongjmpUnwind . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____RTCastToVoid . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____RTDynamicCast  . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____RTtypeid . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____STRINGTOLD . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____argc . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____argv . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____badioinfo  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____crtCompareStringA  . . .	DWord	 00000000 FLAT	External STDCALL
_imp____crtGetLocaleInfoW  . . .	DWord	 00000000 FLAT	External STDCALL
_imp____crtLCMapStringA  . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____dllonexit  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____doserrno . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____fpecode  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____getmainargs  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____initenv  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____isascii  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____iscsymf  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____iscsym . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____lc_codepage  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____lc_collate_cp  . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____lc_handle  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____lconv_init . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____mb_cur_max . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p___argc . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p___argv . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p___initenv  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p___mb_cur_max . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p___wargv  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p___winitenv . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__acmdln  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__amblksiz  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__commode . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__daylight  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__dstbias . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__environ . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__fileinfo  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__fmode . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__iob . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__mbcasemap . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__mbctype . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__osver . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__pctype  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__pgmptr  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__pwctype . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__timezone  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__tzname  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__wcmdln  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__wenviron  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__winmajor  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__winminor  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__winver  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____p__wpgmptr . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____pioinfo  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____pxcptinfoptrs  . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____set_app_type . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____setlc_active . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____setusermatherr . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____threadhandle . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____threadid . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____toascii  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____unDNameEx  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____unDName  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____unguarded_readlc_active 	DWord	 00000000 FLAT	External STDCALL
_imp____wargv  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____wgetmainargs . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp____winitenv . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___abnormal_termination  . .	DWord	 00000000 FLAT	External STDCALL
_imp___access  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___acmdln  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fdiv_m16i . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fdiv_m32i . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fdiv_m32  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fdiv_m64  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fdiv_r  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fdivr_m16i  . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fdivr_m32i  . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fdivr_m32 . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fdivr_m64 . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fpatan  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fprem1  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fprem . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adj_fptan . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___adjust_fdiv . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___aexit_rtn . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___amsg_exit . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___assert  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___atodbl  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___atoi64  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___atoldbl . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___beep  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___beginthreadex . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___beginthread . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___c_exit  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___cabs  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___callnewh  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___cexit . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___cgets . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___chdir . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___chdrive . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___chgsign . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___chkesp  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___chmod . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___chsize  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___clearfp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___close . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___commit  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___commode . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___control87 . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___controlfp . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___copysign  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___cprintf . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___cputs . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___creat . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___cscanf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ctime64 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ctype . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___cwait . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___daylight  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___dstbias . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___dup2  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___dup . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ecvt  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___endthreadex . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___endthread . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___environ . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___eof . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___errno . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___except_handler2 . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___except_handler3 . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___execle  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___execlpe . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___execlp  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___execl . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___execve  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___execvpe . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___execvp  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___execv . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___exit  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___expand  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fcloseall . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fcvt  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fdopen  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fgetchar  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fgetwchar . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___filbuf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fileinfo  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___filelengthi64 . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___filelength  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fileno  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___findclose . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___findfirst64 . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___findfirsti64  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___findfirst . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___findnext64  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___findnexti64 . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___findnext  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___finite  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___flsbuf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___flushall  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fmode . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fpclass . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fpieee_flt  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fpreset . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fputchar  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fputwchar . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fsopen  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fstat64 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fstati64  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fstat . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ftime64 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ftime . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ftol  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___fullpath  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___futime64  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___futime  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___gcvt  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___get_heap_handle . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___get_osfhandle . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___get_sbh_threshold . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getche  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getch . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getcwd  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getdcwd . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getdiskfree . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getdllprocaddr  . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getdrives . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getdrive  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getmaxstdio . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getmbcp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getpid  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getsystime  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getws . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___getw  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___global_unwind2  . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___gmtime64  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___heapadd . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___heapchk . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___heapmin . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___heapset . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___heapused  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___heapwalk  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___hypot . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___i64toa  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___i64tow  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___initterm  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___inpd  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___inpw  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___inp . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___iob . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___isatty  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___isctype . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbbalnum  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbbalpha  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbbgraph  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbbkalnum . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbbkana . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbbkprint . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbbkpunct . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbblead . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbbprint  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbbpunct  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbbtrail  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbcalnum  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbcalpha  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbcdigit  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbcgraph  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbchira . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbckata . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbcl0 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbcl1 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbcl2 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbclegal  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbclower  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbcprint  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbcpunct  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbcspace  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbcsymbol . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbcupper  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbslead . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ismbstrail  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___isnan . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___itoa  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___itow  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___j0  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___j1  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___jn  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___kbhit . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___lfind . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___loaddll . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___local_unwind2 . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___localtime64 . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___locking . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___lock  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___logb  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___longjmpex . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___lrotl . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___lrotr . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___lsearch . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___lseeki64  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___lseek . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ltoa  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ltow  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___makepath  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbbtombc  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbbtype . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbcasemap . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbccpy  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbcjistojms . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbcjmstojis . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbclen  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbctohira . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbctokata . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbctolower  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbctombb  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbctoupper  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbctype . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsbtype  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbscat  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbschr  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbscmp  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbscoll . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbscpy  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbscspn . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsdec  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsdup  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsicmp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsicoll  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsinc  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbslen  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbslwr  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnbcat  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnbcmp  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnbcnt  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnbcoll . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnbcpy  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnbicmp . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnbicoll  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnbset  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsncat . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnccnt  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsncmp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsncoll  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsncpy . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnextc  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnicmp  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnicoll . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsninc . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsnset . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbspbrk . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsrchr . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsrev  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsset  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsspnp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsspn  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsstr  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbstok  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbstrlen  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mbsupr  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___memccpy . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___memicmp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mkdir . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mktemp  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___mktime64  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___msize . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___nextafter . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___onexit  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___open_osfhandle  . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___open  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___osplatform  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___osver . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___outpd . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___outpw . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___outp  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___pclose  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___pctype  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___pgmptr  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___pipe  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___popen . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___purecall  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___putch . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___putenv  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___putws . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___putw  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___pwctype . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___read  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___rmdir . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___rmtmp . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___rotl  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___rotr  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___safe_fdivr  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___safe_fdiv . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___safe_fprem1 . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___safe_fprem  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___scalb . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___searchenv . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___seh_longjmp_unwind  . . .	DWord	 00000000 FLAT	External STDCALL
_imp___set_error_mode  . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___set_sbh_threshold . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___seterrormode  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___setjmp3 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___setjmp  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___setmaxstdio . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___setmbcp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___setmode . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___setsystime  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___sleep . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___snprintf  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___snwprintf . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___sopen . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___spawnle . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___spawnlpe  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___spawnlp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___spawnl  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___spawnve . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___spawnvpe  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___spawnvp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___spawnv  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___splitpath . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___stat64  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___stati64 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___statusfp  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___stat  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strcmpi . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strdate . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strdup  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strerror  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___stricmp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___stricoll  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strlwr  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strncoll  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strnicmp  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strnicoll . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strnset . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strrev  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strset  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strtime . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___strupr  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___swab  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___sys_errlist . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___sys_nerr  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___telli64 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___tell  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___tempnam . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___time64  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___timezone  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___tolower . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___toupper . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___tzname  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___tzset . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ui64toa . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ui64tow . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ultoa . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ultow . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___umask . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___ungetch . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___unlink  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___unloaddll . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___unlock  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___utime64 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___utime . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___vsnprintf . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___vsnwprintf  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___waccess . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wasctime  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wchdir  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wchmod  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcmdln  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcreat  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcsdup  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcsicmp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcsicoll  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcslwr  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcsncoll  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcsnicmp  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcsnicoll . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcsnset . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcsrev  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcsset  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wcsupr  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wctime64  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wctime  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wenviron  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wexecle . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wexeclpe  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wexeclp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wexecl  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wexecve . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wexecvpe  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wexecvp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wexecv  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wfdopen . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wfindfirst64  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wfindfirsti64 . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wfindfirst  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wfindnext64 . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wfindnexti64  . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wfindnext . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wfopen  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wfreopen  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wfsopen . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wfullpath . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wgetcwd . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wgetdcwd  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wgetenv . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___winmajor  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___winminor  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___winver  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wmakepath . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wmkdir  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wmktemp . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wopen . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wperror . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wpgmptr . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wpopen  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wputenv . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wremove . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wrename . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___write . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wrmdir  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wsearchenv  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wsetlocale  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wsopen  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wspawnle  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wspawnlpe . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wspawnlp  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wspawnl . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wspawnve  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wspawnvpe . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wspawnvp  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wspawnv . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wsplitpath  . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wstat64 . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wstati64  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wstat . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wstrdate  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wstrtime  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wsystem . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wtempnam  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wtmpnam . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wtoi64  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wtoi  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wtol  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wunlink . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wutime64  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___wutime  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___y0  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___y1  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp___yn  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__abort  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__abs  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__acos . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__asctime  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__asin . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__atan2  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__atan . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__atexit . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__atof . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__atoi . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__atol . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__bsearch  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__calloc . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__ceil . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__clearerr . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__clock  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__cosh . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__cos  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__ctime  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__difftime . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__div  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__exit . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__exp  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fabs . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fclose . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__feof . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__ferror . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fflush . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fgetc  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fgetpos  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fgets  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fgetwc . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fgetws . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__floor  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fmod . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fopen  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fprintf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fputc  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fputs  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fputwc . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fputws . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fread  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__free . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__freopen  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__frexp  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fscanf . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fseek  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fsetpos  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__ftell  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fwprintf . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fwrite . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__fwscanf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__getchar  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__getc . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__getenv . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__gets . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__getwchar . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__getwc  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__gmtime . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__is_wctype  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__isalnum  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__isalpha  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iscntrl  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__isdigit  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__isgraph  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__isleadbyte . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__islower  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__isprint  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__ispunct  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__isspace  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__isupper  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswalnum . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswalpha . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswascii . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswcntrl . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswctype . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswdigit . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswgraph . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswlower . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswprint . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswpunct . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswspace . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswupper . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__iswxdigit  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__isxdigit . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__labs . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__ldexp  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__ldiv . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__localeconv . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__localtime  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__log10  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__log  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__longjmp  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__malloc . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__mblen  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__mbstowcs . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__mbtowc . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__memchr . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__memcmp . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__memcpy . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__memmove  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__memset . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__mktime . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__modf . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__perror . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__pow  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__printf . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__putchar  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__putc . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__puts . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__putwchar . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__putwc  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__qsort  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__raise  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__rand . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__realloc  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__remove . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__rename . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__rewind . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__scanf  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__setbuf . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__setlocale  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__setvbuf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__signal . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__sinh . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__sin  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__sprintf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__sqrt . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__srand  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__sscanf . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strcat . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strchr . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strcmp . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strcoll  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strcpy . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strcspn  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strerror . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strftime . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strlen . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strncat  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strncmp  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strncpy  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strpbrk  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strrchr  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strspn . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strstr . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strtod . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strtok . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strtol . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strtoul  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__strxfrm  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__swprintf . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__swscanf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__system . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__tanh . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__tan  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__time . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__tmpfile  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__tmpnam . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__tolower  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__toupper  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__towlower . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__towupper . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__ungetc . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__ungetwc  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__vfprintf . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__vfwprintf  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__vprintf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__vsprintf . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__vswprintf  . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__vwprintf . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcscat . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcschr . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcscmp . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcscoll  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcscpy . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcscspn  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcsftime . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcslen . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcsncat  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcsncmp  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcsncpy  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcspbrk  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcsrchr  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcsspn . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcsstr . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcstod . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcstok . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcstol . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcstombs . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcstoul  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wcsxfrm  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wctomb . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wprintf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__wscanf . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
crt_$I10_OUTPUT  . . . . . . . .	Text   	 _imp__$I10_OUTPUT
crt__CIacos  . . . . . . . . . .	Text   	 _imp___CIacos
crt__CIasin  . . . . . . . . . .	Text   	 _imp___CIasin
crt__CIatan2 . . . . . . . . . .	Text   	 _imp___CIatan2
crt__CIatan  . . . . . . . . . .	Text   	 _imp___CIatan
crt__CIcosh  . . . . . . . . . .	Text   	 _imp___CIcosh
crt__CIcos . . . . . . . . . . .	Text   	 _imp___CIcos
crt__CIexp . . . . . . . . . . .	Text   	 _imp___CIexp
crt__CIfmod  . . . . . . . . . .	Text   	 _imp___CIfmod
crt__CIlog10 . . . . . . . . . .	Text   	 _imp___CIlog10
crt__CIlog . . . . . . . . . . .	Text   	 _imp___CIlog
crt__CIpow . . . . . . . . . . .	Text   	 _imp___CIpow
crt__CIsinh  . . . . . . . . . .	Text   	 _imp___CIsinh
crt__CIsin . . . . . . . . . . .	Text   	 _imp___CIsin
crt__CIsqrt  . . . . . . . . . .	Text   	 _imp___CIsqrt
crt__CItanh  . . . . . . . . . .	Text   	 _imp___CItanh
crt__CItan . . . . . . . . . . .	Text   	 _imp___CItan
crt__CxxThrowException . . . . .	Text   	 _imp___CxxThrowException
crt__EH_prolog . . . . . . . . .	Text   	 _imp___EH_prolog
crt__Getdays . . . . . . . . . .	Text   	 _imp___Getdays
crt__Getmonths . . . . . . . . .	Text   	 _imp___Getmonths
crt__Gettnames . . . . . . . . .	Text   	 _imp___Gettnames
crt__HUGE  . . . . . . . . . . .	Text   	 _imp___HUGE
crt__Strftime  . . . . . . . . .	Text   	 _imp___Strftime
crt__XcptFilter  . . . . . . . .	Text   	 _imp___XcptFilter
crt___CxxFrameHandler  . . . . .	Text   	 _imp____CxxFrameHandler
crt___CxxLongjmpUnwind . . . . .	Text   	 _imp____CxxLongjmpUnwind
crt___RTCastToVoid . . . . . . .	Text   	 _imp____RTCastToVoid
crt___RTDynamicCast  . . . . . .	Text   	 _imp____RTDynamicCast
crt___RTtypeid . . . . . . . . .	Text   	 _imp____RTtypeid
crt___STRINGTOLD . . . . . . . .	Text   	 _imp____STRINGTOLD
crt___argc . . . . . . . . . . .	Text   	 _imp____argc
crt___argv . . . . . . . . . . .	Text   	 _imp____argv
crt___badioinfo  . . . . . . . .	Text   	 _imp____badioinfo
crt___crtCompareStringA  . . . .	Text   	 _imp____crtCompareStringA
crt___crtGetLocaleInfoW  . . . .	Text   	 _imp____crtGetLocaleInfoW
crt___crtLCMapStringA  . . . . .	Text   	 _imp____crtLCMapStringA
crt___dllonexit  . . . . . . . .	Text   	 _imp____dllonexit
crt___doserrno . . . . . . . . .	Text   	 _imp____doserrno
crt___fpecode  . . . . . . . . .	Text   	 _imp____fpecode
crt___getmainargs  . . . . . . .	Text   	 _imp____getmainargs
crt___initenv  . . . . . . . . .	Text   	 _imp____initenv
crt___isascii  . . . . . . . . .	Text   	 _imp____isascii
crt___iscsymf  . . . . . . . . .	Text   	 _imp____iscsymf
crt___iscsym . . . . . . . . . .	Text   	 _imp____iscsym
crt___lc_codepage  . . . . . . .	Text   	 _imp____lc_codepage
crt___lc_collate_cp  . . . . . .	Text   	 _imp____lc_collate_cp
crt___lc_handle  . . . . . . . .	Text   	 _imp____lc_handle
crt___lconv_init . . . . . . . .	Text   	 _imp____lconv_init
crt___mb_cur_max . . . . . . . .	Text   	 _imp____mb_cur_max
crt___p___argc . . . . . . . . .	Text   	 _imp____p___argc
crt___p___argv . . . . . . . . .	Text   	 _imp____p___argv
crt___p___initenv  . . . . . . .	Text   	 _imp____p___initenv
crt___p___mb_cur_max . . . . . .	Text   	 _imp____p___mb_cur_max
crt___p___wargv  . . . . . . . .	Text   	 _imp____p___wargv
crt___p___winitenv . . . . . . .	Text   	 _imp____p___winitenv
crt___p__acmdln  . . . . . . . .	Text   	 _imp____p__acmdln
crt___p__amblksiz  . . . . . . .	Text   	 _imp____p__amblksiz
crt___p__commode . . . . . . . .	Text   	 _imp____p__commode
crt___p__daylight  . . . . . . .	Text   	 _imp____p__daylight
crt___p__dstbias . . . . . . . .	Text   	 _imp____p__dstbias
crt___p__environ . . . . . . . .	Text   	 _imp____p__environ
crt___p__fileinfo  . . . . . . .	Text   	 _imp____p__fileinfo
crt___p__fmode . . . . . . . . .	Text   	 _imp____p__fmode
crt___p__iob . . . . . . . . . .	Text   	 _imp____p__iob
crt___p__mbcasemap . . . . . . .	Text   	 _imp____p__mbcasemap
crt___p__mbctype . . . . . . . .	Text   	 _imp____p__mbctype
crt___p__osver . . . . . . . . .	Text   	 _imp____p__osver
crt___p__pctype  . . . . . . . .	Text   	 _imp____p__pctype
crt___p__pgmptr  . . . . . . . .	Text   	 _imp____p__pgmptr
crt___p__pwctype . . . . . . . .	Text   	 _imp____p__pwctype
crt___p__timezone  . . . . . . .	Text   	 _imp____p__timezone
crt___p__tzname  . . . . . . . .	Text   	 _imp____p__tzname
crt___p__wcmdln  . . . . . . . .	Text   	 _imp____p__wcmdln
crt___p__wenviron  . . . . . . .	Text   	 _imp____p__wenviron
crt___p__winmajor  . . . . . . .	Text   	 _imp____p__winmajor
crt___p__winminor  . . . . . . .	Text   	 _imp____p__winminor
crt___p__winver  . . . . . . . .	Text   	 _imp____p__winver
crt___p__wpgmptr . . . . . . . .	Text   	 _imp____p__wpgmptr
crt___pioinfo  . . . . . . . . .	Text   	 _imp____pioinfo
crt___pxcptinfoptrs  . . . . . .	Text   	 _imp____pxcptinfoptrs
crt___set_app_type . . . . . . .	Text   	 _imp____set_app_type
crt___setlc_active . . . . . . .	Text   	 _imp____setlc_active
crt___setusermatherr . . . . . .	Text   	 _imp____setusermatherr
crt___threadhandle . . . . . . .	Text   	 _imp____threadhandle
crt___threadid . . . . . . . . .	Text   	 _imp____threadid
crt___toascii  . . . . . . . . .	Text   	 _imp____toascii
crt___unDNameEx  . . . . . . . .	Text   	 _imp____unDNameEx
crt___unDName  . . . . . . . . .	Text   	 _imp____unDName
crt___unguarded_readlc_active  .	Text   	 _imp____unguarded_readlc_active
crt___wargv  . . . . . . . . . .	Text   	 _imp____wargv
crt___wgetmainargs . . . . . . .	Text   	 _imp____wgetmainargs
crt___winitenv . . . . . . . . .	Text   	 _imp____winitenv
crt__abnormal_termination  . . .	Text   	 _imp___abnormal_termination
crt__access  . . . . . . . . . .	Text   	 _imp___access
crt__acmdln  . . . . . . . . . .	Text   	 _imp___acmdln
crt__adj_fdiv_m16i . . . . . . .	Text   	 _imp___adj_fdiv_m16i
crt__adj_fdiv_m32i . . . . . . .	Text   	 _imp___adj_fdiv_m32i
crt__adj_fdiv_m32  . . . . . . .	Text   	 _imp___adj_fdiv_m32
crt__adj_fdiv_m64  . . . . . . .	Text   	 _imp___adj_fdiv_m64
crt__adj_fdiv_r  . . . . . . . .	Text   	 _imp___adj_fdiv_r
crt__adj_fdivr_m16i  . . . . . .	Text   	 _imp___adj_fdivr_m16i
crt__adj_fdivr_m32i  . . . . . .	Text   	 _imp___adj_fdivr_m32i
crt__adj_fdivr_m32 . . . . . . .	Text   	 _imp___adj_fdivr_m32
crt__adj_fdivr_m64 . . . . . . .	Text   	 _imp___adj_fdivr_m64
crt__adj_fpatan  . . . . . . . .	Text   	 _imp___adj_fpatan
crt__adj_fprem1  . . . . . . . .	Text   	 _imp___adj_fprem1
crt__adj_fprem . . . . . . . . .	Text   	 _imp___adj_fprem
crt__adj_fptan . . . . . . . . .	Text   	 _imp___adj_fptan
crt__adjust_fdiv . . . . . . . .	Text   	 _imp___adjust_fdiv
crt__aexit_rtn . . . . . . . . .	Text   	 _imp___aexit_rtn
crt__amsg_exit . . . . . . . . .	Text   	 _imp___amsg_exit
crt__assert  . . . . . . . . . .	Text   	 _imp___assert
crt__atodbl  . . . . . . . . . .	Text   	 _imp___atodbl
crt__atoi64  . . . . . . . . . .	Text   	 _imp___atoi64
crt__atoldbl . . . . . . . . . .	Text   	 _imp___atoldbl
crt__beep  . . . . . . . . . . .	Text   	 _imp___beep
crt__beginthreadex . . . . . . .	Text   	 _imp___beginthreadex
crt__beginthread . . . . . . . .	Text   	 _imp___beginthread
crt__c_exit  . . . . . . . . . .	Text   	 _imp___c_exit
crt__cabs  . . . . . . . . . . .	Text   	 _imp___cabs
crt__callnewh  . . . . . . . . .	Text   	 _imp___callnewh
crt__cexit . . . . . . . . . . .	Text   	 _imp___cexit
crt__cgets . . . . . . . . . . .	Text   	 _imp___cgets
crt__chdir . . . . . . . . . . .	Text   	 _imp___chdir
crt__chdrive . . . . . . . . . .	Text   	 _imp___chdrive
crt__chgsign . . . . . . . . . .	Text   	 _imp___chgsign
crt__chkesp  . . . . . . . . . .	Text   	 _imp___chkesp
crt__chmod . . . . . . . . . . .	Text   	 _imp___chmod
crt__chsize  . . . . . . . . . .	Text   	 _imp___chsize
crt__clearfp . . . . . . . . . .	Text   	 _imp___clearfp
crt__close . . . . . . . . . . .	Text   	 _imp___close
crt__commit  . . . . . . . . . .	Text   	 _imp___commit
crt__commode . . . . . . . . . .	Text   	 _imp___commode
crt__control87 . . . . . . . . .	Text   	 _imp___control87
crt__controlfp . . . . . . . . .	Text   	 _imp___controlfp
crt__copysign  . . . . . . . . .	Text   	 _imp___copysign
crt__cprintf . . . . . . . . . .	Text   	 _imp___cprintf
crt__cputs . . . . . . . . . . .	Text   	 _imp___cputs
crt__creat . . . . . . . . . . .	Text   	 _imp___creat
crt__cscanf  . . . . . . . . . .	Text   	 _imp___cscanf
crt__ctime64 . . . . . . . . . .	Text   	 _imp___ctime64
crt__ctype . . . . . . . . . . .	Text   	 _imp___ctype
crt__cwait . . . . . . . . . . .	Text   	 _imp___cwait
crt__daylight  . . . . . . . . .	Text   	 _imp___daylight
crt__dstbias . . . . . . . . . .	Text   	 _imp___dstbias
crt__dup2  . . . . . . . . . . .	Text   	 _imp___dup2
crt__dup . . . . . . . . . . . .	Text   	 _imp___dup
crt__ecvt  . . . . . . . . . . .	Text   	 _imp___ecvt
crt__endthreadex . . . . . . . .	Text   	 _imp___endthreadex
crt__endthread . . . . . . . . .	Text   	 _imp___endthread
crt__environ . . . . . . . . . .	Text   	 _imp___environ
crt__eof . . . . . . . . . . . .	Text   	 _imp___eof
crt__errno . . . . . . . . . . .	Text   	 _imp___errno
crt__except_handler2 . . . . . .	Text   	 _imp___except_handler2
crt__except_handler3 . . . . . .	Text   	 _imp___except_handler3
crt__execle  . . . . . . . . . .	Text   	 _imp___execle
crt__execlpe . . . . . . . . . .	Text   	 _imp___execlpe
crt__execlp  . . . . . . . . . .	Text   	 _imp___execlp
crt__execl . . . . . . . . . . .	Text   	 _imp___execl
crt__execve  . . . . . . . . . .	Text   	 _imp___execve
crt__execvpe . . . . . . . . . .	Text   	 _imp___execvpe
crt__execvp  . . . . . . . . . .	Text   	 _imp___execvp
crt__execv . . . . . . . . . . .	Text   	 _imp___execv
crt__exit  . . . . . . . . . . .	Text   	 _imp___exit
crt__expand  . . . . . . . . . .	Text   	 _imp___expand
crt__fcloseall . . . . . . . . .	Text   	 _imp___fcloseall
crt__fcvt  . . . . . . . . . . .	Text   	 _imp___fcvt
crt__fdopen  . . . . . . . . . .	Text   	 _imp___fdopen
crt__fgetchar  . . . . . . . . .	Text   	 _imp___fgetchar
crt__fgetwchar . . . . . . . . .	Text   	 _imp___fgetwchar
crt__filbuf  . . . . . . . . . .	Text   	 _imp___filbuf
crt__fileinfo  . . . . . . . . .	Text   	 _imp___fileinfo
crt__filelengthi64 . . . . . . .	Text   	 _imp___filelengthi64
crt__filelength  . . . . . . . .	Text   	 _imp___filelength
crt__fileno  . . . . . . . . . .	Text   	 _imp___fileno
crt__findclose . . . . . . . . .	Text   	 _imp___findclose
crt__findfirst64 . . . . . . . .	Text   	 _imp___findfirst64
crt__findfirsti64  . . . . . . .	Text   	 _imp___findfirsti64
crt__findfirst . . . . . . . . .	Text   	 _imp___findfirst
crt__findnext64  . . . . . . . .	Text   	 _imp___findnext64
crt__findnexti64 . . . . . . . .	Text   	 _imp___findnexti64
crt__findnext  . . . . . . . . .	Text   	 _imp___findnext
crt__finite  . . . . . . . . . .	Text   	 _imp___finite
crt__flsbuf  . . . . . . . . . .	Text   	 _imp___flsbuf
crt__flushall  . . . . . . . . .	Text   	 _imp___flushall
crt__fmode . . . . . . . . . . .	Text   	 _imp___fmode
crt__fpclass . . . . . . . . . .	Text   	 _imp___fpclass
crt__fpieee_flt  . . . . . . . .	Text   	 _imp___fpieee_flt
crt__fpreset . . . . . . . . . .	Text   	 _imp___fpreset
crt__fputchar  . . . . . . . . .	Text   	 _imp___fputchar
crt__fputwchar . . . . . . . . .	Text   	 _imp___fputwchar
crt__fsopen  . . . . . . . . . .	Text   	 _imp___fsopen
crt__fstat64 . . . . . . . . . .	Text   	 _imp___fstat64
crt__fstati64  . . . . . . . . .	Text   	 _imp___fstati64
crt__fstat . . . . . . . . . . .	Text   	 _imp___fstat
crt__ftime64 . . . . . . . . . .	Text   	 _imp___ftime64
crt__ftime . . . . . . . . . . .	Text   	 _imp___ftime
crt__ftol  . . . . . . . . . . .	Text   	 _imp___ftol
crt__fullpath  . . . . . . . . .	Text   	 _imp___fullpath
crt__futime64  . . . . . . . . .	Text   	 _imp___futime64
crt__futime  . . . . . . . . . .	Text   	 _imp___futime
crt__gcvt  . . . . . . . . . . .	Text   	 _imp___gcvt
crt__get_heap_handle . . . . . .	Text   	 _imp___get_heap_handle
crt__get_osfhandle . . . . . . .	Text   	 _imp___get_osfhandle
crt__get_sbh_threshold . . . . .	Text   	 _imp___get_sbh_threshold
crt__getche  . . . . . . . . . .	Text   	 _imp___getche
crt__getch . . . . . . . . . . .	Text   	 _imp___getch
crt__getcwd  . . . . . . . . . .	Text   	 _imp___getcwd
crt__getdcwd . . . . . . . . . .	Text   	 _imp___getdcwd
crt__getdiskfree . . . . . . . .	Text   	 _imp___getdiskfree
crt__getdllprocaddr  . . . . . .	Text   	 _imp___getdllprocaddr
crt__getdrives . . . . . . . . .	Text   	 _imp___getdrives
crt__getdrive  . . . . . . . . .	Text   	 _imp___getdrive
crt__getmaxstdio . . . . . . . .	Text   	 _imp___getmaxstdio
crt__getmbcp . . . . . . . . . .	Text   	 _imp___getmbcp
crt__getpid  . . . . . . . . . .	Text   	 _imp___getpid
crt__getsystime  . . . . . . . .	Text   	 _imp___getsystime
crt__getws . . . . . . . . . . .	Text   	 _imp___getws
crt__getw  . . . . . . . . . . .	Text   	 _imp___getw
crt__global_unwind2  . . . . . .	Text   	 _imp___global_unwind2
crt__gmtime64  . . . . . . . . .	Text   	 _imp___gmtime64
crt__heapadd . . . . . . . . . .	Text   	 _imp___heapadd
crt__heapchk . . . . . . . . . .	Text   	 _imp___heapchk
crt__heapmin . . . . . . . . . .	Text   	 _imp___heapmin
crt__heapset . . . . . . . . . .	Text   	 _imp___heapset
crt__heapused  . . . . . . . . .	Text   	 _imp___heapused
crt__heapwalk  . . . . . . . . .	Text   	 _imp___heapwalk
crt__hypot . . . . . . . . . . .	Text   	 _imp___hypot
crt__i64toa  . . . . . . . . . .	Text   	 _imp___i64toa
crt__i64tow  . . . . . . . . . .	Text   	 _imp___i64tow
crt__initterm  . . . . . . . . .	Text   	 _imp___initterm
crt__inpd  . . . . . . . . . . .	Text   	 _imp___inpd
crt__inpw  . . . . . . . . . . .	Text   	 _imp___inpw
crt__inp . . . . . . . . . . . .	Text   	 _imp___inp
crt__iob . . . . . . . . . . . .	Text   	 _imp___iob
crt__isatty  . . . . . . . . . .	Text   	 _imp___isatty
crt__isctype . . . . . . . . . .	Text   	 _imp___isctype
crt__ismbbalnum  . . . . . . . .	Text   	 _imp___ismbbalnum
crt__ismbbalpha  . . . . . . . .	Text   	 _imp___ismbbalpha
crt__ismbbgraph  . . . . . . . .	Text   	 _imp___ismbbgraph
crt__ismbbkalnum . . . . . . . .	Text   	 _imp___ismbbkalnum
crt__ismbbkana . . . . . . . . .	Text   	 _imp___ismbbkana
crt__ismbbkprint . . . . . . . .	Text   	 _imp___ismbbkprint
crt__ismbbkpunct . . . . . . . .	Text   	 _imp___ismbbkpunct
crt__ismbblead . . . . . . . . .	Text   	 _imp___ismbblead
crt__ismbbprint  . . . . . . . .	Text   	 _imp___ismbbprint
crt__ismbbpunct  . . . . . . . .	Text   	 _imp___ismbbpunct
crt__ismbbtrail  . . . . . . . .	Text   	 _imp___ismbbtrail
crt__ismbcalnum  . . . . . . . .	Text   	 _imp___ismbcalnum
crt__ismbcalpha  . . . . . . . .	Text   	 _imp___ismbcalpha
crt__ismbcdigit  . . . . . . . .	Text   	 _imp___ismbcdigit
crt__ismbcgraph  . . . . . . . .	Text   	 _imp___ismbcgraph
crt__ismbchira . . . . . . . . .	Text   	 _imp___ismbchira
crt__ismbckata . . . . . . . . .	Text   	 _imp___ismbckata
crt__ismbcl0 . . . . . . . . . .	Text   	 _imp___ismbcl0
crt__ismbcl1 . . . . . . . . . .	Text   	 _imp___ismbcl1
crt__ismbcl2 . . . . . . . . . .	Text   	 _imp___ismbcl2
crt__ismbclegal  . . . . . . . .	Text   	 _imp___ismbclegal
crt__ismbclower  . . . . . . . .	Text   	 _imp___ismbclower
crt__ismbcprint  . . . . . . . .	Text   	 _imp___ismbcprint
crt__ismbcpunct  . . . . . . . .	Text   	 _imp___ismbcpunct
crt__ismbcspace  . . . . . . . .	Text   	 _imp___ismbcspace
crt__ismbcsymbol . . . . . . . .	Text   	 _imp___ismbcsymbol
crt__ismbcupper  . . . . . . . .	Text   	 _imp___ismbcupper
crt__ismbslead . . . . . . . . .	Text   	 _imp___ismbslead
crt__ismbstrail  . . . . . . . .	Text   	 _imp___ismbstrail
crt__isnan . . . . . . . . . . .	Text   	 _imp___isnan
crt__itoa  . . . . . . . . . . .	Text   	 _imp___itoa
crt__itow  . . . . . . . . . . .	Text   	 _imp___itow
crt__j0  . . . . . . . . . . . .	Text   	 _imp___j0
crt__j1  . . . . . . . . . . . .	Text   	 _imp___j1
crt__jn  . . . . . . . . . . . .	Text   	 _imp___jn
crt__kbhit . . . . . . . . . . .	Text   	 _imp___kbhit
crt__lfind . . . . . . . . . . .	Text   	 _imp___lfind
crt__loaddll . . . . . . . . . .	Text   	 _imp___loaddll
crt__local_unwind2 . . . . . . .	Text   	 _imp___local_unwind2
crt__localtime64 . . . . . . . .	Text   	 _imp___localtime64
crt__locking . . . . . . . . . .	Text   	 _imp___locking
crt__lock  . . . . . . . . . . .	Text   	 _imp___lock
crt__logb  . . . . . . . . . . .	Text   	 _imp___logb
crt__longjmpex . . . . . . . . .	Text   	 _imp___longjmpex
crt__lrotl . . . . . . . . . . .	Text   	 _imp___lrotl
crt__lrotr . . . . . . . . . . .	Text   	 _imp___lrotr
crt__lsearch . . . . . . . . . .	Text   	 _imp___lsearch
crt__lseeki64  . . . . . . . . .	Text   	 _imp___lseeki64
crt__lseek . . . . . . . . . . .	Text   	 _imp___lseek
crt__ltoa  . . . . . . . . . . .	Text   	 _imp___ltoa
crt__ltow  . . . . . . . . . . .	Text   	 _imp___ltow
crt__makepath  . . . . . . . . .	Text   	 _imp___makepath
crt__mbbtombc  . . . . . . . . .	Text   	 _imp___mbbtombc
crt__mbbtype . . . . . . . . . .	Text   	 _imp___mbbtype
crt__mbcasemap . . . . . . . . .	Text   	 _imp___mbcasemap
crt__mbccpy  . . . . . . . . . .	Text   	 _imp___mbccpy
crt__mbcjistojms . . . . . . . .	Text   	 _imp___mbcjistojms
crt__mbcjmstojis . . . . . . . .	Text   	 _imp___mbcjmstojis
crt__mbclen  . . . . . . . . . .	Text   	 _imp___mbclen
crt__mbctohira . . . . . . . . .	Text   	 _imp___mbctohira
crt__mbctokata . . . . . . . . .	Text   	 _imp___mbctokata
crt__mbctolower  . . . . . . . .	Text   	 _imp___mbctolower
crt__mbctombb  . . . . . . . . .	Text   	 _imp___mbctombb
crt__mbctoupper  . . . . . . . .	Text   	 _imp___mbctoupper
crt__mbctype . . . . . . . . . .	Text   	 _imp___mbctype
crt__mbsbtype  . . . . . . . . .	Text   	 _imp___mbsbtype
crt__mbscat  . . . . . . . . . .	Text   	 _imp___mbscat
crt__mbschr  . . . . . . . . . .	Text   	 _imp___mbschr
crt__mbscmp  . . . . . . . . . .	Text   	 _imp___mbscmp
crt__mbscoll . . . . . . . . . .	Text   	 _imp___mbscoll
crt__mbscpy  . . . . . . . . . .	Text   	 _imp___mbscpy
crt__mbscspn . . . . . . . . . .	Text   	 _imp___mbscspn
crt__mbsdec  . . . . . . . . . .	Text   	 _imp___mbsdec
crt__mbsdup  . . . . . . . . . .	Text   	 _imp___mbsdup
crt__mbsicmp . . . . . . . . . .	Text   	 _imp___mbsicmp
crt__mbsicoll  . . . . . . . . .	Text   	 _imp___mbsicoll
crt__mbsinc  . . . . . . . . . .	Text   	 _imp___mbsinc
crt__mbslen  . . . . . . . . . .	Text   	 _imp___mbslen
crt__mbslwr  . . . . . . . . . .	Text   	 _imp___mbslwr
crt__mbsnbcat  . . . . . . . . .	Text   	 _imp___mbsnbcat
crt__mbsnbcmp  . . . . . . . . .	Text   	 _imp___mbsnbcmp
crt__mbsnbcnt  . . . . . . . . .	Text   	 _imp___mbsnbcnt
crt__mbsnbcoll . . . . . . . . .	Text   	 _imp___mbsnbcoll
crt__mbsnbcpy  . . . . . . . . .	Text   	 _imp___mbsnbcpy
crt__mbsnbicmp . . . . . . . . .	Text   	 _imp___mbsnbicmp
crt__mbsnbicoll  . . . . . . . .	Text   	 _imp___mbsnbicoll
crt__mbsnbset  . . . . . . . . .	Text   	 _imp___mbsnbset
crt__mbsncat . . . . . . . . . .	Text   	 _imp___mbsncat
crt__mbsnccnt  . . . . . . . . .	Text   	 _imp___mbsnccnt
crt__mbsncmp . . . . . . . . . .	Text   	 _imp___mbsncmp
crt__mbsncoll  . . . . . . . . .	Text   	 _imp___mbsncoll
crt__mbsncpy . . . . . . . . . .	Text   	 _imp___mbsncpy
crt__mbsnextc  . . . . . . . . .	Text   	 _imp___mbsnextc
crt__mbsnicmp  . . . . . . . . .	Text   	 _imp___mbsnicmp
crt__mbsnicoll . . . . . . . . .	Text   	 _imp___mbsnicoll
crt__mbsninc . . . . . . . . . .	Text   	 _imp___mbsninc
crt__mbsnset . . . . . . . . . .	Text   	 _imp___mbsnset
crt__mbspbrk . . . . . . . . . .	Text   	 _imp___mbspbrk
crt__mbsrchr . . . . . . . . . .	Text   	 _imp___mbsrchr
crt__mbsrev  . . . . . . . . . .	Text   	 _imp___mbsrev
crt__mbsset  . . . . . . . . . .	Text   	 _imp___mbsset
crt__mbsspnp . . . . . . . . . .	Text   	 _imp___mbsspnp
crt__mbsspn  . . . . . . . . . .	Text   	 _imp___mbsspn
crt__mbsstr  . . . . . . . . . .	Text   	 _imp___mbsstr
crt__mbstok  . . . . . . . . . .	Text   	 _imp___mbstok
crt__mbstrlen  . . . . . . . . .	Text   	 _imp___mbstrlen
crt__mbsupr  . . . . . . . . . .	Text   	 _imp___mbsupr
crt__memccpy . . . . . . . . . .	Text   	 _imp___memccpy
crt__memicmp . . . . . . . . . .	Text   	 _imp___memicmp
crt__mkdir . . . . . . . . . . .	Text   	 _imp___mkdir
crt__mktemp  . . . . . . . . . .	Text   	 _imp___mktemp
crt__mktime64  . . . . . . . . .	Text   	 _imp___mktime64
crt__msize . . . . . . . . . . .	Text   	 _imp___msize
crt__nextafter . . . . . . . . .	Text   	 _imp___nextafter
crt__onexit  . . . . . . . . . .	Text   	 _imp___onexit
crt__open_osfhandle  . . . . . .	Text   	 _imp___open_osfhandle
crt__open  . . . . . . . . . . .	Text   	 _imp___open
crt__osplatform  . . . . . . . .	Text   	 _imp___osplatform
crt__osver . . . . . . . . . . .	Text   	 _imp___osver
crt__outpd . . . . . . . . . . .	Text   	 _imp___outpd
crt__outpw . . . . . . . . . . .	Text   	 _imp___outpw
crt__outp  . . . . . . . . . . .	Text   	 _imp___outp
crt__pclose  . . . . . . . . . .	Text   	 _imp___pclose
crt__pctype  . . . . . . . . . .	Text   	 _imp___pctype
crt__pgmptr  . . . . . . . . . .	Text   	 _imp___pgmptr
crt__pipe  . . . . . . . . . . .	Text   	 _imp___pipe
crt__popen . . . . . . . . . . .	Text   	 _imp___popen
crt__purecall  . . . . . . . . .	Text   	 _imp___purecall
crt__putch . . . . . . . . . . .	Text   	 _imp___putch
crt__putenv  . . . . . . . . . .	Text   	 _imp___putenv
crt__putws . . . . . . . . . . .	Text   	 _imp___putws
crt__putw  . . . . . . . . . . .	Text   	 _imp___putw
crt__pwctype . . . . . . . . . .	Text   	 _imp___pwctype
crt__read  . . . . . . . . . . .	Text   	 _imp___read
crt__rmdir . . . . . . . . . . .	Text   	 _imp___rmdir
crt__rmtmp . . . . . . . . . . .	Text   	 _imp___rmtmp
crt__rotl  . . . . . . . . . . .	Text   	 _imp___rotl
crt__rotr  . . . . . . . . . . .	Text   	 _imp___rotr
crt__safe_fdivr  . . . . . . . .	Text   	 _imp___safe_fdivr
crt__safe_fdiv . . . . . . . . .	Text   	 _imp___safe_fdiv
crt__safe_fprem1 . . . . . . . .	Text   	 _imp___safe_fprem1
crt__safe_fprem  . . . . . . . .	Text   	 _imp___safe_fprem
crt__scalb . . . . . . . . . . .	Text   	 _imp___scalb
crt__searchenv . . . . . . . . .	Text   	 _imp___searchenv
crt__seh_longjmp_unwind  . . . .	Text   	 _imp___seh_longjmp_unwind
crt__set_error_mode  . . . . . .	Text   	 _imp___set_error_mode
crt__set_sbh_threshold . . . . .	Text   	 _imp___set_sbh_threshold
crt__seterrormode  . . . . . . .	Text   	 _imp___seterrormode
crt__setjmp3 . . . . . . . . . .	Text   	 _imp___setjmp3
crt__setjmp  . . . . . . . . . .	Text   	 _imp___setjmp
crt__setmaxstdio . . . . . . . .	Text   	 _imp___setmaxstdio
crt__setmbcp . . . . . . . . . .	Text   	 _imp___setmbcp
crt__setmode . . . . . . . . . .	Text   	 _imp___setmode
crt__setsystime  . . . . . . . .	Text   	 _imp___setsystime
crt__sleep . . . . . . . . . . .	Text   	 _imp___sleep
crt__snprintf  . . . . . . . . .	Text   	 _imp___snprintf
crt__snwprintf . . . . . . . . .	Text   	 _imp___snwprintf
crt__sopen . . . . . . . . . . .	Text   	 _imp___sopen
crt__spawnle . . . . . . . . . .	Text   	 _imp___spawnle
crt__spawnlpe  . . . . . . . . .	Text   	 _imp___spawnlpe
crt__spawnlp . . . . . . . . . .	Text   	 _imp___spawnlp
crt__spawnl  . . . . . . . . . .	Text   	 _imp___spawnl
crt__spawnve . . . . . . . . . .	Text   	 _imp___spawnve
crt__spawnvpe  . . . . . . . . .	Text   	 _imp___spawnvpe
crt__spawnvp . . . . . . . . . .	Text   	 _imp___spawnvp
crt__spawnv  . . . . . . . . . .	Text   	 _imp___spawnv
crt__splitpath . . . . . . . . .	Text   	 _imp___splitpath
crt__stat64  . . . . . . . . . .	Text   	 _imp___stat64
crt__stati64 . . . . . . . . . .	Text   	 _imp___stati64
crt__statusfp  . . . . . . . . .	Text   	 _imp___statusfp
crt__stat  . . . . . . . . . . .	Text   	 _imp___stat
crt__strcmpi . . . . . . . . . .	Text   	 _imp___strcmpi
crt__strdate . . . . . . . . . .	Text   	 _imp___strdate
crt__strdup  . . . . . . . . . .	Text   	 _imp___strdup
crt__strerror  . . . . . . . . .	Text   	 _imp___strerror
crt__stricmp . . . . . . . . . .	Text   	 _imp___stricmp
crt__stricoll  . . . . . . . . .	Text   	 _imp___stricoll
crt__strlwr  . . . . . . . . . .	Text   	 _imp___strlwr
crt__strncoll  . . . . . . . . .	Text   	 _imp___strncoll
crt__strnicmp  . . . . . . . . .	Text   	 _imp___strnicmp
crt__strnicoll . . . . . . . . .	Text   	 _imp___strnicoll
crt__strnset . . . . . . . . . .	Text   	 _imp___strnset
crt__strrev  . . . . . . . . . .	Text   	 _imp___strrev
crt__strset  . . . . . . . . . .	Text   	 _imp___strset
crt__strtime . . . . . . . . . .	Text   	 _imp___strtime
crt__strupr  . . . . . . . . . .	Text   	 _imp___strupr
crt__swab  . . . . . . . . . . .	Text   	 _imp___swab
crt__sys_errlist . . . . . . . .	Text   	 _imp___sys_errlist
crt__sys_nerr  . . . . . . . . .	Text   	 _imp___sys_nerr
crt__telli64 . . . . . . . . . .	Text   	 _imp___telli64
crt__tell  . . . . . . . . . . .	Text   	 _imp___tell
crt__tempnam . . . . . . . . . .	Text   	 _imp___tempnam
crt__time64  . . . . . . . . . .	Text   	 _imp___time64
crt__timezone  . . . . . . . . .	Text   	 _imp___timezone
crt__tolower . . . . . . . . . .	Text   	 _imp___tolower
crt__toupper . . . . . . . . . .	Text   	 _imp___toupper
crt__tzname  . . . . . . . . . .	Text   	 _imp___tzname
crt__tzset . . . . . . . . . . .	Text   	 _imp___tzset
crt__ui64toa . . . . . . . . . .	Text   	 _imp___ui64toa
crt__ui64tow . . . . . . . . . .	Text   	 _imp___ui64tow
crt__ultoa . . . . . . . . . . .	Text   	 _imp___ultoa
crt__ultow . . . . . . . . . . .	Text   	 _imp___ultow
crt__umask . . . . . . . . . . .	Text   	 _imp___umask
crt__ungetch . . . . . . . . . .	Text   	 _imp___ungetch
crt__unlink  . . . . . . . . . .	Text   	 _imp___unlink
crt__unloaddll . . . . . . . . .	Text   	 _imp___unloaddll
crt__unlock  . . . . . . . . . .	Text   	 _imp___unlock
crt__utime64 . . . . . . . . . .	Text   	 _imp___utime64
crt__utime . . . . . . . . . . .	Text   	 _imp___utime
crt__vsnprintf . . . . . . . . .	Text   	 _imp___vsnprintf
crt__vsnwprintf  . . . . . . . .	Text   	 _imp___vsnwprintf
crt__waccess . . . . . . . . . .	Text   	 _imp___waccess
crt__wasctime  . . . . . . . . .	Text   	 _imp___wasctime
crt__wchdir  . . . . . . . . . .	Text   	 _imp___wchdir
crt__wchmod  . . . . . . . . . .	Text   	 _imp___wchmod
crt__wcmdln  . . . . . . . . . .	Text   	 _imp___wcmdln
crt__wcreat  . . . . . . . . . .	Text   	 _imp___wcreat
crt__wcsdup  . . . . . . . . . .	Text   	 _imp___wcsdup
crt__wcsicmp . . . . . . . . . .	Text   	 _imp___wcsicmp
crt__wcsicoll  . . . . . . . . .	Text   	 _imp___wcsicoll
crt__wcslwr  . . . . . . . . . .	Text   	 _imp___wcslwr
crt__wcsncoll  . . . . . . . . .	Text   	 _imp___wcsncoll
crt__wcsnicmp  . . . . . . . . .	Text   	 _imp___wcsnicmp
crt__wcsnicoll . . . . . . . . .	Text   	 _imp___wcsnicoll
crt__wcsnset . . . . . . . . . .	Text   	 _imp___wcsnset
crt__wcsrev  . . . . . . . . . .	Text   	 _imp___wcsrev
crt__wcsset  . . . . . . . . . .	Text   	 _imp___wcsset
crt__wcsupr  . . . . . . . . . .	Text   	 _imp___wcsupr
crt__wctime64  . . . . . . . . .	Text   	 _imp___wctime64
crt__wctime  . . . . . . . . . .	Text   	 _imp___wctime
crt__wenviron  . . . . . . . . .	Text   	 _imp___wenviron
crt__wexecle . . . . . . . . . .	Text   	 _imp___wexecle
crt__wexeclpe  . . . . . . . . .	Text   	 _imp___wexeclpe
crt__wexeclp . . . . . . . . . .	Text   	 _imp___wexeclp
crt__wexecl  . . . . . . . . . .	Text   	 _imp___wexecl
crt__wexecve . . . . . . . . . .	Text   	 _imp___wexecve
crt__wexecvpe  . . . . . . . . .	Text   	 _imp___wexecvpe
crt__wexecvp . . . . . . . . . .	Text   	 _imp___wexecvp
crt__wexecv  . . . . . . . . . .	Text   	 _imp___wexecv
crt__wfdopen . . . . . . . . . .	Text   	 _imp___wfdopen
crt__wfindfirst64  . . . . . . .	Text   	 _imp___wfindfirst64
crt__wfindfirsti64 . . . . . . .	Text   	 _imp___wfindfirsti64
crt__wfindfirst  . . . . . . . .	Text   	 _imp___wfindfirst
crt__wfindnext64 . . . . . . . .	Text   	 _imp___wfindnext64
crt__wfindnexti64  . . . . . . .	Text   	 _imp___wfindnexti64
crt__wfindnext . . . . . . . . .	Text   	 _imp___wfindnext
crt__wfopen  . . . . . . . . . .	Text   	 _imp___wfopen
crt__wfreopen  . . . . . . . . .	Text   	 _imp___wfreopen
crt__wfsopen . . . . . . . . . .	Text   	 _imp___wfsopen
crt__wfullpath . . . . . . . . .	Text   	 _imp___wfullpath
crt__wgetcwd . . . . . . . . . .	Text   	 _imp___wgetcwd
crt__wgetdcwd  . . . . . . . . .	Text   	 _imp___wgetdcwd
crt__wgetenv . . . . . . . . . .	Text   	 _imp___wgetenv
crt__winmajor  . . . . . . . . .	Text   	 _imp___winmajor
crt__winminor  . . . . . . . . .	Text   	 _imp___winminor
crt__winver  . . . . . . . . . .	Text   	 _imp___winver
crt__wmakepath . . . . . . . . .	Text   	 _imp___wmakepath
crt__wmkdir  . . . . . . . . . .	Text   	 _imp___wmkdir
crt__wmktemp . . . . . . . . . .	Text   	 _imp___wmktemp
crt__wopen . . . . . . . . . . .	Text   	 _imp___wopen
crt__wperror . . . . . . . . . .	Text   	 _imp___wperror
crt__wpgmptr . . . . . . . . . .	Text   	 _imp___wpgmptr
crt__wpopen  . . . . . . . . . .	Text   	 _imp___wpopen
crt__wputenv . . . . . . . . . .	Text   	 _imp___wputenv
crt__wremove . . . . . . . . . .	Text   	 _imp___wremove
crt__wrename . . . . . . . . . .	Text   	 _imp___wrename
crt__write . . . . . . . . . . .	Text   	 _imp___write
crt__wrmdir  . . . . . . . . . .	Text   	 _imp___wrmdir
crt__wsearchenv  . . . . . . . .	Text   	 _imp___wsearchenv
crt__wsetlocale  . . . . . . . .	Text   	 _imp___wsetlocale
crt__wsopen  . . . . . . . . . .	Text   	 _imp___wsopen
crt__wspawnle  . . . . . . . . .	Text   	 _imp___wspawnle
crt__wspawnlpe . . . . . . . . .	Text   	 _imp___wspawnlpe
crt__wspawnlp  . . . . . . . . .	Text   	 _imp___wspawnlp
crt__wspawnl . . . . . . . . . .	Text   	 _imp___wspawnl
crt__wspawnve  . . . . . . . . .	Text   	 _imp___wspawnve
crt__wspawnvpe . . . . . . . . .	Text   	 _imp___wspawnvpe
crt__wspawnvp  . . . . . . . . .	Text   	 _imp___wspawnvp
crt__wspawnv . . . . . . . . . .	Text   	 _imp___wspawnv
crt__wsplitpath  . . . . . . . .	Text   	 _imp___wsplitpath
crt__wstat64 . . . . . . . . . .	Text   	 _imp___wstat64
crt__wstati64  . . . . . . . . .	Text   	 _imp___wstati64
crt__wstat . . . . . . . . . . .	Text   	 _imp___wstat
crt__wstrdate  . . . . . . . . .	Text   	 _imp___wstrdate
crt__wstrtime  . . . . . . . . .	Text   	 _imp___wstrtime
crt__wsystem . . . . . . . . . .	Text   	 _imp___wsystem
crt__wtempnam  . . . . . . . . .	Text   	 _imp___wtempnam
crt__wtmpnam . . . . . . . . . .	Text   	 _imp___wtmpnam
crt__wtoi64  . . . . . . . . . .	Text   	 _imp___wtoi64
crt__wtoi  . . . . . . . . . . .	Text   	 _imp___wtoi
crt__wtol  . . . . . . . . . . .	Text   	 _imp___wtol
crt__wunlink . . . . . . . . . .	Text   	 _imp___wunlink
crt__wutime64  . . . . . . . . .	Text   	 _imp___wutime64
crt__wutime  . . . . . . . . . .	Text   	 _imp___wutime
crt__y0  . . . . . . . . . . . .	Text   	 _imp___y0
crt__y1  . . . . . . . . . . . .	Text   	 _imp___y1
crt__yn  . . . . . . . . . . . .	Text   	 _imp___yn
crt_abort  . . . . . . . . . . .	Text   	 _imp__abort
crt_abs  . . . . . . . . . . . .	Text   	 _imp__abs
crt_acos . . . . . . . . . . . .	Text   	 _imp__acos
crt_asctime  . . . . . . . . . .	Text   	 _imp__asctime
crt_asin . . . . . . . . . . . .	Text   	 _imp__asin
crt_atan2  . . . . . . . . . . .	Text   	 _imp__atan2
crt_atan . . . . . . . . . . . .	Text   	 _imp__atan
crt_atexit . . . . . . . . . . .	Text   	 _imp__atexit
crt_atof . . . . . . . . . . . .	Text   	 _imp__atof
crt_atoi . . . . . . . . . . . .	Text   	 _imp__atoi
crt_atol . . . . . . . . . . . .	Text   	 _imp__atol
crt_bsearch  . . . . . . . . . .	Text   	 _imp__bsearch
crt_calloc . . . . . . . . . . .	Text   	 _imp__calloc
crt_ceil . . . . . . . . . . . .	Text   	 _imp__ceil
crt_clearerr . . . . . . . . . .	Text   	 _imp__clearerr
crt_clock  . . . . . . . . . . .	Text   	 _imp__clock
crt_cosh . . . . . . . . . . . .	Text   	 _imp__cosh
crt_cos  . . . . . . . . . . . .	Text   	 _imp__cos
crt_ctime  . . . . . . . . . . .	Text   	 _imp__ctime
crt_difftime . . . . . . . . . .	Text   	 _imp__difftime
crt_div  . . . . . . . . . . . .	Text   	 _imp__div
crt_exit . . . . . . . . . . . .	Text   	 _imp__exit
crt_exp  . . . . . . . . . . . .	Text   	 _imp__exp
crt_fabs . . . . . . . . . . . .	Text   	 _imp__fabs
crt_fclose . . . . . . . . . . .	Text   	 _imp__fclose
crt_feof . . . . . . . . . . . .	Text   	 _imp__feof
crt_ferror . . . . . . . . . . .	Text   	 _imp__ferror
crt_fflush . . . . . . . . . . .	Text   	 _imp__fflush
crt_fgetc  . . . . . . . . . . .	Text   	 _imp__fgetc
crt_fgetpos  . . . . . . . . . .	Text   	 _imp__fgetpos
crt_fgets  . . . . . . . . . . .	Text   	 _imp__fgets
crt_fgetwc . . . . . . . . . . .	Text   	 _imp__fgetwc
crt_fgetws . . . . . . . . . . .	Text   	 _imp__fgetws
crt_floor  . . . . . . . . . . .	Text   	 _imp__floor
crt_fmod . . . . . . . . . . . .	Text   	 _imp__fmod
crt_fopen  . . . . . . . . . . .	Text   	 _imp__fopen
crt_fprintf  . . . . . . . . . .	Text   	 _imp__fprintf
crt_fputc  . . . . . . . . . . .	Text   	 _imp__fputc
crt_fputs  . . . . . . . . . . .	Text   	 _imp__fputs
crt_fputwc . . . . . . . . . . .	Text   	 _imp__fputwc
crt_fputws . . . . . . . . . . .	Text   	 _imp__fputws
crt_fread  . . . . . . . . . . .	Text   	 _imp__fread
crt_free . . . . . . . . . . . .	Text   	 _imp__free
crt_freopen  . . . . . . . . . .	Text   	 _imp__freopen
crt_frexp  . . . . . . . . . . .	Text   	 _imp__frexp
crt_fscanf . . . . . . . . . . .	Text   	 _imp__fscanf
crt_fseek  . . . . . . . . . . .	Text   	 _imp__fseek
crt_fsetpos  . . . . . . . . . .	Text   	 _imp__fsetpos
crt_ftell  . . . . . . . . . . .	Text   	 _imp__ftell
crt_fwprintf . . . . . . . . . .	Text   	 _imp__fwprintf
crt_fwrite . . . . . . . . . . .	Text   	 _imp__fwrite
crt_fwscanf  . . . . . . . . . .	Text   	 _imp__fwscanf
crt_getchar  . . . . . . . . . .	Text   	 _imp__getchar
crt_getc . . . . . . . . . . . .	Text   	 _imp__getc
crt_getenv . . . . . . . . . . .	Text   	 _imp__getenv
crt_gets . . . . . . . . . . . .	Text   	 _imp__gets
crt_getwchar . . . . . . . . . .	Text   	 _imp__getwchar
crt_getwc  . . . . . . . . . . .	Text   	 _imp__getwc
crt_gmtime . . . . . . . . . . .	Text   	 _imp__gmtime
crt_is_wctype  . . . . . . . . .	Text   	 _imp__is_wctype
crt_isalnum  . . . . . . . . . .	Text   	 _imp__isalnum
crt_isalpha  . . . . . . . . . .	Text   	 _imp__isalpha
crt_iscntrl  . . . . . . . . . .	Text   	 _imp__iscntrl
crt_isdigit  . . . . . . . . . .	Text   	 _imp__isdigit
crt_isgraph  . . . . . . . . . .	Text   	 _imp__isgraph
crt_isleadbyte . . . . . . . . .	Text   	 _imp__isleadbyte
crt_islower  . . . . . . . . . .	Text   	 _imp__islower
crt_isprint  . . . . . . . . . .	Text   	 _imp__isprint
crt_ispunct  . . . . . . . . . .	Text   	 _imp__ispunct
crt_isspace  . . . . . . . . . .	Text   	 _imp__isspace
crt_isupper  . . . . . . . . . .	Text   	 _imp__isupper
crt_iswalnum . . . . . . . . . .	Text   	 _imp__iswalnum
crt_iswalpha . . . . . . . . . .	Text   	 _imp__iswalpha
crt_iswascii . . . . . . . . . .	Text   	 _imp__iswascii
crt_iswcntrl . . . . . . . . . .	Text   	 _imp__iswcntrl
crt_iswctype . . . . . . . . . .	Text   	 _imp__iswctype
crt_iswdigit . . . . . . . . . .	Text   	 _imp__iswdigit
crt_iswgraph . . . . . . . . . .	Text   	 _imp__iswgraph
crt_iswlower . . . . . . . . . .	Text   	 _imp__iswlower
crt_iswprint . . . . . . . . . .	Text   	 _imp__iswprint
crt_iswpunct . . . . . . . . . .	Text   	 _imp__iswpunct
crt_iswspace . . . . . . . . . .	Text   	 _imp__iswspace
crt_iswupper . . . . . . . . . .	Text   	 _imp__iswupper
crt_iswxdigit  . . . . . . . . .	Text   	 _imp__iswxdigit
crt_isxdigit . . . . . . . . . .	Text   	 _imp__isxdigit
crt_labs . . . . . . . . . . . .	Text   	 _imp__labs
crt_ldexp  . . . . . . . . . . .	Text   	 _imp__ldexp
crt_ldiv . . . . . . . . . . . .	Text   	 _imp__ldiv
crt_localeconv . . . . . . . . .	Text   	 _imp__localeconv
crt_localtime  . . . . . . . . .	Text   	 _imp__localtime
crt_log10  . . . . . . . . . . .	Text   	 _imp__log10
crt_log  . . . . . . . . . . . .	Text   	 _imp__log
crt_longjmp  . . . . . . . . . .	Text   	 _imp__longjmp
crt_malloc . . . . . . . . . . .	Text   	 _imp__malloc
crt_mblen  . . . . . . . . . . .	Text   	 _imp__mblen
crt_mbstowcs . . . . . . . . . .	Text   	 _imp__mbstowcs
crt_mbtowc . . . . . . . . . . .	Text   	 _imp__mbtowc
crt_memchr . . . . . . . . . . .	Text   	 _imp__memchr
crt_memcmp . . . . . . . . . . .	Text   	 _imp__memcmp
crt_memcpy . . . . . . . . . . .	Text   	 _imp__memcpy
crt_memmove  . . . . . . . . . .	Text   	 _imp__memmove
crt_memset . . . . . . . . . . .	Text   	 _imp__memset
crt_mktime . . . . . . . . . . .	Text   	 _imp__mktime
crt_modf . . . . . . . . . . . .	Text   	 _imp__modf
crt_perror . . . . . . . . . . .	Text   	 _imp__perror
crt_pow  . . . . . . . . . . . .	Text   	 _imp__pow
crt_printf . . . . . . . . . . .	Text   	 _imp__printf
crt_putchar  . . . . . . . . . .	Text   	 _imp__putchar
crt_putc . . . . . . . . . . . .	Text   	 _imp__putc
crt_puts . . . . . . . . . . . .	Text   	 _imp__puts
crt_putwchar . . . . . . . . . .	Text   	 _imp__putwchar
crt_putwc  . . . . . . . . . . .	Text   	 _imp__putwc
crt_qsort  . . . . . . . . . . .	Text   	 _imp__qsort
crt_raise  . . . . . . . . . . .	Text   	 _imp__raise
crt_rand . . . . . . . . . . . .	Text   	 _imp__rand
crt_realloc  . . . . . . . . . .	Text   	 _imp__realloc
crt_remove . . . . . . . . . . .	Text   	 _imp__remove
crt_rename . . . . . . . . . . .	Text   	 _imp__rename
crt_rewind . . . . . . . . . . .	Text   	 _imp__rewind
crt_scanf  . . . . . . . . . . .	Text   	 _imp__scanf
crt_setbuf . . . . . . . . . . .	Text   	 _imp__setbuf
crt_setlocale  . . . . . . . . .	Text   	 _imp__setlocale
crt_setvbuf  . . . . . . . . . .	Text   	 _imp__setvbuf
crt_signal . . . . . . . . . . .	Text   	 _imp__signal
crt_sinh . . . . . . . . . . . .	Text   	 _imp__sinh
crt_sin  . . . . . . . . . . . .	Text   	 _imp__sin
crt_sprintf  . . . . . . . . . .	Text   	 _imp__sprintf
crt_sqrt . . . . . . . . . . . .	Text   	 _imp__sqrt
crt_srand  . . . . . . . . . . .	Text   	 _imp__srand
crt_sscanf . . . . . . . . . . .	Text   	 _imp__sscanf
crt_strcat . . . . . . . . . . .	Text   	 _imp__strcat
crt_strchr . . . . . . . . . . .	Text   	 _imp__strchr
crt_strcmp . . . . . . . . . . .	Text   	 _imp__strcmp
crt_strcoll  . . . . . . . . . .	Text   	 _imp__strcoll
crt_strcpy . . . . . . . . . . .	Text   	 _imp__strcpy
crt_strcspn  . . . . . . . . . .	Text   	 _imp__strcspn
crt_strerror . . . . . . . . . .	Text   	 _imp__strerror
crt_strftime . . . . . . . . . .	Text   	 _imp__strftime
crt_strlen . . . . . . . . . . .	Text   	 _imp__strlen
crt_strncat  . . . . . . . . . .	Text   	 _imp__strncat
crt_strncmp  . . . . . . . . . .	Text   	 _imp__strncmp
crt_strncpy  . . . . . . . . . .	Text   	 _imp__strncpy
crt_strpbrk  . . . . . . . . . .	Text   	 _imp__strpbrk
crt_strrchr  . . . . . . . . . .	Text   	 _imp__strrchr
crt_strspn . . . . . . . . . . .	Text   	 _imp__strspn
crt_strstr . . . . . . . . . . .	Text   	 _imp__strstr
crt_strtod . . . . . . . . . . .	Text   	 _imp__strtod
crt_strtok . . . . . . . . . . .	Text   	 _imp__strtok
crt_strtol . . . . . . . . . . .	Text   	 _imp__strtol
crt_strtoul  . . . . . . . . . .	Text   	 _imp__strtoul
crt_strxfrm  . . . . . . . . . .	Text   	 _imp__strxfrm
crt_swprintf . . . . . . . . . .	Text   	 _imp__swprintf
crt_swscanf  . . . . . . . . . .	Text   	 _imp__swscanf
crt_system . . . . . . . . . . .	Text   	 _imp__system
crt_tanh . . . . . . . . . . . .	Text   	 _imp__tanh
crt_tan  . . . . . . . . . . . .	Text   	 _imp__tan
crt_time . . . . . . . . . . . .	Text   	 _imp__time
crt_tmpfile  . . . . . . . . . .	Text   	 _imp__tmpfile
crt_tmpnam . . . . . . . . . . .	Text   	 _imp__tmpnam
crt_tolower  . . . . . . . . . .	Text   	 _imp__tolower
crt_toupper  . . . . . . . . . .	Text   	 _imp__toupper
crt_towlower . . . . . . . . . .	Text   	 _imp__towlower
crt_towupper . . . . . . . . . .	Text   	 _imp__towupper
crt_ungetc . . . . . . . . . . .	Text   	 _imp__ungetc
crt_ungetwc  . . . . . . . . . .	Text   	 _imp__ungetwc
crt_vfprintf . . . . . . . . . .	Text   	 _imp__vfprintf
crt_vfwprintf  . . . . . . . . .	Text   	 _imp__vfwprintf
crt_vprintf  . . . . . . . . . .	Text   	 _imp__vprintf
crt_vsprintf . . . . . . . . . .	Text   	 _imp__vsprintf
crt_vswprintf  . . . . . . . . .	Text   	 _imp__vswprintf
crt_vwprintf . . . . . . . . . .	Text   	 _imp__vwprintf
crt_wcscat . . . . . . . . . . .	Text   	 _imp__wcscat
crt_wcschr . . . . . . . . . . .	Text   	 _imp__wcschr
crt_wcscmp . . . . . . . . . . .	Text   	 _imp__wcscmp
crt_wcscoll  . . . . . . . . . .	Text   	 _imp__wcscoll
crt_wcscpy . . . . . . . . . . .	Text   	 _imp__wcscpy
crt_wcscspn  . . . . . . . . . .	Text   	 _imp__wcscspn
crt_wcsftime . . . . . . . . . .	Text   	 _imp__wcsftime
crt_wcslen . . . . . . . . . . .	Text   	 _imp__wcslen
crt_wcsncat  . . . . . . . . . .	Text   	 _imp__wcsncat
crt_wcsncmp  . . . . . . . . . .	Text   	 _imp__wcsncmp
crt_wcsncpy  . . . . . . . . . .	Text   	 _imp__wcsncpy
crt_wcspbrk  . . . . . . . . . .	Text   	 _imp__wcspbrk
crt_wcsrchr  . . . . . . . . . .	Text   	 _imp__wcsrchr
crt_wcsspn . . . . . . . . . . .	Text   	 _imp__wcsspn
crt_wcsstr . . . . . . . . . . .	Text   	 _imp__wcsstr
crt_wcstod . . . . . . . . . . .	Text   	 _imp__wcstod
crt_wcstok . . . . . . . . . . .	Text   	 _imp__wcstok
crt_wcstol . . . . . . . . . . .	Text   	 _imp__wcstol
crt_wcstombs . . . . . . . . . .	Text   	 _imp__wcstombs
crt_wcstoul  . . . . . . . . . .	Text   	 _imp__wcstoul
crt_wcsxfrm  . . . . . . . . . .	Text   	 _imp__wcsxfrm
crt_wctomb . . . . . . . . . . .	Text   	 _imp__wctomb
crt_wprintf  . . . . . . . . . .	Text   	 _imp__wprintf
crt_wscanf . . . . . . . . . . .	Text   	 _imp__wscanf
label0 . . . . . . . . . . . . .	L Near	 00000037 _TEXT	
label6 . . . . . . . . . . . . .	L Near	 00000043 _TEXT	
lstrcat  . . . . . . . . . . . .	Text   	 lstrcatA
lstrcmpi . . . . . . . . . . . .	Text   	 lstrcmpiA
lstrcmp  . . . . . . . . . . . .	Text   	 lstrcmpA
lstrcpyn . . . . . . . . . . . .	Text   	 lstrcpynA
lstrcpy  . . . . . . . . . . . .	Text   	 lstrcpyA
lstrlen  . . . . . . . . . . . .	Text   	 lstrlenA
quanju$0 . . . . . . . . . . . .	DWord	 00000000 _DATA	

	   2 Warnings
	   0 Errors
